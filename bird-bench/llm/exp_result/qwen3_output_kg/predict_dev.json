{
    "0": "SELECT MAX(`Free Meal Count (K-12)` / `Enrollment (K-12)`) AS MaxEligibleFreeRate\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.County = 'Alameda';\t----- bird -----\tcalifornia_schools",
    "1": "SELECT \n    frpm.CDSCode,\n    schools.School,\n    frpm.`Enrollment (Ages 5-17)` AS Enrollment,\n    frpm.`Free Meal Count (Ages 5-17)` AS FreeMealCount,\n    (frpm.`Free Meal Count (Ages 5-17)` / frpm.`Enrollment (Ages 5-17)`) AS EligibleFreeRate\nFROM \n    frpm\nJOIN \n    schools ON frpm.CDSCode = schools.CDSCode\nWHERE \n    schools.`School Type` = 'Continuation'\n    AND frpm.`Enrollment (Ages 5-17)` > 0\nORDER BY \n    EligibleFreeRate ASC\nLIMIT 3;\t----- bird -----\tcalifornia_schools",
    "2": "SELECT DISTINCT s.Zip\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE f.`Charter School (Y/N)` = 1\n  AND s.County = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "3": "SELECT \n    s.MailStreet\nFROM \n    frpm f\nJOIN \n    schools s ON f.CDSCode = s.CDSCode\nORDER BY \n    f.`FRPM Count (K-12)` DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "4": "SELECT DISTINCT s.Phone\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE f.`Charter School (Y/N)` = 1\n  AND s.OpenDate > '2000-01-01';\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(*) AS VirtualSchoolsAbove400\nFROM satscores s\nJOIN schools sc ON s.cds = sc.CDSCode\nWHERE s.AvgScrMath > 400\n  AND sc.Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "6": "SELECT \n    s.School AS SchoolName,\n    sat.NumTstTakr AS TestTakers,\n    s.CDSCode\nFROM \n    satscores sat\nJOIN \n    schools s ON sat.cds = s.CDSCode\nWHERE \n    sat.NumTstTakr > 500\n    AND s.Magnet = 1;\t----- bird -----\tcalifornia_schools",
    "7": "SELECT s.Phone\nFROM satscores sat\nJOIN schools s ON sat.cds = s.CDSCode\nWHERE sat.NumGE1500 IS NOT NULL\nORDER BY sat.NumGE1500 DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "8": "SELECT s.NumTstTakr\nFROM satscores s\nJOIN frpm f ON s.cds = f.CDSCode\nWHERE f.`FRPM Count (K-12)` = (\n    SELECT MAX(`FRPM Count (K-12)`)\n    FROM frpm\n);\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(*) AS CharterFundedSchools\nFROM satscores s\nJOIN schools sc ON s.cds = sc.CDSCode\nWHERE s.AvgScrMath > 560\n  AND sc.FundingType = 'Charter';\t----- bird -----\tcalifornia_schools",
    "10": "SELECT f.`FRPM Count (Ages 5-17)`\nFROM satscores s\nJOIN frpm f ON s.cds = f.CDSCode\nWHERE s.rtype = 'SAT'\nORDER BY s.AvgScrRead DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "11": "SELECT frpm.CDSCode\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE (frpm.`Enrollment (K-12)` + frpm.`Enrollment (Ages 5-17)`) > 500;\t----- bird -----\tcalifornia_schools",
    "12": "with the `frpm` table** using the `cds` (which is the same as `CDSCode` in `frpm` and `schools`).\n\n4. **Calculate the eligible free rate for students aged 5-17** using the formula:\n   ```\n   Eligible Free Rate (Ages 5-17) = `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`\n   ```\n\n5. **Find the highest eligible free rate** among those schools.\n\n---\n\n### \u2705 Final SQL Query:\n\n```sql\nSELECT \n    MAX(f.`Free Meal Count (Ages 5-17)` / f.`Enrollment (Ages 5-17)`) AS MaxEligibleFreeRate\nFROM \n    satscores s\nJOIN \n    frpm f ON s.cds = f.CDSCode\nWHERE \n    s.NumGE1500 / s.NumTstTakr > 0.3;\t----- bird -----\tcalifornia_schools",
    "13": "SELECT \n    s.Phone,\n    (sats.NumGE1500 * 1.0 / sats.NumTstTakr) AS ExcellenceRate\nFROM \n    satscores sats\nJOIN \n    schools s ON sats.cds = s.CDSCode\nWHERE \n    sats.rtype = 'S'\n    AND sats.NumTstTakr > 0\nORDER BY \n    ExcellenceRate DESC\nLIMIT 3;\t----- bird -----\tcalifornia_schools",
    "14": "SELECT \n    s.NCESSchool AS NCES_School_ID,\n    frpm.`Enrollment (Ages 5-17)` AS Enrollment_Ages_5_17\nFROM \n    frpm\nJOIN \n    schools s ON frpm.CDSCode = s.CDSCode\nWHERE \n    frpm.`Enrollment (Ages 5-17)` IS NOT NULL\nORDER BY \n    frpm.`Enrollment (Ages 5-17)` DESC\nLIMIT 5;\t----- bird -----\tcalifornia_schools",
    "15": "SELECT \n    s.District,\n    AVG(ss.AvgScrRead) AS AvgReadingScore\nFROM \n    satscores ss\nJOIN \n    schools s ON ss.cds = s.CDSCode\nWHERE \n    s.StatusType = 'Active'\nGROUP BY \n    s.District\nORDER BY \n    AvgReadingScore DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(*) AS SchoolCount\nFROM satscores\nJOIN schools ON satscores.cds = schools.CDSCode\nWHERE schools.County = 'Alameda'\n  AND satscores.NumTstTakr < 100;\t----- bird -----\tcalifornia_schools",
    "17": "SELECT \n    s.School,\n    ss.AvgScrWrite,\n    sc.CharterNum\nFROM \n    satscores ss\nJOIN \n    schools sc ON ss.cds = sc.CDSCode\nWHERE \n    ss.AvgScrWrite > 499\nORDER BY \n    ss.AvgScrWrite DESC;\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(*) AS NumSchools\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.County = 'Fresno'\n  AND s.FundingType = 'Directly Funded'\n  AND ss.NumTstTakr <= 250;\t----- bird -----\tcalifornia_schools",
    "19": "SELECT s.Phone\nFROM satscores sat\nJOIN schools s ON sat.cds = s.CDSCode\nWHERE sat.rtype = 'S'  -- 'S' indicates school-level data\n  AND sat.AvgScrMath IS NOT NULL\nORDER BY sat.AvgScrMath DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) AS SchoolCount\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.County = 'Amador'\n  AND f.`Low Grade` = '9'\n  AND f.`High Grade` = '12';\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*) AS SchoolCount\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.County = 'Los Angeles'\n  AND frpm.`Free Meal Count (K-12)` > 500\n  AND frpm.`FRPM Count (K-12)` < 700;\t----- bird -----\tcalifornia_schools",
    "22": "SELECT \n    s.School,\n    ss.NumTstTakr\nFROM \n    satscores ss\nJOIN \n    schools s ON ss.cds = s.CDSCode\nWHERE \n    s.County = 'Contra Costa'\nORDER BY \n    ss.NumTstTakr DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "23": "SELECT \n    frpm.`School Name`,\n    schools.Street || ', ' || schools.City || ', ' || schools.State || ' ' || schools.Zip AS FullAddress\nFROM \n    frpm\nJOIN \n    schools ON frpm.CDSCode = schools.CDSCode\nWHERE \n    frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)` > 30;\t----- bird -----\tcalifornia_schools",
    "24": "SELECT DISTINCT s.School\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE f.`Percent (%) Eligible Free (K-12)` > 0.1\n  AND ss.NumGE1500 > 0;\t----- bird -----\tcalifornia_schools",
    "25": "SELECT \n    s.School,\n    s.FundingType\nFROM \n    schools s\nJOIN \n    satscores sat ON s.CDSCode = sat.cds\nWHERE \n    s.County = 'Riverside'\n    AND sat.AvgScrMath > 400;\t----- bird -----\tcalifornia_schools",
    "26": "SELECT \n    s.School AS SchoolName,\n    s.Street || ', ' || s.City || ', ' || s.State || ' ' || s.Zip AS FullCommunicationAddress\nFROM \n    frpm f\nJOIN \n    schools s ON f.CDSCode = s.CDSCode\nWHERE \n    s.County = 'Monterey'\n    AND f.`School Type` = 'High School'\n    AND f.`FRPM Count (Ages 5-17)` > 800;\t----- bird -----\tcalifornia_schools",
    "27": "SELECT \n    s.School AS SchoolName,\n    s.Phone AS CommunicationNumber,\n    AVG(ss.AvgScrWrite) AS AverageWritingScore\nFROM \n    schools s\nJOIN \n    satscores ss ON s.CDSCode = ss.cds\nWHERE \n    (s.OpenDate > '1991-12-31' OR s.ClosedDate < '2000-01-01')\nGROUP BY \n    s.School, s.Phone;\t----- bird -----\tcalifornia_schools",
    "28": "SELECT \n    s.School,\n    s.DOCType,\n    (f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) AS EnrollmentDifference\nFROM \n    frpm f\nJOIN \n    schools s ON f.CDSCode = s.CDSCode\nWHERE \n    s.FundingType = 'Local'\n    AND (f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > (\n        SELECT \n            AVG(f2.`Enrollment (K-12)` - f2.`Enrollment (Ages 5-17)`)\n        FROM \n            frpm f2\n        JOIN \n            schools s2 ON f2.CDSCode = s2.CDSCode\n        WHERE \n            s2.FundingType = 'Local'\n    );\t----- bird -----\tcalifornia_schools",
    "29": "SELECT s.OpenDate\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE f.`High Grade` = '12' AND f.`Low Grade` = 'K'\nORDER BY f.`Enrollment (K-12)` DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "30": "SELECT \n    s.City,\n    SUM(f.`Enrollment (K-12)`) AS TotalEnrollment\nFROM \n    frpm f\nJOIN \n    schools s ON f.CDSCode = s.CDSCode\nWHERE \n    s.City IS NOT NULL\nGROUP BY \n    s.City\nORDER BY \n    TotalEnrollment ASC\nLIMIT 5;\t----- bird -----\tcalifornia_schools",
    "31": "with the highest enrollment for students in grades 1 through 12?**\n\nWe need to:\n\n1. **Join** the `frpm` and `schools` tables using the `CDSCode`.\n2. **Filter** for schools that have valid `Enrollment (K-12)` values.\n3. **Order** the schools by `Enrollment (K-12)` in descending order.\n4. **Limit** the result to the **10th and 11th** schools in this sorted list.\n5. **Calculate** the **eligible free rate** using the formula:\n   ```\n   Eligible Free Rate = `Free Meal Count (K-12)` / `Enrollment (K-12)`\n   ```\n\nHere is the **SQL query** to achieve this:\n\n```sql\nSELECT \n    frpm.`School Name`,\n    frpm.`Enrollment (K-12)`,\n    frpm.`Free Meal Count (K-12)`,\n    frpm.`Percent (%) Eligible Free (K-12)` AS EligibleFreeRate,\n    schools.County,\n    schools.District\nFROM \n    frpm\nJOIN \n    schools ON frpm.CDSCode = schools.CDSCode\nWHERE \n    frpm.`Enrollment (K-12)` IS NOT NULL\n    AND frpm.`Free Meal Count (K-12)` IS NOT NULL\nORDER BY \n    frpm.`Enrollment (K-12)` DESC\nLIMIT 2 OFFSET 9;\t----- bird -----\tcalifornia_schools",
    "32": "with the highest free or reduced price meal count of the schools with the ownership code 66?**\n\nWe need to:\n\n1. **Understand the relevant tables and fields:**\n   - `frpm` table contains the `FRPM Count (K-12)` and `Enrollment (K-12)` fields.\n   - `schools` table contains the `DOC` field, which is the **ownership code**.\n   - We are interested in schools with `DOC = '66'` (ownership code 66).\n   - We need to calculate the **eligible free or reduced price meal rate** as:\n     ```\n     FRPM Count (K-12) / Enrollment (K-12)\n     ```\n   - We want the **top 5 schools** with the **highest `FRPM Count (K-12)`**.\n\n2. **Join the `frpm` and `schools` tables** on `CDSCode`.\n\n3. **Filter** for `schools.DOC = '66'`.\n\n4. **Order by `FRPM Count (K-12)` descending**, and **limit to 5**.\n\n5. **Calculate the rate** using the formula.\n\n---\n\n### \u2705 Final SQL Query:\n\n```sql\nSELECT \n    frpm.`School Name`,\n    frpm.`FRPM Count (K-12)`,\n    frpm.`Enrollment (K-12)`,\n    (frpm.`FRPM Count (K-12)` / frpm.`Enrollment (K-12)`) AS `FRPM Rate (%)`\nFROM \n    frpm\nJOIN \n    schools ON frpm.CDSCode = schools.CDSCode\nWHERE \n    schools.DOC = '66'\n    AND frpm.`Enrollment (K-12)` > 0\nORDER BY \n    frpm.`FRPM Count (K-12)` DESC\nLIMIT 5;\t----- bird -----\tcalifornia_schools",
    "33": "SELECT \n    s.School AS SchoolName,\n    s.Website\nFROM \n    frpm f\nJOIN \n    schools s ON f.CDSCode = s.CDSCode\nWHERE \n    f.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000;\t----- bird -----\tcalifornia_schools",
    "34": "SELECT \n    f.`Free Meal Count (Ages 5-17)`,\n    f.`Enrollment (Ages 5-17)`,\n    (f.`Free Meal Count (Ages 5-17)` / f.`Enrollment (Ages 5-17)`) AS FreeRate\nFROM \n    frpm f\nJOIN \n    schools s ON f.CDSCode = s.CDSCode\nWHERE \n    s.AdmLName1 = 'Gibson'\n    AND s.AdmFName1 = 'Kacey';\t----- bird -----\tcalifornia_schools",
    "35": "SELECT \n    s.AdmEmail1 AS AdministratorEmail\nFROM \n    frpm f\nJOIN \n    schools s ON f.CDSCode = s.CDSCode\nWHERE \n    f.`Charter School (Y/N)` = 1\nORDER BY \n    f.`Enrollment (K-12)` ASC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "36": "SELECT \n    s.CDSCode,\n    s.School,\n    s.AdmFName1 || ' ' || s.AdmLName1 AS Admin1,\n    s.AdmFName2 || ' ' || s.AdmLName2 AS Admin2,\n    s.AdmFName3 || ' ' || s.AdmLName3 AS Admin3\nFROM \n    schools s\nJOIN \n    satscores sat ON s.CDSCode = sat.cds\nWHERE \n    sat.NumGE1500 = (\n        SELECT MAX(NumGE1500)\n        FROM satscores\n    );\t----- bird -----\tcalifornia_schools",
    "37": "SELECT \n    s.Street,\n    s.City,\n    s.Zip,\n    s.State\nFROM \n    satscores ss\nJOIN \n    schools s ON ss.cds = s.CDSCode\nWHERE \n    ss.rtype = 'S'  -- 'S' for school-level data\n    AND ss.NumTstTakr > 0  -- avoid division by zero\nORDER BY \n    (CAST(ss.NumGE1500 AS REAL) / ss.NumTstTakr) ASC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "38": "SELECT s.Website\nFROM satscores sat\nJOIN schools s ON sat.cds = s.CDSCode\nWHERE s.County = 'Los Angeles'\n  AND sat.NumTstTakr BETWEEN 2000 AND 3000;\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(s.NumTstTakr) AS AvgTestTakers\nFROM schools sc\nJOIN satscores s ON sc.CDSCode = s.cds\nWHERE sc.County = 'Fresno'\n  AND sc.OpenDate BETWEEN '1980-01-01' AND '1980-12-31';\t----- bird -----\tcalifornia_schools",
    "40": "SELECT s.Phone\nFROM satscores sat\nJOIN schools s ON sat.cds = s.CDSCode\nWHERE s.District = 'Fresno Unified'\nORDER BY sat.AvgScrRead ASC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "41": "WITH VirtualSchools AS (\n    SELECT \n        s.CDSCode,\n        s.Virtual,\n        s.County,\n        sc.AvgScrRead\n    FROM schools s\n    JOIN satscores sc ON s.CDSCode = sc.cds\n    WHERE s.Virtual = 'F'\n),\nRankedVirtualSchools AS (\n    SELECT \n        s.CDSCode,\n        s.School,\n        s.County,\n        sc.AvgScrRead,\n        RANK() OVER (PARTITION BY s.County ORDER BY sc.AvgScrRead DESC) AS rank\n    FROM schools s\n    JOIN satscores sc ON s.CDSCode = sc.cds\n    WHERE s.Virtual = 'F'\n)\nSELECT \n    School,\n    County,\n    AvgScrRead\nFROM RankedVirtualSchools\nWHERE rank <= 5\nORDER BY County, rank;\t----- bird -----\tcalifornia_schools",
    "42": "SELECT s.GSoffered\nFROM satscores sat\nJOIN schools s ON sat.cds = s.CDSCode\nWHERE sat.AvgScrMath = (\n    SELECT MAX(AvgScrMath)\n    FROM satscores\n    WHERE rtype = 'S'  -- Assuming 'S' is for school-level data\n);\t----- bird -----\tcalifornia_schools",
    "43": "with the lowest average score for all subjects, and in which county is it located?**\n\nWe need to:\n\n1. **Calculate the total average score for all subjects** for each school using the formula:\n   ```\n   AvgScrRead + AvgScrMath + AvgScrWrite\n   ```\n\n2. **Find the school with the lowest total average score**.\n\n3. **Get the `AvgScrMath` and `County`** for that school.\n\nWe will use the `satscores` and `schools` tables, and join them on the `cds` (which is the same as `CDSCode` in the `schools` table).\n\n---\n\n### \u2705 Final SQL Query:\n\n```sql\nSELECT \n    s.AvgScrMath,\n    sc.County\nFROM \n    satscores s\nJOIN \n    schools sc ON s.cds = sc.CDSCode\nWHERE \n    s.rtype = 'S'  -- 'S' for school-level data\nORDER BY \n    (s.AvgScrRead + s.AvgScrMath + s.AvgScrWrite) ASC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "44": "SELECT \n    s2.AvgScrWrite AS AverageWritingScore,\n    s1.City AS City\nFROM \n    satscores s\nJOIN \n    schools s1 ON s.cds = s1.CDSCode\nWHERE \n    s.NumGE1500 = (\n        SELECT MAX(NumGE1500)\n        FROM satscores\n        WHERE NumGE1500 IS NOT NULL\n    );\t----- bird -----\tcalifornia_schools",
    "45": "SELECT \n    s.School, \n    AVG(ss.AvgScrWrite) AS AvgWritingScore\nFROM \n    schools s\nJOIN \n    satscores ss ON s.CDSCode = ss.cds\nWHERE \n    s.AdmLName1 = 'Ulrich' AND s.AdmFName1 = 'Ricci'\n    OR s.AdmLName2 = 'Ulrich' AND s.AdmFName2 = 'Ricci'\n    OR s.AdmLName3 = 'Ulrich' AND s.AdmLName3 = 'Ricci'\nGROUP BY \n    s.School;\t----- bird -----\tcalifornia_schools",
    "46": "SELECT \n    s.CDSCode,\n    s.School,\n    s.County,\n    s.District,\n    f.`Enrollment (K-12)` AS Enrollment\nFROM \n    schools s\nJOIN \n    frpm f ON s.CDSCode = f.CDSCode\nWHERE \n    s.DOC = '31'  -- State Special Schools\n    AND f.`Enrollment (K-12)` IS NOT NULL\nORDER BY \n    f.`Enrollment (K-12)` DESC;\t----- bird -----\tcalifornia_schools",
    "47": "SELECT \n    COUNT(*) / 12 AS MonthlyAverage\nFROM \n    schools\nWHERE \n    County = 'Alameda'\n    AND OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\n    AND DOC = '52';\t----- bird -----\tcalifornia_schools",
    "48": "SELECT\n    COUNT(CASE\n              WHEN s.DOC = '54' AND s.County = 'Orange' AND s.ClosedDate IS NOT NULL AND s.OpenDate > s.ClosedDate\n              THEN 1\n          END) AS UnifiedMergedOrange,\n    COUNT(CASE\n              WHEN s.DOC = '52' AND s.ClosedDate IS NOT NULL AND s.OpenDate > s.ClosedDate\n              THEN 1\n          END) AS ElementaryMerged,\n    CAST(\n        COUNT(CASE\n                  WHEN s.DOC = '54' AND s.County = 'Orange' AND s.ClosedDate IS NOT NULL AND s.OpenDate > s.ClosedDate\n                  THEN 1\n              END) AS REAL\n    ) /\n    NULLIF(\n        COUNT(CASE\n                  WHEN s.DOC = '52' AND s.ClosedDate IS NOT NULL AND s.OpenDate > s.ClosedDate\n                  THEN 1\n              END), 0\n    ) AS Ratio\nFROM schools s;\t----- bird -----\tcalifornia_schools",
    "49": "SELECT County, COUNT(*) AS ClosedSchoolCount\nFROM schools\nWHERE StatusType = 'Closed'\nGROUP BY County\nORDER BY ClosedSchoolCount DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "50": "SELECT \n    s.School,\n    s.Street AS PostalStreet\nFROM \n    satscores sat\nJOIN \n    schools s ON sat.cds = s.CDSCode\nWHERE \n    sat.rtype = 'S'  -- 'S' for school-level data\n    AND sat.AvgScrMath IS NOT NULL\nORDER BY \n    sat.AvgScrMath DESC\nLIMIT 1 OFFSET 6;\t----- bird -----\tcalifornia_schools",
    "51": "SELECT \n    s.MailStreet,\n    sc.School\nFROM \n    satscores sc\nJOIN \n    schools s ON sc.cds = s.CDSCode\nWHERE \n    sc.AvgScrRead IS NOT NULL\nORDER BY \n    sc.AvgScrRead ASC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(*) AS TotalSchools\nFROM satscores s\nJOIN schools sc ON s.cds = sc.CDSCode\nWHERE (s.AvgScrRead + s.AvgScrMath + s.AvgScrWrite) >= 1500\n  AND sc.MailCity = 'Lakeport';\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(s.NumTstTakr) AS TotalTestTakers\nFROM satscores s\nJOIN schools sc ON s.cds = sc.CDSCode\nWHERE sc.MailCity = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "54": "SELECT \n    School, \n    MailZip\nFROM \n    schools\nWHERE \n    (AdmFName1 = 'Avetik' AND AdmLName1 = 'Atoian') OR\n    (AdmFName2 = 'Avetik' AND AdmLName2 = 'Atoian') OR\n    (AdmFName3 = 'Avetik' AND AdmLName3 = 'Atoian');\t----- bird -----\tcalifornia_schools",
    "55": "SELECT\n    (SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND County = 'Colusa') * 1.0 /\n    (SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND County = 'Humboldt') AS Ratio;\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) AS ActiveSchoolsInSanJoaquin\nFROM schools\nWHERE MailState = 'CA'\n  AND MailCity = 'San Joaquin'\n  AND StatusType = 'Active';\t----- bird -----\tcalifornia_schools",
    "57": "SELECT s.Phone, s.Ext\nFROM satscores sat\nJOIN schools s ON sat.cds = s.CDSCode\nWHERE sat.AvgScrWrite IS NOT NULL\nORDER BY sat.AvgScrWrite DESC\nLIMIT 1 OFFSET 332;\t----- bird -----\tcalifornia_schools",
    "58": "SELECT \n    Phone, \n    Ext, \n    School\nFROM \n    schools\nWHERE \n    Zip = '95203-3704';\t----- bird -----\tcalifornia_schools",
    "59": "SELECT Website\nFROM schools\nWHERE \n    (AdmFName1 = 'Mike' AND (AdmLName1 = 'Larson' OR AdmLName1 = 'Alvarez')) OR\n    (AdmFName2 = 'Mike' AND (AdmLName2 = 'Larson' OR AdmLName2 = 'Alvarez')) OR\n    (AdmFName3 = 'Mike' AND (AdmLName3 = 'Larson' OR AdmLName3 = 'Alvarez'));\t----- bird -----\tcalifornia_schools",
    "60": "SELECT Website\nFROM schools\nWHERE Charter = 1\n  AND Virtual = 'P'\n  AND County = 'San Joaquin';\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(*) AS CharteredSchoolsInHickman\nFROM schools\nWHERE Charter = 1\n  AND City = 'Hickman'\n  AND DOC = '52';\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(*) AS NonCharteredSchoolsCount\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE schools.County = 'Los Angeles'\n  AND schools.Charter = 0\n  AND frpm.`Percent (%) Eligible Free (K-12)` < 0.18;\t----- bird -----\tcalifornia_schools",
    "63": "SELECT \n    School,\n    City,\n    AdmFName1 || ' ' || AdmLName1 AS Admin1,\n    AdmFName2 || ' ' || AdmLName2 AS Admin2,\n    AdmFName3 || ' ' || AdmLName3 AS Admin3\nFROM \n    schools\nWHERE \n    Charter = 1\n    AND CharterNum = '00D2';\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) AS TotalSchools\nFROM schools\nWHERE MailCity = 'Hickman'\n  AND CharterNum = '00D4';\t----- bird -----\tcalifornia_schools",
    "65": "SELECT \n    (COUNT(CASE WHEN frpm.`Charter Funding Type` = 'Local' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_locally_funded\nFROM \n    schools\nJOIN \n    frpm ON schools.CDSCode = frpm.CDSCode\nWHERE \n    schools.County = 'Santa Clara'\n    AND frpm.`Charter School (Y/N)` = 1;\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) AS DirectlyFundedSchoolsOpened\nFROM schools\nWHERE FundingType = 'Directly Funded'\n  AND County = 'Stanislaus'\n  AND OpenDate BETWEEN '2000-01-01' AND '2005-12-31';\t----- bird -----\tcalifornia_schools",
    "67": "SELECT COUNT(*) AS TotalClosures\nFROM schools\nWHERE DOCType = 'Community College District'\n  AND City = 'San Francisco'\n  AND strftime('%Y', ClosedDate) = '1989';\t----- bird -----\tcalifornia_schools",
    "68": "SELECT County, COUNT(*) AS ClosureCount\nFROM schools\nWHERE SOC = '11'\n  AND ClosedDate IS NOT NULL\n  AND strftime('%Y', ClosedDate) BETWEEN '1980' AND '1989'\nGROUP BY County\nORDER BY ClosureCount DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "69": "SELECT NCESDist\nFROM schools\nWHERE SOC = '31';\t----- bird -----\tcalifornia_schools",
    "70": "SELECT\n    COUNT(CASE WHEN StatusType = 'Active' THEN 1 END) AS ActiveDistrictCommunityDaySchools,\n    COUNT(CASE WHEN StatusType = 'Closed' THEN 1 END) AS ClosedDistrictCommunityDaySchools\nFROM\n    schools\nWHERE\n    DOCType = 'District Community Day School'\n    AND County = 'Alpine';\t----- bird -----\tcalifornia_schools",
    "71": "SELECT District\nFROM schools\nWHERE City = 'Fresno'\n  AND Magnet = 0;\t----- bird -----\tcalifornia_schools",
    "72": "SELECT frpm.`Enrollment (Ages 5-17)`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.EdOpsCode = 'SSS'  -- State Special School\n  AND schools.City = 'Fremont'\n  AND frpm.`Academic Year` = '2014-2015';\t----- bird -----\tcalifornia_schools",
    "73": "SELECT frpm.`FRPM Count (Ages 5-17)`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.School = 'Youth Authority School'\n  AND schools.MailStreet = 'PO Box 1040';\t----- bird -----\tcalifornia_schools",
    "74": "SELECT frpm.`Low Grade`\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE schools.NCESDist = '0613360'\n  AND schools.EdOpsCode = 'SPECON';\t----- bird -----\tcalifornia_schools",
    "75": "SELECT s.School\nFROM frpm\nJOIN schools s ON frpm.CDSCode = s.CDSCode\nWHERE frpm.[NSLP Provision Status] = '2'\n  AND frpm.[County Code] = '37';\t----- bird -----\tcalifornia_schools",
    "76": "SELECT s.City\nFROM frpm f\nJOIN schools s ON f.CDSCode = s.CDSCode\nWHERE f.`NSLP Provision Status` = '2'\n  AND f.`Low Grade` = '9'\n  AND f.`High Grade` = '12'\n  AND f.`County Name` = 'Merced'\n  AND s.EILCode = 'HS';\t----- bird -----\tcalifornia_schools",
    "77": "with a **grade span of \"K-9\"** (or \"Kindergarten to 9th grade\").\n4. **Calculate** the **Percent (%) Eligible FRPM (Ages 5-17)** using the formula:\n   ```\n   (FRPM Count (Ages 5-17) / Enrollment (Ages 5-17)) * 100\n   ```\n   (This is already provided in the `frpm` table as `Percent (%) Eligible FRPM (Ages 5-17)`, but we can also calculate it if needed.)\n\n---\n\n### \u2705 Final SQL Query:\n\n```sql\nSELECT \n    s.School AS SchoolName,\n    s.County,\n    frpm.`Low Grade` AS LowGrade,\n    frpm.`High Grade` AS HighGrade,\n    frpm.`Percent (%) Eligible FRPM (Ages 5-17)` AS FRPMPercent\nFROM \n    frpm\nJOIN \n    schools s ON frpm.CDSCode = s.CDSCode\nWHERE \n    s.County = 'Los Angeles'\n    AND frpm.`Low Grade` = 'KG' \n    AND frpm.`High Grade` = '09';\t----- bird -----\tcalifornia_schools",
    "78": "SELECT GSserved, COUNT(*) AS Count\nFROM schools\nWHERE City = 'Adelanto'\nGROUP BY GSserved\nORDER BY Count DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "79": "SELECT \n    County,\n    COUNT(*) AS VirtualSchoolCount\nFROM \n    schools\nWHERE \n    County IN ('San Diego', 'Santa Barbara')\n    AND Virtual = 'F'\nGROUP BY \n    County\nORDER BY \n    VirtualSchoolCount DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "80": "SELECT \n    School, \n    Latitude, \n    SOCType AS SchoolType\nFROM \n    schools\nWHERE \n    Latitude IS NOT NULL\nORDER BY \n    Latitude DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "81": "SELECT \n    s.City,\n    s.School,\n    f.`Low Grade`\nFROM \n    schools s\nJOIN \n    frpm f ON s.CDSCode = f.CDSCode\nWHERE \n    s.State = 'CA'\nORDER BY \n    s.Latitude ASC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "82": "SELECT GSoffered\nFROM schools\nWHERE Longitude = (\n    SELECT MAX(Longitude)\n    FROM schools\n    WHERE Longitude IS NOT NULL\n);\t----- bird -----\tcalifornia_schools",
    "83": "SELECT \n    City,\n    COUNT(*) AS NumSchools\nFROM \n    schools s\nJOIN \n    frpm f ON s.CDSCode = f.CDSCode\nWHERE \n    s.Magnet = 1\n    AND s.GSserved = 'K-8'\n    AND f.`NSLP Provision Status` = 'Multiple Provision Types'\nGROUP BY \n    City;\t----- bird -----\tcalifornia_schools",
    "84": "SELECT \n    name AS AdminFirstName,\n    district AS AdminDistrict,\n    COUNT(*) AS NameCount\nFROM (\n    SELECT AdmFName1 AS name, District FROM schools WHERE AdmFName1 IS NOT NULL\n    UNION ALL\n    SELECT AdmFName2 AS name, District FROM schools WHERE AdmFName2 IS NOT NULL\n    UNION ALL\n    SELECT AdmFName3 AS name, District FROM schools WHERE AdmFName3 IS NOT NULL\n)\nGROUP BY name, district\nORDER BY NameCount DESC\nLIMIT 2;\t----- bird -----\tcalifornia_schools",
    "85": "with the `frpm` table using the `CDSCode` to get the FRPM data for that school.\n3. **Calculate** the `Percent (%) Eligible Free (K-12)` using the formula:\n   ```\n   Percent (%) Eligible Free (K-12) = (Free Meal Count (K-12) / Enrollment (K-12)) * 100\n   ```\n4. **Return** the calculated percentage and the `District Code`.\n\n---\n\n### \u2705 Final SQL Query:\n\n```sql\nSELECT \n    frpm.`Percent (%) Eligible Free (K-12)`,\n    frpm.`District Code`\nFROM \n    schools\nJOIN \n    frpm ON schools.CDSCode = frpm.CDSCode\nWHERE \n    schools.AdmFName1 = 'Alusine' \n    OR schools.AdmFName2 = 'Alusine' \n    OR schools.AdmFName3 = 'Alusine';\t----- bird -----\tcalifornia_schools",
    "86": "SELECT \n    School AS SchoolName,\n    District,\n    County,\n    AdmLName1 AS AdministratorLastName\nFROM \n    schools\nWHERE \n    CharterNum = '40';\t----- bird -----\tcalifornia_schools",
    "87": "SELECT DISTINCT \n    AdmEmail1, AdmEmail2, AdmEmail3\nFROM \n    schools\nWHERE \n    County = 'San Bernardino' \n    AND City = 'San Bernardino'\n    AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31'\n    AND (\n        SOC = '62'  -- Intermediate/Middle School\n        OR DOC = '54' -- Unified School\n    )\n    AND StatusType = 'Active'  -- Optional: to ensure the school is still active\n    AND AdmEmail1 IS NOT NULL  -- Only return valid email fields\n    AND AdmEmail2 IS NOT NULL\n    AND AdmEmail3 IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "88": "SELECT \n    s.School AS SchoolName,\n    CASE \n        WHEN adm.AdmEmail1 IS NOT NULL THEN adm.AdmEmail1\n        WHEN adm.AdmEmail2 IS NOT NULL THEN adm.AdmEmail2\n        WHEN adm.AdmEmail3 IS NOT NULL THEN adm.AdmEmail3\n        ELSE 'No email available'\n    END AS AdministratorEmail\nFROM \n    satscores sat\nJOIN \n    schools s ON sat.cds = s.CDSCode\nWHERE \n    sat.rtype = 'S'\nORDER BY \n    sat.NumGE1500 DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(DISTINCT a.account_id) AS account_count\nFROM card c\nJOIN disp d ON c.disp_id = d.disp_id\nJOIN client cl ON d.client_id = cl.client_id\nJOIN district dstr ON cl.district_id = dstr.district_id\nWHERE c.type = 'POPLATEK PO OBRATU'\n  AND dstr.A3 = 'East Bohemia';\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(*) AS eligible_accounts\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE district.A3 = 'Prague';\t----- bird -----\tfinancial",
    "91": "SELECT \n    AVG(A12) AS avg_unemployment_1995,\n    AVG(A13) AS avg_unemployment_1996\nFROM district;\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT d.district_id) AS district_count\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nWHERE c.gender = 'F'\nGROUP BY d.district_id\nHAVING AVG(d.A11) > 6000 AND AVG(d.A11) < 10000;\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(*) AS male_clients_count\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'M'\n  AND district.A3 = 'North Bohemia'\n  AND district.A11 > 8000;\t----- bird -----\tfinancial",
    "94": "Select all clients with that birth date (in case of a tie).\n\n2. **Get the account numbers** of these oldest female clients:\n   - Use the `disp` table to link `client_id` to `account_id`.\n\n3. **Find the lowest and highest average salary (A11)** from the `district` table.\n\n4. **Calculate the gap** between the highest and lowest average salary.\n\n---\n\n### **Final SQL Query:**\n\n```sql\n-- Step 1: Find the oldest female clients\nWITH oldest_females AS (\n    SELECT client_id\n    FROM client\n    WHERE gender = 'F'\n      AND birth_date = (\n          SELECT MIN(birth_date)\n          FROM client\n          WHERE gender = 'F'\n      )\n),\n\n-- Step 2: Get their account numbers\noldest_female_accounts AS (\n    SELECT d.account_id\n    FROM disp d\n    JOIN oldest_females f ON d.client_id = f.client_id\n),\n\n-- Step 3: Get the lowest and highest average salary (A11)\nsalary_stats AS (\n    SELECT\n        MIN(A11) AS min_salary,\n        MAX(A11) AS max_salary\n    FROM district\n)\n\n-- Step 4: Final result\nSELECT\n    ofa.account_id,\n    (s.max_salary - s.min_salary) AS salary_gap\nFROM\n    oldest_female_accounts ofa,\n    salary_stats s;\t----- bird -----\tfinancial",
    "95": "SELECT DISTINCT a.account_id\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nJOIN district dist ON c.district_id = dist.district_id\nWHERE c.birth_date = (\n    SELECT MIN(birth_date)\n    FROM client\n)\nAND dist.A11 = (\n    SELECT MAX(A11)\n    FROM district\n);\t----- bird -----\tfinancial",
    "96": "SELECT account_id\n   FROM account\n   WHERE frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "97": "SELECT DISTINCT d.client_id\nFROM disp d\nJOIN trans t ON d.account_id = t.account_id\nWHERE d.type = 'disponent'\n  AND t.type = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "98": "SELECT DISTINCT a.account_id\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nWHERE l.date BETWEEN '1997-01-01' AND '1997-12-31'\n  AND l.status = 'approved'\n  AND l.amount = (\n      SELECT MIN(amount)\n      FROM loan\n      WHERE date BETWEEN '1997-01-01' AND '1997-12-31'\n        AND status = 'approved'\n  )\n  AND a.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "99": "SELECT l.account_id, l.amount\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nWHERE l.duration > 12\n  AND strftime('%Y', a.date) = '1993'\n  AND l.amount = (\n    SELECT MAX(amount)\n    FROM loan l2\n    JOIN account a2 ON l2.account_id = a2.account_id\n    WHERE l2.duration > 12\n      AND strftime('%Y', a2.date) = '1993'\n  );\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(DISTINCT a.account_id) AS female_accounts_count\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nJOIN disp dp ON c.client_id = dp.client_id\nJOIN account a ON dp.account_id = a.account_id\nWHERE c.gender = 'F'\n  AND c.birth_date < '1950-01-01'\n  AND d.A2 = 'Sokolov';\t----- bird -----\tfinancial",
    "101": "SELECT DISTINCT t.account_id\nFROM trans t\nWHERE t.date = (\n    SELECT MIN(date)\n    FROM trans\n    WHERE strftime('%Y', date) = '1995'\n);\t----- bird -----\tfinancial",
    "102": "SELECT DISTINCT a.account_id\nFROM account a\nJOIN trans t ON a.account_id = t.account_id\nWHERE a.date < '1997-01-01'\nGROUP BY a.account_id\nHAVING MAX(t.balance) > 3000;\t----- bird -----\tfinancial",
    "103": "SELECT d.client_id\nFROM card c\nJOIN disp d ON c.disp_id = d.disp_id\nWHERE c.issued = '1994-03-03';\t----- bird -----\tfinancial",
    "104": "SELECT account_id\n   FROM trans\n   WHERE amount = 840 AND date = '1998-10-14';\t----- bird -----\tfinancial",
    "105": "SELECT account_id FROM loan WHERE date = '1994-08-25';\t----- bird -----\tfinancial",
    "106": "SELECT MAX(t.amount) AS max_transaction_amount\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN disp d ON a.account_id = d.account_id\nJOIN card c ON d.disp_id = c.disp_id\nWHERE c.issued = '1996-10-21';\t----- bird -----\tfinancial",
    "107": "SELECT district_id\nFROM district\nORDER BY A11 DESC\nLIMIT 1;\t----- bird -----\tfinancial",
    "108": "SELECT t.amount\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nWHERE c.client_id = (\n    SELECT c2.client_id\n    FROM loan l\n    JOIN disp d2 ON l.account_id = d2.account_id\n    JOIN client c2 ON d2.client_id = c2.client_id\n    ORDER BY l.amount DESC\n    LIMIT 1\n)\nAND t.date = (\n    SELECT MIN(t2.date)\n    FROM trans t2\n    WHERE t2.account_id = a.account_id\n);\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(DISTINCT c.client_id) AS female_clients_in_jesenik\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN district dstr ON a.district_id = dstr.district_id\nWHERE dstr.A2 = 'Jesenik'\n  AND c.gender = 'F';\t----- bird -----\tfinancial",
    "110": "SELECT d.disp_id\nFROM trans t\nJOIN disp d ON t.account_id = d.account_id\nWHERE t.amount = 5100\n  AND t.date = '1998-09-02';\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(*) AS account_count\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE district.A2 = 'Litomerice'\n  AND strftime('%Y', account.date) = '1996';\t----- bird -----\tfinancial",
    "112": "SELECT d.A2 AS district_name\nFROM client c\nJOIN disp ON c.client_id = disp.client_id\nJOIN account a ON disp.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE c.gender = 'F' AND c.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "113": "SELECT c.birth_date\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN loan l ON d.account_id = l.account_id\nWHERE l.amount = 98832\n  AND l.date = '1996-01-03';\t----- bird -----\tfinancial",
    "114": "SELECT a.account_id\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nJOIN district d2 ON c.district_id = d2.district_id\nWHERE d2.A3 = 'Prague'\nORDER BY a.date ASC\nLIMIT 1;\t----- bird -----\tfinancial",
    "115": "SELECT\n    (CAST(male_clients.male_count AS REAL) / total_clients.total_count) * 100 AS male_percentage\nFROM\n    (SELECT COUNT(*) AS total_count\n     FROM client\n     WHERE district_id = (\n         SELECT district_id\n         FROM district\n         WHERE A2 = 'South Bohemia'\n         ORDER BY A4 DESC\n         LIMIT 1\n     )) AS total_clients,\n    (SELECT COUNT(*) AS male_count\n     FROM client\n     WHERE district_id = (\n         SELECT district_id\n         FROM district\n         WHERE A2 = 'South Bohemia'\n         ORDER BY A4 DESC\n         LIMIT 1\n     )\n     AND gender = 'M') AS male_clients;\t----- bird -----\tfinancial",
    "116": "WITH first_loan AS (\n    SELECT loan_id, account_id\n    FROM loan\n    WHERE date = '1993-07-05'\n    ORDER BY loan_id\n    LIMIT 1\n),\nclient_account AS (\n    SELECT d.client_id, l.account_id\n    FROM first_loan l\n    JOIN disp d ON l.account_id = d.account_id\n),\nbalance_1993_03_22 AS (\n    SELECT t.account_id, t.balance\n    FROM trans t\n    JOIN client_account ca ON t.account_id = ca.account_id\n    WHERE t.date <= '1993-03-22'\n    ORDER BY t.date DESC\n    LIMIT 1\n),\nbalance_1998_12_27 AS (\n    SELECT t.account_id, t.balance\n    FROM trans t\n    JOIN client_account ca ON t.account_id = ca.account_id\n    WHERE t.date <= '1998-12-27'\n    ORDER BY t.date DESC\n    LIMIT 1\n)\nSELECT\n    ( (b1998.balance - b1993.balance) / b1993.balance ) * 100 AS increase_rate\nFROM\n    balance_1993_03_22 b1993,\n    balance_1998_12_27 b1998;\t----- bird -----\tfinancial",
    "117": "SELECT \n    (SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) * 100.0 / SUM(amount)) AS percentage_paid\nFROM loan;\t----- bird -----\tfinancial",
    "118": "SELECT \n    100.0 * COUNT(DISTINCT CASE WHEN l.status = 'C' THEN l.account_id END) / COUNT(DISTINCT l.account_id) AS percentage_running_accounts\nFROM \n    loan l\nWHERE \n    l.amount < 100000;\t----- bird -----\tfinancial",
    "119": "SELECT \n    a.account_id,\n    d.A2 AS district_name,\n    d.A3 AS district_region\nFROM \n    account a\nJOIN \n    district d ON a.district_id = d.district_id\nWHERE \n    strftime('%Y', a.date) = '1993'\n    AND EXISTS (\n        SELECT 1\n        FROM trans t\n        WHERE t.account_id = a.account_id\n          AND (t.type = 'POPLATEK PO OBRATU' OR t.operation = 'POPLATEK PO OBRATU')\n    );\t----- bird -----\tfinancial",
    "120": "SELECT \n    a.account_id,\n    a.frequency\nFROM \n    account a\nJOIN \n    disp d ON a.account_id = d.account_id\nJOIN \n    client c ON d.client_id = c.client_id\nJOIN \n    district dist ON c.district_id = dist.district_id\nWHERE \n    dist.A2 = 'east bohemia'\n    AND a.date BETWEEN '1995-01-01' AND '2000-12-31';\t----- bird -----\tfinancial",
    "121": "SELECT \n    a.account_id, \n    a.date AS account_opening_date\nFROM \n    account a\nJOIN \n    district d ON a.district_id = d.district_id\nWHERE \n    d.A2 = 'Prachatice';\t----- bird -----\tfinancial",
    "122": "SELECT \n    d.A2 AS district,\n    d.A3 AS region\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE l.loan_id = 4990;\t----- bird -----\tfinancial",
    "123": "SELECT \n    l.account_id,\n    d.A2 AS district,\n    d.A3 AS region\nFROM \n    loan l\nJOIN \n    account a ON l.account_id = a.account_id\nJOIN \n    district d ON a.district_id = d.district_id\nWHERE \n    l.amount > 300000;\t----- bird -----\tfinancial",
    "124": "SELECT \n    l.loan_id,\n    d.A3 AS district,\n    d.A11 AS average_salary\nFROM \n    loan l\nJOIN \n    account a ON l.account_id = a.account_id\nJOIN \n    district d ON a.district_id = d.district_id\nWHERE \n    l.duration = 60;\t----- bird -----\tfinancial",
    "125": "SELECT \n    d.district_id,\n    ( (d.A13 - d.A12) / d.A12 * 100 ) AS unemployment_increment_rate\nFROM \n    loan l\nJOIN \n    account a ON l.account_id = a.account_id\nJOIN \n    disp d2 ON a.account_id = d2.account_id\nJOIN \n    client c ON d2.client_id = c.client_id\nJOIN \n    district d ON c.district_id = d.district_id\nWHERE \n    l.status = 'D'\nGROUP BY \n    d.district_id, d.A12, d.A13;\t----- bird -----\tfinancial",
    "126": "SELECT \n    100.0 * COUNT(CASE WHEN d.A2 = 'Decin' THEN a.account_id END) / COUNT(a.account_id) AS percentage_decin_accounts\nFROM \n    account a\nLEFT JOIN \n    district d ON a.district_id = d.district_id\nWHERE \n    strftime('%Y', a.date) = '1993';\t----- bird -----\tfinancial",
    "127": "SELECT account_id\nFROM account\nWHERE frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "128": "SELECT \n    d.district_id,\n    d.A2 AS district_name,\n    COUNT(DISTINCT a.account_id) AS female_account_holders\nFROM \n    client c\nJOIN \n    disp d ON c.client_id = d.client_id\nJOIN \n    account a ON d.account_id = a.account_id\nJOIN \n    district d2 ON a.district_id = d2.district_id\nWHERE \n    c.gender = 'F'\nGROUP BY \n    d2.district_id, d2.A2\nORDER BY \n    female_account_holders DESC\nLIMIT 9;\t----- bird -----\tfinancial",
    "129": "SELECT \n    d.A2 AS district_name,\n    SUM(t.amount) AS total_withdrawals\nFROM \n    trans t\nJOIN \n    account a ON t.account_id = a.account_id\nJOIN \n    district d ON a.district_id = d.district_id\nWHERE \n    t.type = 'VYDAJ'\n    AND t.date LIKE '1996-01%'\n    AND t.trans_id NOT IN (\n        SELECT t2.trans_id\n        FROM trans t2\n        JOIN card c ON t2.account_id = c.account_id\n        JOIN disp d2 ON c.disp_id = d2.disp_id\n    )\nGROUP BY \n    d.A2\nORDER BY \n    total_withdrawals DESC\nLIMIT 10;\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(DISTINCT d.account_id) AS account_holders_without_credit_cards\nFROM client c\nJOIN district dstr ON c.district_id = dstr.district_id\nJOIN disp d ON c.client_id = d.client_id\nLEFT JOIN card cd ON d.disp_id = cd.disp_id\nWHERE dstr.A3 = 'South Bohemia'\n  AND cd.card_id IS NULL;\t----- bird -----\tfinancial",
    "131": "SELECT d.A3 AS district_name, COUNT(*) AS active_loan_count\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE l.status IN ('C', 'D')\nGROUP BY d.district_id\nORDER BY active_loan_count DESC\nLIMIT 1;\t----- bird -----\tfinancial",
    "132": "SELECT AVG(l.amount) AS average_loan_amount\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nWHERE c.gender = 'M';\t----- bird -----\tfinancial",
    "133": "SELECT A2 AS district_name, A3 AS branch_location\nFROM district\nWHERE A13 = (\n    SELECT MAX(A13)\n    FROM district\n);\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(*) AS account_count\nFROM account\nWHERE district_id = (\n    SELECT district_id\n    FROM district\n    ORDER BY A16 DESC\n    LIMIT 1\n);\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT t.account_id) AS negative_balance_accounts\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nWHERE t.operation = 'VYBER KARTOU'\n  AND a.frequency = 'POPLATEK MESICNE'\n  AND t.balance < 0;\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(*) AS num_loans\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nWHERE loan.date BETWEEN '1995-01-01' AND '1997-12-31'\n  AND loan.amount >= 250000\n  AND loan.status = 'approved'\n  AND account.frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(DISTINCT l.account_id) AS running_contract_accounts\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nWHERE l.status IN ('C', 'D')\n  AND a.district_id = 1;\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(*) AS male_client_count\nFROM client\nWHERE district_id = (\n    SELECT district_id\n    FROM (\n        SELECT district_id, A15\n        FROM district\n        ORDER BY A15 DESC\n        LIMIT 2\n    ) AS sub\n    WHERE A15 = (\n        SELECT A15\n        FROM (\n            SELECT A15\n            FROM district\n            ORDER BY A15 DESC\n            LIMIT 2\n        ) AS sub2\n        ORDER BY A15\n        LIMIT 1\n    )\n)\nAND gender = 'M';\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) AS high_level_owner_cards\nFROM card\nJOIN disp ON card.disp_id = disp.disp_id\nWHERE card.type = 'gold' AND disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(*) AS account_count\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE district.A2 = 'Pisek';\t----- bird -----\tfinancial",
    "141": "SELECT d.district_id, d.A2 AS district_name, SUM(t.amount) AS total_amount\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE t.date BETWEEN '1997-01-01' AND '1997-12-31'\nGROUP BY d.district_id, d.A2\nHAVING SUM(t.amount) > 10000;\t----- bird -----\tfinancial",
    "142": "SELECT DISTINCT o.account_id\nFROM `order` o\nJOIN account a ON o.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE o.k_symbol = 'SIPO'\n  AND d.A2 = 'Pisek';\t----- bird -----\tfinancial",
    "143": "SELECT DISTINCT a.account_id\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN card c ON d.disp_id = c.disp_id\nWHERE c.type = 'GOLD';\t----- bird -----\tfinancial",
    "144": "SELECT \n    strftime('%Y-%m', date) AS month,\n    AVG(amount) AS average_amount\nFROM \n    trans\nWHERE \n    operation = 'VYBER KARTOU'\n    AND strftime('%Y', date) = '2021'\nGROUP BY \n    strftime('%Y-%m', date)\nORDER BY \n    month;\t----- bird -----\tfinancial",
    "145": "SELECT DISTINCT account_id\nFROM trans\nWHERE operation = 'VYBER KARTOU'\n  AND strftime('%Y', date) = '1998'\n  AND amount < (\n      SELECT AVG(amount)\n      FROM trans\n      WHERE operation = 'VYBER KARTOU'\n        AND strftime('%Y', date) = '1998'\n  );\t----- bird -----\tfinancial",
    "146": "SELECT DISTINCT c.client_id, c.gender, a.account_id\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN card cd ON d.disp_id = cd.disp_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE c.gender = 'F'\n  AND cd.type = 'credit';\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT a.account_id) AS female_accounts_south_bohemia\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN district dist ON c.district_id = dist.district_id\nWHERE c.gender = 'F'\n  AND dist.A3 = 'South Bohemia';\t----- bird -----\tfinancial",
    "148": "SELECT a.account_id\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nJOIN disp ON a.account_id = disp.account_id\nWHERE d.A2 = 'Tabor'\n  AND disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT d.type AS account_type\nFROM disp d\nJOIN account a ON d.account_id = a.account_id\nJOIN district dist ON a.district_id = dist.district_id\nWHERE d.type != 'OWNER'\n  AND dist.A11 > 8000\n  AND dist.A11 <= 9000;\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT t.account_id) AS account_count\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE d.A3 = 'North Bohemia'\n  AND t.bank = 'AB';\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT d.A2 AS district_name\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE t.type = 'VYDAJ';\t----- bird -----\tfinancial",
    "152": "SELECT district_id\nFROM district\nWHERE A15 > 4000;\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(*) AS classic_cards_eligible_for_loan\nFROM card\nJOIN disp ON card.disp_id = disp.disp_id\nWHERE card.type = 'classic'\n  AND disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(*) AS male_clients_count\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE client.gender = 'M' AND district.A2 = 'Hl.m. Praha';\t----- bird -----\tfinancial",
    "155": "SELECT\n    100.0 * \n    SUM(CASE WHEN type = 'gold' AND issued < '1998-01-01' THEN 1 ELSE 0 END) / \n    COUNT(*) AS percent_gold_issued_before_1998\nFROM card;\t----- bird -----\tfinancial",
    "156": "SELECT c.client_id, c.gender, c.birth_date\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.amount = (\n    SELECT MAX(amount)\n    FROM loan\n);\t----- bird -----\tfinancial",
    "157": "SELECT d.A15\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE a.account_id = 532;\t----- bird -----\tfinancial",
    "158": "SELECT a.district_id\nFROM `order` o\nJOIN account a ON o.account_id = a.account_id\nWHERE o.order_id = 33333;\t----- bird -----\tfinancial",
    "159": "SELECT \n    t.trans_id,\n    t.date,\n    t.type,\n    t.operation,\n    t.amount,\n    t.balance,\n    t.k_symbol,\n    t.bank,\n    t.account\nFROM \n    client c\nJOIN \n    disp d ON c.client_id = d.client_id\nJOIN \n    account a ON d.account_id = a.account_id\nJOIN \n    trans t ON a.account_id = t.account_id\nWHERE \n    c.client_id = 3356\n    AND t.operation = 'VYBER';\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(DISTINCT a.account_id)\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE a.frequency = 'POPLATEK TYDNE'\n  AND l.amount < 200000;\t----- bird -----\tfinancial",
    "161": "SELECT c.type\nFROM client cl\nJOIN disp d ON cl.client_id = d.client_id\nJOIN card c ON d.disp_id = c.disp_id\nWHERE cl.client_id = 13539;\t----- bird -----\tfinancial",
    "162": "SELECT d.A3 AS region\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nWHERE c.client_id = 3541;\t----- bird -----\tfinancial",
    "163": "SELECT d.A2 AS district_name, COUNT(DISTINCT l.account_id) AS account_count\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE l.status = 'A'\nGROUP BY d.district_id\nORDER BY account_count DESC\nLIMIT 1;\t----- bird -----\tfinancial",
    "164": "SELECT c.client_id, c.gender, c.birth_date\nFROM `order` o\nJOIN account a ON o.account_id = a.account_id\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nWHERE o.order_id = 32423;\t----- bird -----\tfinancial",
    "165": "SELECT t.*\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nWHERE a.district_id = 5;\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(*) AS account_count\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE district.A2 = 'Jesen\u00edk';\t----- bird -----\tfinancial",
    "167": "SELECT DISTINCT client.client_id\nFROM card\nJOIN disp ON card.disp_id = disp.disp_id\nJOIN client ON disp.client_id = client.client_id\nWHERE card.type = 'junior'\n  AND card.issued >= '1997-01-01';\t----- bird -----\tfinancial",
    "168": "SELECT\n    100.0 * SUM(CASE WHEN c.gender = 'F' THEN 1 ELSE 0 END) / COUNT(*) AS percentage_women\nFROM\n    client c\nJOIN\n    disp d ON c.client_id = d.client_id\nJOIN\n    account a ON d.account_id = a.account_id\nJOIN\n    district dist ON c.district_id = dist.district_id\nWHERE\n    dist.A11 > 10000;\t----- bird -----\tfinancial",
    "169": "SELECT\n    ((SUM(CASE WHEN strftime('%Y', loan.date) = '1997' THEN loan.amount ELSE 0 END) -\n      SUM(CASE WHEN strftime('%Y', loan.date) = '1996' THEN loan.amount ELSE 0 END)) /\n     SUM(CASE WHEN strftime('%Y', loan.date) = '1996' THEN loan.amount ELSE 0 END)) * 100 AS growth_rate\nFROM\n    loan\nJOIN account ON loan.account_id = account.account_id\nJOIN disp ON account.account_id = disp.account_id\nJOIN client ON disp.client_id = client.client_id\nWHERE\n    client.gender = 'M';\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) AS credit_card_withdrawals_after_1995\nFROM trans\nWHERE operation = 'VYBER KARTOU'\n  AND date > '1995-12-31';\t----- bird -----\tfinancial",
    "171": "SELECT \n    (\n        SELECT SUM(d.A16)\n        FROM district d\n        WHERE d.A3 = 'North Bohemia'\n    ) - (\n        SELECT SUM(d.A16)\n        FROM district d\n        WHERE d.A3 = 'East Bohemia'\n    ) AS crime_difference;\t----- bird -----\tfinancial",
    "172": "SELECT \n    type,\n    COUNT(*) AS count\nFROM \n    disp\nWHERE \n    account_id BETWEEN 1 AND 10\nGROUP BY \n    type;\t----- bird -----\tfinancial",
    "173": "SELECT COUNT(*) AS statement_requests\nFROM trans\nWHERE account_id = 3 AND operation = 'request statement';\t----- bird -----\tfinancial",
    "174": "SELECT strftime('%Y', birth_date) AS birth_year\nFROM client\nWHERE client_id = 130;\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(DISTINCT a.account_id)\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nWHERE a.frequency = 'POPLATEK PO OBRATU'\n  AND d.type = 'owner';\t----- bird -----\tfinancial",
    "176": "SELECT \n    l.account_id,\n    SUM(l.amount) AS total_debt,\n    l.status AS payment_status\nFROM \n    client c\nJOIN \n    disp d ON c.client_id = d.client_id\nJOIN \n    loan l ON d.account_id = l.account_id\nWHERE \n    c.client_id = 992\nGROUP BY \n    l.account_id, l.status;\t----- bird -----\tfinancial",
    "177": "SELECT \n    t.balance AS final_balance,\n    c.gender\nFROM \n    client c\nJOIN \n    disp d ON c.client_id = d.client_id\nJOIN \n    trans t ON d.account_id = t.account_id\nWHERE \n    c.client_id = 4\n    AND t.trans_id = 851;\t----- bird -----\tfinancial",
    "178": "SELECT c.type\nFROM client cl\nJOIN disp d ON cl.client_id = d.client_id\nJOIN card c ON d.disp_id = c.disp_id\nWHERE cl.client_id = 9;\t----- bird -----\tfinancial",
    "179": "SELECT SUM(t.amount) AS total_paid\nFROM trans t\nJOIN disp d ON t.account_id = d.account_id\nWHERE d.client_id = 617\n  AND strftime('%Y', t.date) = '1998';\t----- bird -----\tfinancial",
    "180": "SELECT \n    c.client_id,\n    c.gender,\n    c.birth_date\nFROM \n    client c\nJOIN \n    disp d ON c.client_id = d.client_id\nJOIN \n    account a ON d.account_id = a.account_id\nJOIN \n    district dist ON a.district_id = dist.district_id\nWHERE \n    c.birth_date BETWEEN '1983-01-01' AND '1987-12-31'\n    AND dist.A2 = 'East Bohemia';\t----- bird -----\tfinancial",
    "181": "SELECT DISTINCT c.client_id\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nWHERE c.gender = 'F'\nORDER BY l.amount DESC\nLIMIT 3;\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(DISTINCT c.client_id)\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN trans t ON d.account_id = t.account_id\nWHERE c.gender = 'M'\n  AND c.birth_date BETWEEN '1974-01-01' AND '1976-12-31'\n  AND t.k_symbol = 'SIPO'\n  AND t.amount > 4000;\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(*) AS account_count\nFROM account\nJOIN district ON account.district_id = district.district_id\nWHERE district.A2 = 'Beroun'\n  AND account.date > '1996-12-31';\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(DISTINCT c.client_id) AS female_junior_cardholders\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card cd ON d.disp_id = cd.disp_id\nWHERE c.gender = 'F'\n  AND cd.type = 'junior';\t----- bird -----\tfinancial",
    "185": "SELECT \n    100.0 * COUNT(CASE WHEN c.gender = 'F' THEN 1 END) / COUNT(*) AS female_proportion\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN district dist ON a.district_id = dist.district_id\nWHERE dist.A3 = 'Prague';\t----- bird -----\tfinancial",
    "186": "SELECT \n    100.0 * COUNT(CASE WHEN c.gender = 'M' THEN 1 END) / COUNT(*) AS percentage_male_weekly\nFROM \n    account a\nJOIN \n    disp d ON a.account_id = d.account_id\nJOIN \n    client c ON d.client_id = c.client_id\nWHERE \n    a.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(DISTINCT c.client_id) AS weekly_owners_count\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nWHERE a.frequency = 'POPLATEK TYDNE'\n  AND d.type = 'owner';\t----- bird -----\tfinancial",
    "188": "SELECT l.account_id, l.amount\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nWHERE l.duration > 24\n  AND l.status = 'approved'  -- assuming 'approved' is the valid status\n  AND a.date < '1997-01-01'\n  AND l.amount = (\n    SELECT MIN(amount)\n    FROM loan l2\n    JOIN account a2 ON l2.account_id = a2.account_id\n    WHERE l2.duration > 24\n      AND l2.status = 'approved'\n      AND a2.date < '1997-01-01'\n  );\t----- bird -----\tfinancial",
    "189": "SELECT a.account_id\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nJOIN disp ON c.client_id = disp.client_id\nJOIN account a ON disp.account_id = a.account_id\nWHERE c.gender = 'F'\n  AND c.birth_date = (\n    SELECT MIN(birth_date)\n    FROM client\n    WHERE gender = 'F'\n  )\n  AND d.A11 = (\n    SELECT MIN(A11)\n    FROM district\n  );\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(*) AS client_count\nFROM client\nJOIN district ON client.district_id = district.district_id\nWHERE strftime('%Y', client.birth_date) = '1920'\n  AND district.A3 = 'East Bohemia';\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(*) AS num_loans\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nWHERE loan.status = 'prepayment'\n  AND loan.duration = 24\n  AND account.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "192": "SELECT AVG(l.amount) AS average_loan_amount\nFROM loan l\nJOIN trans t ON l.account_id = t.account_id\nWHERE l.status IN ('C', 'D')\n  AND t.operation = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "193": "SELECT c.client_id, c.district_id\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nWHERE d.type = 'owner';\t----- bird -----\tfinancial",
    "194": "SELECT \n    c.client_id,\n    (strftime('%Y', 'now') - strftime('%Y', c.birth_date)) AS age\nFROM \n    client c\nJOIN \n    disp d ON c.client_id = d.client_id\nJOIN \n    card card ON d.disp_id = card.disp_id\nWHERE \n    d.type = 'OWNER'\n    AND card.type = 'gold';\t----- bird -----\tfinancial",
    "195": "SELECT bond_type, COUNT(*) AS count\nFROM bond\nGROUP BY bond_type\nORDER BY count DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT a.molecule_id)\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label = '-' AND a.element = 'cl';\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(oxygen_count) AS avg_oxygen_count\nFROM (\n    SELECT a.molecule_id, COUNT(*) AS oxygen_count\n    FROM atom a\n    WHERE a.element = 'o'\n    AND a.molecule_id IN (\n        SELECT b.molecule_id\n        FROM bond b\n        WHERE b.bond_type = '-'\n    )\n    GROUP BY a.molecule_id\n) AS oxygen_per_molecule;\t----- bird -----\ttoxicology",
    "198": "SELECT \n    CAST(COUNT(CASE WHEN b.bond_type = '-' THEN 1 END) AS REAL) / COUNT(DISTINCT m.molecule_id) AS average_single_bonds\nFROM \n    molecule m\nLEFT JOIN \n    bond b ON m.molecule_id = b.molecule_id\nWHERE \n    m.label = '+';\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(DISTINCT a.molecule_id) AS non_carcinogenic_sodium_molecules\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.element = 'na'\n  AND m.label = '-';\t----- bird -----\ttoxicology",
    "200": "SELECT DISTINCT m.molecule_id\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE b.bond_type = '#' AND m.label = '+';\t----- bird -----\ttoxicology",
    "201": "SELECT\n  100.0 * SUM(CASE WHEN a.element = 'C' THEN 1 ELSE 0 END) / COUNT(a.atom_id) AS percentage_carbon\nFROM\n  atom a\nWHERE\n  a.molecule_id IN (\n    SELECT DISTINCT c.molecule_id\n    FROM connected c\n    JOIN bond b ON c.bond_id = b.bond_id\n    WHERE b.bond_type = '='\n  );\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(*) AS triple_bond_count\nFROM bond\nWHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) AS non_bromine_atom_count\nFROM atom\nWHERE element != 'Br';\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) AS carcinogenic_count\nFROM molecule\nWHERE molecule_id BETWEEN 'TR000' AND 'TR099'\n  AND label = '+';\t----- bird -----\ttoxicology",
    "205": "SELECT DISTINCT a.molecule_id\nFROM atom a\nWHERE a.element = 'c';\t----- bird -----\ttoxicology",
    "206": "SELECT \n    a1.element AS element1,\n    a2.element AS element2\nFROM connected\nJOIN atom a1 ON connected.atom_id = a1.atom_id\nJOIN atom a2 ON connected.atom_id2 = a2.atom_id\nWHERE connected.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "207": "SELECT \n    a.element AS element1,\n    a2.element AS element2\nFROM \n    bond b\nJOIN \n    connected c ON b.bond_id = c.bond_id\nJOIN \n    atom a ON c.atom_id = a.atom_id\nJOIN \n    atom a2 ON c.atom_id2 = a2.atom_id\nWHERE \n    b.bond_type = '=';\t----- bird -----\ttoxicology",
    "208": "SELECT m.label, COUNT(*) AS atom_count\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.element = 'h'\nGROUP BY m.label\nORDER BY atom_count DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "209": "SELECT DISTINCT b.bond_type\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE a.element = 'cl';\t----- bird -----\ttoxicology",
    "210": "SELECT \n    c.atom_id, \n    c.atom_id2\nFROM \n    connected c\nJOIN \n    bond b ON c.bond_id = b.bond_id\nWHERE \n    b.bond_type = '-';\t----- bird -----\ttoxicology",
    "211": "SELECT \n    c.atom_id, \n    c.atom_id2, \n    c.bond_id\nFROM \n    connected c\nJOIN \n    atom a1 ON c.atom_id = a1.atom_id\nJOIN \n    atom a2 ON c.atom_id2 = a2.atom_id\nJOIN \n    molecule m1 ON a1.molecule_id = m1.molecule_id\nJOIN \n    molecule m2 ON a2.molecule_id = m2.molecule_id\nWHERE \n    m1.label = '-' \n    AND m2.label = '-';\t----- bird -----\ttoxicology",
    "212": "SELECT element\nFROM atom\nWHERE molecule_id IN (\n    SELECT molecule_id\n    FROM molecule\n    WHERE label = '-'\n)\nGROUP BY element\nORDER BY COUNT(element)\nLIMIT 1;\t----- bird -----\ttoxicology",
    "213": "SELECT b.bond_type\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE (c.atom_id = 'TR004_8' AND c.atom_id2 = 'TR004_20')\n   OR (c.atom_id = 'TR004_20' AND c.atom_id2 = 'TR004_8');\t----- bird -----\ttoxicology",
    "214": "SELECT label\nFROM molecule\nWHERE label NOT IN (\n    SELECT DISTINCT m.label\n    FROM molecule m\n    JOIN atom a ON m.molecule_id = a.molecule_id\n    WHERE a.element != 'Sn'\n)\nORDER BY label;\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(DISTINCT a.atom_id) AS atom_count\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.molecule_id IN (\n    SELECT DISTINCT b.molecule_id\n    FROM bond b\n    WHERE b.bond_type = '-'\n)\nAND a.element IN ('i', 's');\t----- bird -----\ttoxicology",
    "216": "SELECT \n    c.atom_id, \n    c.atom_id2\nFROM \n    connected c\nJOIN \n    bond b ON c.bond_id = b.bond_id\nWHERE \n    b.bond_type = '#';\t----- bird -----\ttoxicology",
    "217": "SELECT DISTINCT a2.atom_id\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN atom a2 ON a2.atom_id = CASE \n    WHEN a.atom_id = c.atom_id THEN c.atom_id2\n    ELSE c.atom_id\nEND\nWHERE a.molecule_id = 'TR181';\t----- bird -----\ttoxicology",
    "218": "SELECT \n    100.0 * \n    SUM(CASE WHEN a.element IS NULL THEN 1 ELSE 0 END) / \n    COUNT(*) AS percentage_no_fluorine\nFROM \n    molecule m\nLEFT JOIN \n    atom a ON m.molecule_id = a.molecule_id AND a.element = 'f'\nWHERE \n    m.label = '+';\t----- bird -----\ttoxicology",
    "219": "SELECT\n  100.0 * COUNT(DISTINCT triple_bond_molecules.molecule_id) / total_carcinogenic.carcinogenic_count AS percent\nFROM\n  (SELECT COUNT(*) AS carcinogenic_count FROM molecule WHERE label = '+') AS total_carcinogenic,\n  (SELECT DISTINCT m.molecule_id\n   FROM molecule m\n   JOIN bond b ON m.molecule_id = b.molecule_id\n   WHERE m.label = '+' AND b.bond_type = '#') AS triple_bond_molecules;\t----- bird -----\ttoxicology",
    "220": "SELECT DISTINCT element\nFROM atom\nWHERE molecule_id = 'TR000'\nORDER BY element ASC\nLIMIT 3;\t----- bird -----\ttoxicology",
    "221": "SELECT \n    c.atom_id, \n    c.atom_id2\nFROM \n    connected c\nWHERE \n    c.bond_id = 'TR001_2_6'\n    AND c.atom_id IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR001')\n    AND c.atom_id2 IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR001');\t----- bird -----\ttoxicology",
    "222": "SELECT \n  SUM(label = '+') - SUM(label = '-') AS difference\nFROM \n  molecule;\t----- bird -----\ttoxicology",
    "223": "SELECT atom_id, atom_id2\nFROM connected\nWHERE bond_id = 'TR000_2_5';\t----- bird -----\ttoxicology",
    "224": "SELECT atom_id2\nFROM connected\nWHERE atom_id = 'TR000_2';\t----- bird -----\ttoxicology",
    "225": "SELECT DISTINCT m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = ' = '\nORDER BY m.label ASC\nLIMIT 5;\t----- bird -----\ttoxicology",
    "226": "SELECT \n  ROUND(\n    100.0 * \n    SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) / \n    COUNT(bond_id), \n    5\n  ) AS percent_double_bonds\nFROM bond\nWHERE molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "227": "SELECT \n  ROUND(\n    100.0 * SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) / COUNT(*), \n    3\n  ) AS percent\nFROM molecule;\t----- bird -----\ttoxicology",
    "228": "SELECT \n    ROUND(\n        100.0 * SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) / COUNT(*),\n        4\n    ) AS percent\nFROM atom\nWHERE molecule_id = 'TR206';\t----- bird -----\ttoxicology",
    "229": "SELECT DISTINCT bond_type\nFROM bond\nWHERE molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "230": "with `molecule_id = 'TR060'`.\n   - Then, get all the `element` values from the `atom` table where `molecule_id = 'TR060'`.\n\n4. **Write the SQL**:\n\n```sql\n-- Get the label of molecule TR060\nSELECT label\nFROM molecule\nWHERE molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "231": "SELECT \n    b.bond_type,\n    COUNT(*) AS bond_count\nFROM \n    connected c\nJOIN \n    bond b ON c.bond_id = b.bond_id\nWHERE \n    c.molecule_id = 'TR010'\nGROUP BY \n    b.bond_type\nORDER BY \n    bond_count DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "232": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN connected c ON m.molecule_id = c.molecule_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE m.label = '-' AND b.bond_type = '-'\nORDER BY m.molecule_id\nLIMIT 3;\t----- bird -----\ttoxicology",
    "233": "SELECT \n    c.atom_id, \n    c.atom_id2, \n    c.bond_id\nFROM \n    connected c\nJOIN \n    bond b ON c.bond_id = b.bond_id\nWHERE \n    b.molecule_id = 'TR006'\nORDER BY \n    c.bond_id ASC  -- or ORDER BY c.atom_id, c.atom_id2 if you want alphabetical by atoms\nLIMIT 2;\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(DISTINCT c.bond_id) AS bond_count\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.molecule_id = 'TR009'\n  AND (c.atom_id = 'TR009_12' OR c.atom_id2 = 'TR009_12');\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT m.molecule_id) AS carcinogenic_bromine_molecules_count\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '+' AND a.element = 'Br';\t----- bird -----\ttoxicology",
    "236": "SELECT \n    b.bond_type,\n    c.atom_id,\n    c.atom_id2\nFROM \n    bond b\nJOIN \n    connected c ON b.bond_id = c.bond_id\nWHERE \n    b.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "237": "SELECT \n    a.molecule_id,\n    m.label,\n    CASE \n        WHEN m.label = '+' THEN 'Carcinogenic'\n        ELSE 'Not Carcinogenic'\n    END AS carcinogenic_status\nFROM \n    atom a\nJOIN \n    molecule m ON a.molecule_id = m.molecule_id\nWHERE \n    a.atom_id = 'TR001_10';\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT b.molecule_id) AS num_molecules_with_triple_bond\nFROM bond b\nWHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(*) AS connection_count\nFROM connected\nWHERE atom_id LIKE 'TR%_19' OR atom_id2 LIKE 'TR%_19';\t----- bird -----\ttoxicology",
    "240": "SELECT DISTINCT a.element\nFROM atom a\nWHERE a.molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*) AS non_carcinogenic_count\nFROM molecule\nWHERE label = '-';\t----- bird -----\ttoxicology",
    "242": "SELECT DISTINCT m.molecule_id\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25'\n  AND m.label = '+';\t----- bird -----\ttoxicology",
    "243": "SELECT DISTINCT c.bond_id, b.bond_type\nFROM connected c\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nLEFT JOIN bond b ON c.bond_id = b.bond_id\nWHERE (a1.element = 'p' AND a2.element = 'n') OR (a1.element = 'n' AND a2.element = 'p');\t----- bird -----\ttoxicology",
    "244": "SELECT m.label\nFROM molecule m\nWHERE m.molecule_id = (\n    SELECT c.molecule_id\n    FROM connected c\n    JOIN bond b ON c.bond_id = b.bond_id\n    WHERE b.bond_type = ' = '\n    GROUP BY c.molecule_id\n    ORDER BY COUNT(*) DESC\n    LIMIT 1\n);\t----- bird -----\ttoxicology",
    "245": "SELECT AVG(bond_count) AS average_bonds\nFROM (\n    SELECT COUNT(c.bond_id) AS bond_count\n    FROM atom a\n    JOIN connected c ON a.atom_id = c.atom_id\n    WHERE a.element = 'i'\n    GROUP BY a.atom_id\n);\t----- bird -----\ttoxicology",
    "246": "SELECT \n    b.bond_type,\n    b.bond_id\nFROM \n    connected c\nJOIN \n    bond b ON c.bond_id = b.bond_id\nWHERE \n    c.atom_id = 'atom_45';\t----- bird -----\ttoxicology",
    "247": "SELECT DISTINCT a.element\nFROM atom a\nLEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE c.atom_id IS NULL;\t----- bird -----\ttoxicology",
    "248": "SELECT \n    a.element AS atom1_element,\n    a2.element AS atom2_element\nFROM \n    connected c\nJOIN \n    bond b ON c.bond_id = b.bond_id\nJOIN \n    atom a ON c.atom_id = a.atom_id\nJOIN \n    atom a2 ON c.atom_id2 = a2.atom_id\nWHERE \n    b.molecule_id = 'TR041'\n    AND b.bond_type = '#';\t----- bird -----\ttoxicology",
    "249": "SELECT \n    a1.element AS element1,\n    a2.element AS element2\nFROM \n    connected c\nJOIN \n    atom a1 ON c.atom_id = a1.atom_id\nJOIN \n    atom a2 ON c.atom_id2 = a2.atom_id\nWHERE \n    c.bond_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "250": "SELECT \n    m.molecule_id,\n    COUNT(b.bond_id) AS num_double_bonds\nFROM \n    molecule m\nJOIN \n    bond b ON m.molecule_id = b.molecule_id\nJOIN \n    connected c ON b.bond_id = c.bond_id\nWHERE \n    m.label = '+' \n    AND b.bond_type = ' = '\nGROUP BY \n    m.molecule_id\nORDER BY \n    num_double_bonds DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "251": "SELECT element, COUNT(*) AS element_count\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '+'\nGROUP BY element\nORDER BY element_count ASC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "252": "SELECT DISTINCT \n    CASE \n        WHEN c.atom_id = a.atom_id THEN c.atom_id2\n        ELSE c.atom_id\n    END AS bonded_atom_id\nFROM \n    atom a\nJOIN \n    connected c \n    ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE \n    a.element = 'pb';\t----- bird -----\ttoxicology",
    "253": "SELECT \n    a1.element AS atom1_element,\n    a2.element AS atom2_element\nFROM \n    bond b\nJOIN \n    connected c ON b.bond_id = c.bond_id\nJOIN \n    atom a1 ON c.atom_id = a1.atom_id\nJOIN \n    atom a2 ON c.atom_id2 = a2.atom_id\nWHERE \n    b.bond_type = '#';\t----- bird -----\ttoxicology",
    "254": "SELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM bond)) AS percentage_most_common_bond\nFROM (\n    SELECT \n        CASE WHEN a1.element < a2.element THEN a1.element ELSE a2.element END AS element1,\n        CASE WHEN a1.element < a2.element THEN a2.element ELSE a1.element END AS element2\n    FROM connected c\n    JOIN atom a1 ON c.atom_id = a1.atom_id\n    JOIN atom a2 ON c.atom_id2 = a2.atom_id\n) AS element_pairs\nWHERE (element1, element2) = (\n    SELECT \n        CASE WHEN a1.element < a2.element THEN a1.element ELSE a2.element END AS element1,\n        CASE WHEN a1.element < a2.element THEN a2.element ELSE a1.element END AS element2\n    FROM connected c\n    JOIN atom a1 ON c.atom_id = a1.atom_id\n    JOIN atom a2 ON c.atom_id2 = a2.atom_id\n    GROUP BY element1, element2\n    ORDER BY COUNT(*) DESC\n    LIMIT 1\n);\t----- bird -----\ttoxicology",
    "255": "SELECT \n    ROUND(\n        100.0 * SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) / COUNT(b.bond_id),\n        5\n    ) AS proportion_carcinogenic_single_bonds\nFROM \n    bond b\nJOIN \n    molecule m ON b.molecule_id = m.molecule_id\nWHERE \n    b.bond_type = '-';\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(*) AS total_carbon_hydrogen_atoms\nFROM atom\nWHERE element IN ('C', 'H');\t----- bird -----\ttoxicology",
    "257": "SELECT c.atom_id2\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nWHERE a.element = 's';\t----- bird -----\ttoxicology",
    "258": "SELECT DISTINCT b.bond_type\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE a.element = 'sn';\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT a.element) AS element_count\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(*) AS total_atoms\nFROM atom\nWHERE molecule_id IN (\n    SELECT DISTINCT b.molecule_id\n    FROM bond b\n    WHERE b.bond_type = '#'\n)\nAND element IN ('p', 'br');\t----- bird -----\ttoxicology",
    "261": "SELECT bond_id\nFROM bond\nWHERE molecule_id IN (\n    SELECT molecule_id\n    FROM molecule\n    WHERE label = '+'\n);\t----- bird -----\ttoxicology",
    "262": "SELECT m.molecule_id\nFROM molecule m\nWHERE m.label = '-'\n  AND m.molecule_id IN (\n    SELECT b.molecule_id\n    FROM bond b\n    WHERE b.bond_type = '-'\n  );\t----- bird -----\ttoxicology",
    "263": "with Only Single Bonds**\n\nWe need to find all `molecule_id`s where **all bonds** are of type `'-'`.\n\nThis can be done using a **double NOT EXISTS** pattern to ensure that a molecule has **no bonds** that are **not** single bonds.\n\n---\n\n### **Step 2: Count Total Atoms in Those Molecules**\n\nWe count all atoms in the molecules identified in Step 1.\n\n---\n\n### **Step 3: Count Chlorine Atoms in Those Molecules**\n\nWe count only the atoms where `element = 'cl'` in those same molecules.\n\n---\n\n### **Step 4: Calculate the Percentage**\n\nWe use the formula:\n\n```\nPercentage = (Number of Cl atoms / Total atoms) * 100\n```\n\n---\n\n### \u2705 Final SQL Query:\n\n```sql\nSELECT \n    100.0 * SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) / COUNT(*) AS percent_chlorine\nFROM atom a\nWHERE a.molecule_id IN (\n    SELECT m.molecule_id\n    FROM molecule m\n    WHERE NOT EXISTS (\n        SELECT 1\n        FROM bond b\n        WHERE b.molecule_id = m.molecule_id\n          AND b.bond_type != '-'\n    )\n    AND EXISTS (\n        SELECT 1\n        FROM bond b\n        WHERE b.molecule_id = m.molecule_id\n    )\n);\t----- bird -----\ttoxicology",
    "264": "SELECT molecule_id, label\nFROM molecule\nWHERE molecule_id IN ('TR000', 'TR001', 'TR002');\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id\nFROM molecule\nWHERE label = '-';\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(*) AS total_carcinogenic_molecules\nFROM molecule\nWHERE label = '+' \n  AND molecule_id BETWEEN 'TR000' AND 'TR030';\t----- bird -----\ttoxicology",
    "267": "SELECT \n    m.molecule_id,\n    b.bond_type\nFROM \n    molecule m\nJOIN \n    bond b ON m.molecule_id = b.molecule_id\nWHERE \n    m.molecule_id BETWEEN 'TR000' AND 'TR050';\t----- bird -----\ttoxicology",
    "268": "SELECT \n    a1.element AS element1,\n    a2.element AS element2\nFROM \n    connected c\nJOIN \n    atom a1 ON c.atom_id = a1.atom_id\nJOIN \n    atom a2 ON c.atom_id2 = a2.atom_id\nWHERE \n    c.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(DISTINCT c.bond_id) AS iodine_bond_count\nFROM connected c\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE a1.element = 'i' OR a2.element = 'i';\t----- bird -----\ttoxicology",
    "270": "SELECT MAX(label) AS most_common_label\nFROM molecule\nWHERE molecule_id IN (\n    SELECT DISTINCT molecule_id\n    FROM atom\n    WHERE element = 'ca'\n);\t----- bird -----\ttoxicology",
    "271": "SELECT \n    a1.element AS element1,\n    a2.element AS element2\nFROM \n    connected c\nJOIN \n    atom a1 ON c.atom_id = a1.atom_id\nJOIN \n    atom a2 ON c.atom_id2 = a2.atom_id\nWHERE \n    c.bond_id = 'TR001_1_8'\n    AND ((a1.element = 'cl' AND a2.element = 'c') OR (a1.element = 'c' AND a2.element = 'cl'));\t----- bird -----\ttoxicology",
    "272": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nWHERE m.label = '-'\n  AND b.bond_type = '#'\n  AND a.element = 'c'\nLIMIT 2;\t----- bird -----\ttoxicology",
    "273": "SELECT \n    100.0 * COUNT(DISTINCT CASE WHEN a.element = 'Cl' THEN m.molecule_id END) / COUNT(DISTINCT m.molecule_id) AS percentage\nFROM \n    molecule m\nLEFT JOIN \n    atom a ON m.molecule_id = a.molecule_id\nWHERE \n    m.label = '+';\t----- bird -----\ttoxicology",
    "274": "SELECT DISTINCT element\nFROM atom\nWHERE molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "275": "SELECT bond_id FROM bond WHERE bond_type = ' = ';\t----- bird -----\ttoxicology",
    "276": "SELECT c.atom_id, c.atom_id2\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "277": "SELECT \n    a1.element AS element1,\n    a2.element AS element2\nFROM \n    connected c\nJOIN \n    atom a1 ON c.atom_id = a1.atom_id\nJOIN \n    atom a2 ON c.atom_id2 = a2.atom_id\nWHERE \n    c.bond_id = 'TR000_1_2';\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(DISTINCT m.molecule_id) AS non_carcinogenic_single_bond_molecules\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = '-' AND m.label = '-';\t----- bird -----\ttoxicology",
    "279": "SELECT m.label\nFROM bond b\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE b.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "280": "SELECT \n    b.bond_id,\n    m.label\nFROM \n    bond b\nJOIN \n    connected c ON b.bond_id = c.bond_id\nJOIN \n    molecule m ON b.molecule_id = m.molecule_id\nWHERE \n    b.bond_type = '#';\t----- bird -----\ttoxicology",
    "281": "SELECT a.element, COUNT(*) AS count\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '+' \n  AND substr(a.atom_id, 7, 1) = '4'\nGROUP BY a.element;\t----- bird -----\ttoxicology",
    "282": "SELECT\n    m.label,\n    COUNT(a.atom_id) AS total_atoms,\n    SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END) AS hydrogen_count,\n    CAST(SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END) AS REAL) / COUNT(a.atom_id) AS hydrogen_ratio\nFROM\n    molecule m\nJOIN\n    atom a ON m.molecule_id = a.molecule_id\nWHERE\n    m.molecule_id = 'TR006'\nGROUP BY\n    m.label;\t----- bird -----\ttoxicology",
    "283": "SELECT m.label\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.element = 'ca';\t----- bird -----\ttoxicology",
    "284": "SELECT DISTINCT b.bond_type\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE a.element = 'c';\t----- bird -----\ttoxicology",
    "285": "SELECT \n    a1.element AS element1,\n    a2.element AS element2\nFROM \n    connected c\nJOIN \n    bond b ON c.bond_id = b.bond_id\nJOIN \n    atom a1 ON c.atom_id = a1.atom_id\nJOIN \n    atom a2 ON c.atom_id2 = a2.atom_id\nWHERE \n    c.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "286": "SELECT \n    (COUNT(DISTINCT CASE WHEN bond.bond_type = '#' THEN connected.molecule_id END) * 100.0 / COUNT(DISTINCT molecule.molecule_id)) AS triple_bond_percentage\nFROM \n    molecule\nLEFT JOIN \n    connected ON molecule.molecule_id = connected.molecule_id\nLEFT JOIN \n    bond ON connected.bond_id = bond.bond_id;\t----- bird -----\ttoxicology",
    "287": "SELECT \n  100.0 * SUM(CASE WHEN bond_type = ' = ' THEN 1 ELSE 0 END) / COUNT(*) AS percent_double_bonds\nFROM bond\nWHERE molecule_id = 'TR047';\t----- bird -----\ttoxicology",
    "288": "SELECT m.label\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.atom_id = 'TR001_1';\t----- bird -----\ttoxicology",
    "289": "SELECT label\nFROM molecule\nWHERE molecule_id = 'TR151';\t----- bird -----\ttoxicology",
    "290": "SELECT DISTINCT a.element\nFROM atom a\nWHERE a.molecule_id = 'TR151'\n  AND a.element IN ('pb', 'sn', 'te', 'br', 'i', 'f');\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(*) AS carcinogenic_count\nFROM molecule\nWHERE label = '+';\t----- bird -----\ttoxicology",
    "292": "SELECT a.atom_id, a.molecule_id, a.element\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE SUBSTR(m.molecule_id, 3, 3) BETWEEN '010' AND '050'\n  AND a.element = 'c';\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(*) AS atom_count\nFROM atom\nWHERE molecule_id IN (\n    SELECT molecule_id\n    FROM molecule\n    WHERE label = '+'\n);\t----- bird -----\ttoxicology",
    "294": "SELECT b.bond_id\nFROM bond b\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE b.bond_type = ' = '\n  AND m.label = '+';\t----- bird -----\ttoxicology",
    "295": "SELECT molecule_id\nFROM molecule\nWHERE label = '+';\t----- bird -----\ttoxicology",
    "296": "SELECT b.molecule_id\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_id = 'TR000_1_2'\n  AND (c.atom_id = 'TR000_1' OR c.atom_id2 = 'TR000_1');\t----- bird -----\ttoxicology",
    "297": "SELECT a.atom_id\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.element = 'c'\n  AND m.label = '-';\t----- bird -----\ttoxicology",
    "298": "SELECT \n  100.0 * COUNT(DISTINCT CASE WHEN a.element = 'h' THEN m.molecule_id END) / COUNT(DISTINCT m.molecule_id) AS percentage\nFROM \n  molecule m\nLEFT JOIN \n  atom a ON m.molecule_id = a.molecule_id\nWHERE \n  m.label = '+';\t----- bird -----\ttoxicology",
    "299": "SELECT label\nFROM molecule\nWHERE molecule_id = 'TR124';\t----- bird -----\ttoxicology",
    "300": "SELECT a.atom_id, a.element\nFROM atom a\nWHERE a.molecule_id = 'TR186';\t----- bird -----\ttoxicology",
    "301": "SELECT b.bond_type\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE c.bond_id = 'TR007_4_19';\t----- bird -----\ttoxicology",
    "302": "SELECT a.element, a2.element\nFROM connected c\nJOIN atom a ON c.atom_id = a.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE c.bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "303": "SELECT \n    m.label,\n    COUNT(b.bond_id) AS double_bond_count\nFROM \n    molecule m\nLEFT JOIN \n    bond b ON m.molecule_id = b.molecule_id\nWHERE \n    m.molecule_id = 'TR006'\n    AND b.bond_type = ' = ';\t----- bird -----\ttoxicology",
    "304": "SELECT \n    m.label AS molecule_label,\n    a.element AS element\nFROM \n    molecule m\nJOIN \n    atom a ON m.molecule_id = a.molecule_id\nWHERE \n    m.label = '+';\t----- bird -----\ttoxicology",
    "305": "SELECT \n    b.bond_id,\n    b.molecule_id,\n    c.atom_id,\n    c.atom_id2,\n    b.bond_type\nFROM \n    bond b\nJOIN \n    connected c ON b.bond_id = c.bond_id\nWHERE \n    b.bond_type = '-';\t----- bird -----\ttoxicology",
    "306": "SELECT \n    m.molecule_id,\n    m.label,\n    GROUP_CONCAT(DISTINCT a.element) AS elements\nFROM \n    molecule m\nJOIN \n    bond b ON m.molecule_id = b.molecule_id\nJOIN \n    connected c ON b.bond_id = c.bond_id\nJOIN \n    atom a ON a.atom_id = c.atom_id\nWHERE \n    b.bond_type = '#'\nGROUP BY \n    m.molecule_id, m.label;\t----- bird -----\ttoxicology",
    "307": "SELECT \n    a1.element AS element1,\n    a2.element AS element2\nFROM \n    connected c\nJOIN \n    atom a1 ON c.atom_id = a1.atom_id\nJOIN \n    atom a2 ON c.atom_id2 = a2.atom_id\nWHERE \n    c.bond_id = 'TR000_2_3';\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(DISTINCT c.bond_id) AS num_bonds_with_chlorine\nFROM connected c\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE a1.element = 'cl' OR a2.element = 'cl';\t----- bird -----\ttoxicology",
    "309": "SELECT \n    (SELECT GROUP_CONCAT(atom_id) FROM atom WHERE molecule_id = 'TR346') AS atom_ids,\n    (SELECT COUNT(DISTINCT bond_type) FROM bond WHERE molecule_id = 'TR346') AS bond_type_count;\t----- bird -----\ttoxicology",
    "310": "SELECT\n  COUNT(DISTINCT b.molecule_id) AS total_molecules_with_double_bond,\n  SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) AS carcinogenic_count\nFROM bond b\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE b.bond_type = ' = ';\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT m.molecule_id)\nFROM molecule m\nWHERE m.molecule_id NOT IN (\n    SELECT DISTINCT a.molecule_id\n    FROM atom a\n    WHERE a.element = 's'\n)\nAND m.molecule_id NOT IN (\n    SELECT DISTINCT b.molecule_id\n    FROM bond b\n    WHERE b.bond_type = ' = '\n);\t----- bird -----\ttoxicology",
    "312": "SELECT m.label\nFROM bond b\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE b.bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(*) AS atom_count\nFROM atom\nWHERE molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) AS single_bond_count\nFROM bond\nWHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "315": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE a.element = 'cl'\n  AND m.label = '+';\t----- bird -----\ttoxicology",
    "316": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE LOWER(a.element) = 'c'\n  AND m.label = '-';\t----- bird -----\ttoxicology",
    "317": "SELECT\n  100.0 * COUNT(DISTINCT CASE WHEN a.element = 'Cl' THEN m.molecule_id END) / COUNT(DISTINCT m.molecule_id) AS percentage\nFROM\n  molecule m\n  LEFT JOIN atom a ON m.molecule_id = a.molecule_id\nWHERE\n  m.label = '+';\t----- bird -----\ttoxicology",
    "318": "SELECT molecule_id\nFROM bond\nWHERE bond_id = 'TR001_1_7';\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(DISTINCT a.element) AS element_count\nFROM connected c\nJOIN atom a ON c.atom_id = a.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE c.bond_id = 'TR001_3_4';\t----- bird -----\ttoxicology",
    "320": "SELECT b.bond_type\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE (c.atom_id = 'TR000_1' AND c.atom_id2 = 'TR000_2')\n   OR (c.atom_id = 'TR000_2' AND c.atom_id2 = 'TR000_1');\t----- bird -----\ttoxicology",
    "321": "SELECT a.molecule_id\nFROM connected c\nJOIN atom a ON c.atom_id = a.atom_id\nWHERE c.atom_id = 'TR000_2'\n  AND c.atom_id2 = 'TR000_4';\t----- bird -----\ttoxicology",
    "322": "SELECT element\nFROM atom\nWHERE atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "323": "SELECT \n    molecule_id,\n    label,\n    CASE \n        WHEN label = '+' THEN 'Carcinogenic'\n        WHEN label = '-' THEN 'Non-carcinogenic'\n        ELSE 'Unknown'\n    END AS carcinogenic_status\nFROM \n    molecule\nWHERE \n    molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "324": "SELECT \n  100.0 * \n  SUM(CASE WHEN b.bond_type = '-' THEN 1 ELSE 0 END) / \n  COUNT(*) AS percentage_single_bond_atoms\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id;\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT m.molecule_id) AS carcinogenic_nitrogen_molecules_count\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '+' AND a.element = 'n';\t----- bird -----\ttoxicology",
    "326": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nWHERE m.molecule_id IN (\n    SELECT a.molecule_id\n    FROM atom a\n    WHERE a.element = 's'\n)\nAND m.molecule_id IN (\n    SELECT b.molecule_id\n    FROM bond b\n    WHERE b.bond_type = ' = '\n);\t----- bird -----\ttoxicology",
    "327": "SELECT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '-'\nGROUP BY m.molecule_id\nHAVING COUNT(a.atom_id) > 5;\t----- bird -----\ttoxicology",
    "328": "SELECT bond_id\n   FROM bond\n   WHERE molecule_id = 'TR024' AND bond_type = '=';\t----- bird -----\ttoxicology",
    "329": "SELECT a.molecule_id\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label = '+'\nGROUP BY a.molecule_id\nORDER BY COUNT(a.atom_id) DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "330": "SELECT \n    100.0 * COUNT(DISTINCT h.molecule_id) / (SELECT COUNT(*) FROM molecule WHERE label = '+') AS percentage\nFROM \n    atom h\nJOIN \n    connected c ON h.atom_id = c.atom_id\nJOIN \n    bond b ON c.bond_id = b.bond_id\nJOIN \n    molecule m ON h.molecule_id = m.molecule_id\nWHERE \n    h.element = 'h'\n    AND b.bond_type = '#'\n    AND m.label = '+';\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(*) AS carcinogenic_count\nFROM molecule\nWHERE label = '+';\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(DISTINCT b.molecule_id) AS num_molecules_with_single_bonds\nFROM bond b\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE b.bond_type = '-'\n  AND b.molecule_id BETWEEN 'TR004' AND 'TR010';\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(*) AS carbon_count\nFROM atom\nWHERE molecule_id = 'TR008'\n  AND element = 'c';\t----- bird -----\ttoxicology",
    "334": "SELECT a.element\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.atom_id = 'TR004_7'\n  AND m.label = '-';\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT c.molecule_id) AS total_molecules_with_double_bonded_oxygen\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE (a1.element = 'o' OR a2.element = 'o')\n  AND b.bond_type = ' = ';\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT m.molecule_id) AS non_carcinogenic_triple_bond_molecules\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = '#' AND m.label = '-';\t----- bird -----\ttoxicology",
    "337": "SELECT 'element' AS type, element AS value\nFROM atom\nWHERE molecule_id = 'TR002'\n\nUNION ALL\n\nSELECT 'bond_type' AS type, bond_type AS value\nFROM bond\nWHERE molecule_id = 'TR002';\t----- bird -----\ttoxicology",
    "338": "SELECT a.atom_id\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.molecule_id = 'TR012'\n  AND b.bond_type = ' = '\n  AND a.element = 'c';\t----- bird -----\ttoxicology",
    "339": "SELECT a.atom_id\nFROM atom a\nWHERE a.molecule_id IN (\n    SELECT m.molecule_id\n    FROM molecule m\n    WHERE m.label = '+'\n    INTERSECT\n    SELECT a2.molecule_id\n    FROM atom a2\n    WHERE a2.element = 'o'\n);\t----- bird -----\ttoxicology",
    "340": "SELECT \n    id,\n    name,\n    cardKingdomId,\n    cardKingdomFoilId\nFROM \n    cards\nWHERE \n    cardKingdomFoilId IS NOT NULL \n    AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "341": "SELECT *\nFROM cards\nWHERE borderColor = 'borderless'\n  AND (cardKingdomFoilId IS NULL OR cardKingdomId IS NULL);\t----- bird -----\tcard_games",
    "342": "SELECT name\nFROM cards\nWHERE faceConvertedManaCost > convertedManaCost;\t----- bird -----\tcard_games",
    "343": "SELECT name\nFROM cards\nWHERE frameVersion = '2015'\n  AND edhrecRank < 100;\t----- bird -----\tcard_games",
    "344": "SELECT c.name, c.uuid, c.rarity, c.setCode\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.rarity = 'mythic'\n  AND l.format = 'gladiator'\n  AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "345": "SELECT \n    c.name AS card_name,\n    l.status AS vintage_status\nFROM \n    cards c\nJOIN \n    legalities l ON c.uuid = l.uuid\nWHERE \n    c.types = 'Artifact'\n    AND c.side IS NULL\n    AND l.format = 'vintage';\t----- bird -----\tcard_games",
    "346": "SELECT c.id, c.artist\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE (c.power = '*' OR c.power IS NULL)\n  AND l.format = 'commander'\n  AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "347": "SELECT \n    c.id AS card_id,\n    c.name AS card_name,\n    r.date AS ruling_date,\n    r.text AS ruling_text,\n    CASE \n        WHEN c.hasContentWarning = 1 THEN 'Yes' \n        ELSE 'No' \n    END AS has_missing_or_degraded_properties\nFROM \n    cards c\nJOIN \n    rulings r ON c.uuid = r.uuid\nWHERE \n    c.artist = 'Stephen Daniele';\t----- bird -----\tcard_games",
    "348": "SELECT r.date, r.text\nFROM rulings r\nJOIN cards c ON r.uuid = c.uuid\nWHERE c.name = 'Sublime Epiphany' AND c.number = '74s';\t----- bird -----\tcard_games",
    "349": "SELECT \n    c.name AS card_name,\n    c.artist,\n    CASE WHEN c.isPromo = 1 THEN 'Yes' ELSE 'No' END AS is_promo\nFROM \n    rulings r\nJOIN \n    cards c ON r.uuid = c.uuid\nGROUP BY \n    c.uuid\nORDER BY \n    COUNT(r.id) DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "350": "SELECT fd.language\nFROM foreign_data fd\nWHERE fd.uuid = (\n    SELECT c.uuid\n    FROM cards c\n    WHERE c.name = 'Annul' AND c.number = '29'\n);\t----- bird -----\tcard_games",
    "351": "SELECT DISTINCT c.name\nFROM cards c\nJOIN foreign_data f ON c.uuid = f.uuid\nWHERE f.language = 'Japanese';\t----- bird -----\tcard_games",
    "352": "SELECT \n    100.0 * COUNT(DISTINCT fd.uuid) / (SELECT COUNT(*) FROM cards) AS percentage_chinese_simplified\nFROM \n    foreign_data fd\nWHERE \n    fd.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "353": "SELECT \n    s.name AS setName, \n    s.totalSetSize AS totalCards\nFROM \n    set_translations st\nJOIN \n    sets s ON st.setCode = s.code\nWHERE \n    st.language = 'Italian';\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT TRIM(value)) AS unique_types_count\nFROM cards\nCROSS JOIN json_each(REPLACE(types, ' ', '')) -- Remove spaces and split by commas\nWHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "355": "SELECT keywords\nFROM cards\nWHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) AS infinite_power_count\nFROM cards\nWHERE power = '*';\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes\nFROM cards\nWHERE name = 'Duress';\t----- bird -----\tcard_games",
    "358": "SELECT borderColor\nFROM cards\nWHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "359": "SELECT originalType\nFROM cards\nWHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "360": "SELECT DISTINCT st.language\nFROM cards c\nJOIN set_translations st ON c.setCode = st.setCode\nWHERE c.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(DISTINCT cards.uuid)\nFROM legalities\nJOIN cards ON legalities.uuid = cards.uuid\nWHERE legalities.status = 'restricted'\n  AND cards.isTextless = 0;\t----- bird -----\tcard_games",
    "362": "SELECT r.date, r.text\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nWHERE c.name = 'Condemn';\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(DISTINCT c.uuid)\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.status = 'restricted'\n  AND c.isStarter = 1;\t----- bird -----\tcard_games",
    "364": "SELECT l.format, l.status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.name = 'Cloudchaser Eagle';\t----- bird -----\tcard_games",
    "365": "SELECT type\nFROM cards\nWHERE name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "366": "SELECT l.format, l.status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "367": "SELECT DISTINCT c.artist\nFROM cards c\nJOIN foreign_data f ON c.uuid = f.uuid\nWHERE f.language = 'Phyrexian';\t----- bird -----\tcard_games",
    "368": "SELECT \n    100.0 * COUNT(CASE WHEN borderColor = 'borderless' THEN 1 END) / COUNT(*) AS borderless_percentage\nFROM cards;\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(DISTINCT fd.uuid)\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nWHERE fd.language = 'German'\n  AND c.isReprint = 1;\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(*) AS borderless_russian_cards\nFROM cards c\nJOIN foreign_data f ON c.uuid = f.uuid\nWHERE c.borderColor = 'borderless'\n  AND f.language = 'Russian';\t----- bird -----\tcard_games",
    "371": "SELECT \n    100.0 * COUNT(CASE WHEN fd.language = 'French' THEN 1 END) / COUNT(*) AS percentage_french_story_spotlight\nFROM (\n    SELECT c.uuid\n    FROM cards c\n    WHERE c.isStorySpotlight = 1\n) ss\nLEFT JOIN foreign_data fd ON ss.uuid = fd.uuid;\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) \nFROM cards \nWHERE toughness = '99';\t----- bird -----\tcard_games",
    "373": "SELECT name\nFROM cards\nWHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) AS black_border_mtgo_only_cards\nFROM cards\nWHERE borderColor = 'black'\n  AND availability = 'mtgo';\t----- bird -----\tcard_games",
    "375": "SELECT id\nFROM cards\nWHERE convertedManaCost = 0;\t----- bird -----\tcard_games",
    "376": "SELECT layout\nFROM cards\nWHERE keywords LIKE '%flying%';\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*)\nFROM cards\nWHERE originalType = 'Summon - Angel'\n  AND subtypes NOT LIKE '%Angel%';\t----- bird -----\tcard_games",
    "378": "SELECT id\nFROM cards\nWHERE cardKingdomFoilId IS NOT NULL\n  AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "379": "SELECT id\nFROM cards\nWHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank\nFROM cards\nWHERE frameVersion = '2015';\t----- bird -----\tcard_games",
    "381": "SELECT DISTINCT c.artist\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE fd.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT DISTINCT c.name\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.availability = 'paper'\n  AND fd.language = 'Japanese';\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) AS banned_white_border_cards\nFROM legalities\nJOIN cards ON legalities.uuid = cards.uuid\nWHERE legalities.status = 'Banned'\n  AND cards.borderColor = 'white';\t----- bird -----\tcard_games",
    "384": "SELECT \n    l.uuid,\n    fd.language\nFROM \n    legalities l\nJOIN \n    foreign_data fd ON l.uuid = fd.uuid\nWHERE \n    l.format = 'legacy';\t----- bird -----\tcard_games",
    "385": "SELECT r.date, r.text\nFROM rulings r\nJOIN cards c ON r.uuid = c.uuid\nWHERE c.name = 'Beacon of Immortality';\t----- bird -----\tcard_games",
    "386": "SELECT \n    COUNT(DISTINCT c.uuid) AS future_frame_card_count,\n    GROUP_CONCAT(DISTINCT l.status) AS legality_statuses\nFROM \n    cards c\nJOIN \n    legalities l ON c.uuid = l.uuid\nWHERE \n    c.frameVersion = 'future';\t----- bird -----\tcard_games",
    "387": "SELECT \n    c.name AS card_name,\n    c.colors AS card_colors\nFROM \n    cards c\nJOIN \n    sets s ON c.setCode = s.code\nWHERE \n    s.code = 'OGW';\t----- bird -----\tcard_games",
    "388": "SELECT \n    c.name AS card_name,\n    st.language\nFROM \n    cards c\nJOIN \n    set_translations st\n    ON c.setCode = st.setCode\nWHERE \n    c.setCode = '10E'\n    AND c.convertedManaCost = 5;\t----- bird -----\tcard_games",
    "389": "SELECT \n    c.name, \n    r.date\nFROM \n    cards c\nJOIN \n    rulings r ON c.uuid = r.uuid\nWHERE \n    c.originalType = 'Creature - Elf';\t----- bird -----\tcard_games",
    "390": "SELECT \n    id,\n    colors,\n    layout AS format\nFROM \n    cards\nWHERE \n    id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
    "391": "SELECT DISTINCT c.name, c.uuid, c.originalType, c.colors, fd.language\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.originalType = 'Artifact'\n  AND c.colors = 'B'\n  AND fd.language != 'en';\t----- bird -----\tcard_games",
    "392": "SELECT \n    c.name,\n    r.date\nFROM \n    cards c\nJOIN \n    rulings r ON c.uuid = r.uuid\nWHERE \n    c.rarity = 'uncommon'\nORDER BY \n    r.date ASC\nLIMIT 3;\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) AS non_powerful_foil_count\nFROM cards\nWHERE artist = 'John Avon'\n  AND cardKingdomFoilId IS NULL;\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) AS powerful_white_bordered_cards\nFROM cards\nWHERE borderColor = 'white'\n  AND cardKingdomFoilId IS NOT NULL\n  AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) AS count\nFROM cards\nWHERE artist = 'UDON'\n  AND availability = 'mtgo'\n  AND hand = '-1';\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) \nFROM cards\nWHERE frameVersion = '1993'\n  AND availability = 'paper'\n  AND hasContentWarning = 1;\t----- bird -----\tcard_games",
    "397": "SELECT manaCost\nFROM cards\nWHERE layout = 'normal'\n  AND frameVersion = '2003'\n  AND borderColor = 'black'\n  AND availability = 'mtgo,paper';\t----- bird -----\tcard_games",
    "398": "SELECT \n    SUM(CAST(SUBSTR(manaCost, 1, INSTR(manaCost || ' ', ' ') - 1) AS INTEGER)) AS total_unconverted_mana_cost\nFROM (\n    SELECT \n        manaCost\n    FROM \n        cards\n    WHERE \n        artist = 'Rob Alexander'\n        AND manaCost GLOB '[0-9]*'\n) AS filtered_cards;\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT types\nFROM cards\nWHERE availability = 'arena';\t----- bird -----\tcard_games",
    "400": "SELECT DISTINCT s.setCode\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nJOIN sets s ON c.setCode = s.code\nWHERE fd.language = 'Spanish';\t----- bird -----\tcard_games",
    "401": "SELECT \n    100.0 * SUM(CASE WHEN isOnlineOnly = 1 THEN 1 ELSE 0 END) / COUNT(*) AS percentage\nFROM \n    cards\nWHERE \n    frameEffects = 'legendary';\t----- bird -----\tcard_games",
    "402": "WITH StorySpotlightCounts AS (\n    SELECT\n        COUNT(*) AS total_story_spotlight,\n        SUM(CASE WHEN isTextless = 0 THEN 1 ELSE 0 END) AS story_spotlight_no_textbox\n    FROM cards\n    WHERE isStorySpotlight = 1\n),\n-- Step 3: Calculate percentage\nPercentageCalculation AS (\n    SELECT\n        (100.0 * story_spotlight_no_textbox / total_story_spotlight) AS percentage\n    FROM StorySpotlightCounts\n)\n-- Step 4: Get the IDs of Story Spotlight cards without a text box\nSELECT\n    id,\n    (SELECT percentage FROM PercentageCalculation) AS percentage\nFROM cards\nWHERE isStorySpotlight = 1 AND isTextless = 0;\t----- bird -----\tcard_games",
    "403": "SELECT \n    (COUNT(DISTINCT fd.uuid) * 100.0 / (SELECT COUNT(*) FROM cards)) AS percentage_spanish,\n    c.name AS card_name\nFROM \n    foreign_data fd\nJOIN \n    cards c ON fd.uuid = c.uuid\nWHERE \n    fd.language = 'Spanish'\nORDER BY \n    c.name;\t----- bird -----\tcard_games",
    "404": "SELECT code FROM sets WHERE baseSetSize = 309;\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(DISTINCT st.setCode)\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.block = 'Commander'\n  AND st.language = 'Portuguese (Brasil)';\t----- bird -----\tcard_games",
    "406": "SELECT DISTINCT c.id\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.types LIKE '%Creature%' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT fd.type AS german_type\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE fd.language = 'German'\n  AND fd.type IS NOT NULL;\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) AS unknown_power_with_triggered_ability_count\nFROM cards\nWHERE (power IS NULL OR power = '*')\n  AND text LIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(DISTINCT c.uuid)\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nJOIN legalities l ON c.uuid = l.uuid\nWHERE r.text = 'This is a triggered mana ability.'\n  AND c.side IS NULL\n  AND l.format = 'premodern';\t----- bird -----\tcard_games",
    "410": "SELECT c.id\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.artist = 'Erica Yang'\n  AND c.availability = 'paper'\n  AND l.format = 'pauper'\n  AND l.status = 'legal';\t----- bird -----\tcard_games",
    "411": "SELECT c.artist\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE fd.flavorText = 'Das perfekte Gegenmittel zu einer dichten Formation';\t----- bird -----\tcard_games",
    "412": "SELECT fd.name AS foreign_name\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.type = 'Creature'\n  AND c.layout = 'normal'\n  AND c.borderColor = 'black'\n  AND c.artist = 'Matthew D. Wilson'\n  AND fd.language = 'French';\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(DISTINCT c.uuid)\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nWHERE c.rarity = 'rare'\n  AND r.date = '2007-02-01';\t----- bird -----\tcard_games",
    "414": "SELECT st.language\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.baseSetSize = 180 AND s.block = 'Ravnica';\t----- bird -----\tcard_games",
    "415": "with format 'commander' and legal status that do not have a content warning**, we need to:\n\n1. **Join** the `cards` and `legalities` tables on the `uuid` field.\n2. **Filter** for:\n   - `legalities.format = 'commander'`\n   - `legalities.status = 'legal'`\n3. **Count** the total number of such cards.\n4. **Count** how many of those have `hasContentWarning = 0`.\n5. **Calculate** the percentage using the formula:\n   ```\n   (COUNT(hasContentWarning = 0) / COUNT(*)) * 100\n   ```\n\nHere is the correct **SQLite** query to achieve this:\n\n```sql\nSELECT \n    100.0 * SUM(CASE WHEN cards.hasContentWarning = 0 THEN 1 ELSE 0 END) / COUNT(*) AS percentage_no_content_warning\nFROM \n    cards\nJOIN \n    legalities ON cards.uuid = legalities.uuid\nWHERE \n    legalities.format = 'commander' \n    AND legalities.status = 'legal';\t----- bird -----\tcard_games",
    "416": "SELECT \n    100.0 * COUNT(CASE WHEN fd.language = 'French' THEN 1 END) / COUNT(*) AS percentage\nFROM \n    cards c\nLEFT JOIN \n    foreign_data fd ON c.uuid = fd.uuid\nWHERE \n    c.power IS NULL OR c.power = '*';\t----- bird -----\tcard_games",
    "417": "SELECT \n    100.0 * \n    (SELECT COUNT(*) \n     FROM set_translations st\n     JOIN sets s ON st.setCode = s.code\n     WHERE st.language = 'Japanese' AND s.type = 'expansion') /\n    (SELECT COUNT(*) \n     FROM set_translations st\n     WHERE st.language = 'Japanese') AS percentage;\t----- bird -----\tcard_games",
    "418": "SELECT printings\nFROM cards\nWHERE artist = 'Daren Bader';\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) AS count\nFROM cards\nWHERE borderColor = 'borderless'\n  AND edhrecRank > 12000;\t----- bird -----\tcard_games",
    "420": "SELECT\n    SUM(CASE WHEN isOversized = 1 THEN 1 ELSE 0 END) AS oversized_count,\n    SUM(CASE WHEN isReprint = 1 THEN 1 ELSE 0 END) AS reprinted_count,\n    SUM(CASE WHEN isPromo = 1 THEN 1 ELSE 0 END) AS promo_count\nFROM cards;\t----- bird -----\tcard_games",
    "421": "SELECT name\nFROM cards\nWHERE (power IS NULL OR power = '*')\n  AND promoTypes LIKE '%arenaleague%'\nORDER BY name ASC\nLIMIT 3;\t----- bird -----\tcard_games",
    "422": "SELECT language\nFROM foreign_data\nWHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "423": "SELECT id\nFROM cards\nWHERE cardKingdomFoilId IS NOT NULL\n  AND cardKingdomId IS NOT NULL\nORDER BY cardKingdomFoilId ASC\nLIMIT 3;\t----- bird -----\tcard_games",
    "424": "SELECT \n    (COUNT(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 END) * 100.0 / COUNT(CASE WHEN layout = 'normal' THEN 1 END)) AS proportion_textless_normal\nFROM cards;\t----- bird -----\tcard_games",
    "425": "SELECT number\nFROM cards\nWHERE side IS NULL\n  AND INSTR(subtypes, 'Angel') > 0\n  AND INSTR(subtypes, 'Wizard') > 0;\t----- bird -----\tcard_games",
    "426": "SELECT name\nFROM sets\nWHERE mtgoCode IS NULL OR mtgoCode = ''\nORDER BY name ASC\nLIMIT 3;\t----- bird -----\tcard_games",
    "427": "SELECT DISTINCT fd.language\nFROM foreign_data fd\nJOIN cards c ON fd.uuid = c.uuid\nJOIN sets s ON c.setCode = s.code\nWHERE s.mcmName = 'Archenemy' AND s.code = 'ARC';\t----- bird -----\tcard_games",
    "428": "SELECT \n    s.name AS setName,\n    st.translation\nFROM \n    sets s\nJOIN \n    set_translations st ON s.code = st.setCode\nWHERE \n    s.id = 5;\t----- bird -----\tcard_games",
    "429": "SELECT \n    st.language,\n    s.type AS expansion_type\nFROM \n    sets s\nLEFT JOIN \n    set_translations st ON s.code = st.setCode\nWHERE \n    s.id = 206;\t----- bird -----\tcard_games",
    "430": "SELECT DISTINCT s.id, s.name\nFROM sets s\nJOIN foreign_data fd ON s.code = (\n    SELECT setCode\n    FROM cards\n    WHERE uuid = fd.uuid\n)\nWHERE s.block = 'Shadowmoor'\n  AND fd.language = 'it'\nORDER BY s.name ASC\nLIMIT 2;\t----- bird -----\tcard_games",
    "431": "SELECT s.id, s.code, s.name\nFROM sets s\nJOIN foreign_data fd ON s.code = (SELECT setCode FROM cards WHERE uuid = fd.uuid)\nWHERE s.isForeignOnly = 0\n  AND s.isFoilOnly = 1\n  AND fd.language = 'Japanese';\t----- bird -----\tcard_games",
    "432": "SELECT s.code, s.name, s.baseSetSize\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE st.language = 'Russian'\nORDER BY s.baseSetSize DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "433": "with `foreign_data.language = 'Chinese Simplified'`.\n5. **Calculate the percentage** using the formula:\n   ```\n   (number of online only Chinese Simplified cards / total Chinese Simplified cards) * 100\n   ```\n\nHere is the **SQLite SQL query** to achieve this:\n\n```sql\nSELECT \n    100.0 * COUNT(CASE WHEN cards.isOnlineOnly = 1 THEN 1 END) / COUNT(*) AS percentage\nFROM \n    cards\nJOIN \n    foreign_data ON cards.uuid = foreign_data.uuid\nWHERE \n    foreign_data.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(DISTINCT s.code) AS japanese_only_set_count\nFROM set_translations st\nJOIN sets s ON st.setCode = s.code\nWHERE st.language = 'Japanese'\n  AND (s.mtgoCode IS NULL OR s.mtgoCode = '');\t----- bird -----\tcard_games",
    "435": "SELECT \n    COUNT(*) AS black_border_count,\n    GROUP_CONCAT(id) AS black_border_card_ids\nFROM \n    cards\nWHERE \n    borderColor = 'black';\t----- bird -----\tcard_games",
    "436": "SELECT id\nFROM cards\nWHERE frameEffects = 'extendedart';\t----- bird -----\tcard_games",
    "437": "SELECT name, uuid\nFROM cards\nWHERE borderColor = 'black'\n  AND isFullArt = 1;\t----- bird -----\tcard_games",
    "438": "SELECT code FROM sets WHERE id = 174;\t----- bird -----\tcard_games",
    "439": "SELECT name\nFROM sets\nWHERE code = 'ALL';\t----- bird -----\tcard_games",
    "440": "SELECT fd.language\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "441": "SELECT code\nFROM sets\nWHERE releaseDate = '2007-07-13';\t----- bird -----\tcard_games",
    "442": "SELECT baseSetSize, code\nFROM sets\nWHERE block IN ('Masques', 'Mirage');\t----- bird -----\tcard_games",
    "443": "SELECT code\nFROM sets\nWHERE type = 'expansion';\t----- bird -----\tcard_games",
    "444": "SELECT \n    fd.name AS foreign_name,\n    c.type AS card_type\nFROM \n    cards c\nJOIN \n    foreign_data fd ON c.uuid = fd.uuid\nWHERE \n    c.watermark = 'boros';\t----- bird -----\tcard_games",
    "445": "SELECT \n    fd.language,\n    fd.flavorText,\n    c.type\nFROM \n    cards c\nJOIN \n    foreign_data fd ON c.uuid = fd.uuid\nWHERE \n    c.watermark = 'colorpie';\t----- bird -----\tcard_games",
    "446": "SELECT \n    (CAST(total_with_10 AS REAL) / total_cards) * 100 AS percentage\nFROM (\n    SELECT \n        (SELECT COUNT(*) FROM cards \n         WHERE setCode = (SELECT code FROM sets WHERE name = 'Abyssal Horror') \n           AND convertedManaCost = 10) AS total_with_10,\n        (SELECT COUNT(*) FROM cards \n         WHERE setCode = (SELECT code FROM sets WHERE name = 'Abyssal Horror')) AS total_cards\n);\t----- bird -----\tcard_games",
    "447": "SELECT DISTINCT s.code\nFROM sets s\nJOIN cards c ON s.code = c.setCode\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.format = 'commander' AND s.type = 'expansion';\t----- bird -----\tcard_games",
    "448": "SELECT \n    fd.name AS foreign_name,\n    c.type AS card_type\nFROM \n    cards c\nJOIN \n    foreign_data fd ON c.uuid = fd.uuid\nWHERE \n    c.watermark = 'Abzan';\t----- bird -----\tcard_games",
    "449": "SELECT \n    fd.language,\n    c.type\nFROM \n    cards c\nJOIN \n    foreign_data fd ON c.uuid = fd.uuid\nWHERE \n    c.watermark = 'azorius';\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) AS powerful_cards_count\nFROM cards\nWHERE artist = 'Aaron Miller'\n  AND cardKingdomFoilId IS NOT NULL\n  AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) AS card_count\nFROM cards\nWHERE availability LIKE '%paper%'\n  AND hand = '3';\t----- bird -----\tcard_games",
    "452": "SELECT name\nFROM cards\nWHERE isTextless = 0;\t----- bird -----\tcard_games",
    "453": "SELECT manaCost\nFROM cards\nWHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) AS unknown_power_white_border_cards\nFROM cards\nWHERE borderColor = 'white'\n  AND (power = '*' OR power IS NULL);\t----- bird -----\tcard_games",
    "455": "SELECT name\nFROM cards\nWHERE isPromo = 1\n  AND side IS NOT NULL;\t----- bird -----\tcard_games",
    "456": "SELECT supertypes, subtypes\nFROM cards\nWHERE name = 'Molimo, Maro-Sorcerer';\t----- bird -----\tcard_games",
    "457": "SELECT DISTINCT c.purchaseUrls\nFROM cards c\nWHERE c.promoTypes = 'bundle';\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) AS artist_count\nFROM cards\nWHERE borderColor = 'black'\n  AND availability LIKE '%arena%'\n  AND availability LIKE '%mtgo%';\t----- bird -----\tcard_games",
    "459": "SELECT \n    name, \n    convertedManaCost\nFROM \n    cards\nWHERE \n    name IN ('Serra Angel', 'Shrine Keeper');\t----- bird -----\tcard_games",
    "460": "SELECT artist\nFROM cards\nWHERE flavorName = 'Battra, Dark Destroyer';\t----- bird -----\tcard_games",
    "461": "SELECT name\nFROM cards\nWHERE frameVersion = '2003'\nORDER BY convertedManaCost DESC\nLIMIT 3;\t----- bird -----\tcard_games",
    "462": "SELECT st.translation AS italian_set_name\nFROM cards c\nJOIN set_translations st ON c.setCode = st.setCode\nWHERE c.name = 'Ancestor''s Chosen'\n  AND st.language = 'Italian';\t----- bird -----\tcard_games",
    "463": "SELECT uuid\nFROM cards\nWHERE name LIKE '%Angel of Mercy%';\t----- bird -----\tcard_games",
    "464": "SELECT setCode\nFROM set_translations\nWHERE translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "465": "SELECT fd.uuid, fd.language, fd.name, fd.text, fd.flavorText\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.name = 'Ancestor''s Chosen'\n  AND fd.language = 'Korean';\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) AS count\nFROM cards\nWHERE setCode = (\n    SELECT sets.code\n    FROM sets\n    JOIN set_translations ON sets.code = set_translations.setCode\n    WHERE set_translations.translation = 'Hauptset Zehnte Edition'\n)\nAND artist = 'Adam Rex';\t----- bird -----\tcard_games",
    "467": "SELECT s.baseSetSize\nFROM set_translations st\nJOIN sets s ON st.setCode = s.code\nWHERE st.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "468": "SELECT st.translation\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.name = 'Eighth Edition'\n  AND st.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "469": "SELECT uuid\nFROM cards\nWHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "470": "SELECT releaseDate\nFROM sets\nWHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "471": "SELECT setCode\nFROM set_translations\nWHERE translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(DISTINCT s.code) AS italian_translated_sets_count\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.block = 'Ice Age'\n  AND st.language = 'Italian'\n  AND st.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "473": "SELECT uuid\nFROM cards\nWHERE name = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(DISTINCT s.code) AS count\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE st.language = 'Italian'\n  AND st.translation IS NOT NULL\n  AND s.baseSetSize < 100;\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(*) AS black_border_coldsnap_cards\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Coldsnap'\n  AND cards.borderColor = 'black';\t----- bird -----\tcard_games",
    "476": "SELECT code FROM sets WHERE name = 'Coldsnap';\t----- bird -----\tcard_games",
    "477": "SELECT DISTINCT c.artist\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap'\n  AND c.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games",
    "478": "SELECT c.name AS card_name, c.number, s.code AS set_code, s.name AS set_name\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap' AND c.number = '4';\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) AS unknown_power_count\nFROM cards\nWHERE convertedManaCost > 5\n  AND setCode = 'CSP'\n  AND (power = '*' OR power IS NULL);\t----- bird -----\tcard_games",
    "480": "SELECT fd.flavorText\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.name = 'Ancestor''s Chosen'\n  AND fd.language = 'Italian';\t----- bird -----\tcard_games",
    "481": "SELECT DISTINCT fd.language\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.name = 'Ancestor''s Chosen'\n  AND fd.flavorText IS NOT NULL;\t----- bird -----\tcard_games",
    "482": "SELECT fd.type\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.name = 'Ancestor''s Chosen'\n  AND fd.language = 'German';\t----- bird -----\tcard_games",
    "483": "SELECT code FROM sets WHERE name = 'Coldsnap';\t----- bird -----\tcard_games",
    "484": "SELECT code FROM sets WHERE name = 'Coldsnap';\t----- bird -----\tcard_games",
    "485": "SELECT r.date\nFROM rulings r\nJOIN cards c ON r.uuid = c.uuid\nWHERE c.name = 'Reminisce';\t----- bird -----\tcard_games",
    "486": "SELECT \n    100.0 * COUNT(CASE WHEN c.convertedManaCost = 7 THEN 1 END) / COUNT(*) AS percentage\nFROM \n    cards c\nJOIN \n    sets s ON c.setCode = s.code\nWHERE \n    s.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "487": "SELECT \n    100.0 * \n    SUM(CASE WHEN cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) / \n    COUNT(*) AS percentage_incredibly_powerful\nFROM cards\nWHERE setCode = (\n    SELECT code\n    FROM sets\n    WHERE name = 'Coldsnap'\n);\t----- bird -----\tcard_games",
    "488": "SELECT code\nFROM sets\nWHERE releaseDate = '2017-07-14';\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode\nFROM sets\nWHERE code = 'PKHC';\t----- bird -----\tcard_games",
    "490": "SELECT mcmId\nFROM sets\nWHERE code = 'SS2';\t----- bird -----\tcard_games",
    "491": "SELECT mcmName\nFROM sets\nWHERE releaseDate = '2017-06-09';\t----- bird -----\tcard_games",
    "492": "SELECT code FROM sets WHERE name = 'From the Vault: Lore';\t----- bird -----\tcard_games",
    "493": "SELECT parentCode\nFROM sets\nWHERE name = 'Commander 2014 Oversized';\t----- bird -----\tcard_games",
    "494": "SELECT \n    c.name AS card_name,\n    r.date,\n    r.text AS ruling_text,\n    c.hasContentWarning\nFROM \n    cards c\nJOIN \n    rulings r ON c.uuid = r.uuid\nWHERE \n    c.artist = 'Jim Pavelec';\t----- bird -----\tcard_games",
    "495": "SELECT s.releaseDate\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE c.name = 'Evacuation';\t----- bird -----\tcard_games",
    "496": "SELECT s.baseSetSize\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE st.translation = 'Rinascita di Alara';\t----- bird -----\tcard_games",
    "497": "SELECT s.type\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE st.translation = 'Huiti\u00e8me \u00e9dition';\t----- bird -----\tcard_games",
    "498": "SELECT uuid FROM cards WHERE name = 'Tendo Ice Bridge';\t----- bird -----\tcard_games",
    "499": "SELECT code FROM sets WHERE name = 'Tenth Edition';\t----- bird -----\tcard_games",
    "500": "SELECT st.translation\nFROM cards c\nJOIN set_translations st ON c.setCode = st.setCode\nWHERE c.name = 'Fellwar Stone'\n  AND st.language = 'Japanese';\t----- bird -----\tcard_games",
    "501": "SELECT c.name, c.convertedManaCost\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Journey into Nyx Hero''s Path'\nORDER BY c.convertedManaCost DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "502": "SELECT s.releaseDate\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE st.translation = 'Ola de fr\u00edo';\t----- bird -----\tcard_games",
    "503": "SELECT s.type\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE c.name = 'Samite Pilgrim';\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) AS card_count\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'World Championship Decks 2004'\n  AND cards.convertedManaCost = 3;\t----- bird -----\tcard_games",
    "505": "SELECT st.translation\nFROM sets s\nJOIN set_translations st ON s.code = st.setCode\nWHERE s.name = 'Mirrodin'\n  AND st.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "506": "SELECT\n    100.0 * SUM(CASE WHEN s.isNonFoilOnly = 1 THEN 1 ELSE 0 END) / COUNT(*) AS percentage_nonfoil_only\nFROM\n    foreign_data fd\nJOIN\n    cards c ON fd.uuid = c.uuid\nJOIN\n    sets s ON c.setCode = s.code\nWHERE\n    fd.language = 'Japanese';\t----- bird -----\tcard_games",
    "507": "SELECT \n    100.0 * SUM(CASE WHEN c.isOnlineOnly = 1 THEN 1 ELSE 0 END) / COUNT(*) AS percentage_online_only\nFROM \n    foreign_data fd\nJOIN \n    cards c ON fd.uuid = c.uuid\nWHERE \n    fd.language = 'Portuguese (Brazil)';\t----- bird -----\tcard_games",
    "508": "SELECT DISTINCT availability\nFROM cards\nWHERE artist = 'Aleksi Briclot'\n  AND isTextless = 1;\t----- bird -----\tcard_games",
    "509": "SELECT id\nFROM sets\nWHERE baseSetSize = (SELECT MAX(baseSetSize) FROM sets);\t----- bird -----\tcard_games",
    "510": "SELECT artist\nFROM cards\nWHERE side IS NULL\nORDER BY convertedManaCost DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "511": "SELECT frameEffects, COUNT(*) AS effectCount\nFROM cards\nWHERE cardKingdomFoilId IS NOT NULL\n  AND cardKingdomId IS NOT NULL\nGROUP BY frameEffects\nORDER BY effectCount DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) AS count\nFROM cards\nWHERE (power IS NULL OR power = '*')\n  AND hasFoil = 0\n  AND duelDeck = 'a';\t----- bird -----\tcard_games",
    "513": "SELECT id\nFROM sets\nWHERE type = 'commander'\nORDER BY totalSetSize DESC\nLIMIT 1;\t----- bird -----\tcard_games",
    "514": "SELECT \n    c.name,\n    c.manaCost,\n    LENGTH(c.manaCost) - LENGTH(REPLACE(c.manaCost, '{', '')) AS unconvertedManaCost\nFROM \n    cards c\nJOIN \n    legalities l ON c.uuid = l.uuid\nWHERE \n    l.format = 'duel'\n    AND c.manaCost IS NOT NULL\n    AND c.manaCost != ''\nORDER BY \n    unconvertedManaCost DESC\nLIMIT 10;\t----- bird -----\tcard_games",
    "515": "SELECT \n    c.originalReleaseDate,\n    l.format\nFROM \n    cards c\nJOIN \n    legalities l ON c.uuid = l.uuid\nWHERE \n    c.rarity = 'mythic'\n    AND l.status = 'legal'\n    AND c.originalReleaseDate = (\n        SELECT MIN(originalReleaseDate)\n        FROM cards\n        WHERE rarity = 'mythic'\n    );\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(DISTINCT c.uuid)\nFROM cards c\nJOIN foreign_data f ON c.uuid = f.uuid\nWHERE c.artist = 'Volkan Ba\u00c7\u00b5a'\n  AND f.language = 'French';\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(DISTINCT c.uuid)\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.rarity = 'rare'\n  AND c.types LIKE '%Enchantment%'\n  AND c.name = 'Abundance'\nGROUP BY c.uuid\nHAVING COUNT(*) = SUM(CASE WHEN l.status = 'Legal' THEN 1 ELSE 0 END);\t----- bird -----\tcard_games",
    "518": "SELECT \n    l.format,\n    c.name AS card_name\nFROM \n    legalities l\nJOIN \n    cards c ON l.uuid = c.uuid\nWHERE \n    l.status = 'Banned'\n    AND l.format = (\n        SELECT \n            format\n        FROM \n            legalities\n        WHERE \n            status = 'Banned'\n        GROUP BY \n            format\n        ORDER BY \n            COUNT(*) DESC\n        LIMIT 1\n    );\t----- bird -----\tcard_games",
    "519": "SELECT code FROM sets WHERE name = 'Battlebond';\t----- bird -----\tcard_games",
    "520": "with the minimum count** (i.e., the one who illustrated the least number of cards).\n3. **Get all the cards** illustrated by that artist.\n4. **Get the format of play** for those cards from the `legalities` table.\n\n---\n\n### **SQL Query:**\n\n```sql\n-- Step 1: Find the artist with the least number of cards\nWITH ArtistCardCount AS (\n    SELECT artist, COUNT(*) AS card_count\n    FROM cards\n    WHERE artist IS NOT NULL\n    GROUP BY artist\n),\nMinArtist AS (\n    SELECT artist\n    FROM ArtistCardCount\n    ORDER BY card_count\n    LIMIT 1\n)\n\n-- Step 2: Get the formats of play for the cards illustrated by that artist\nSELECT DISTINCT l.format\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nJOIN MinArtist m ON c.artist = m.artist;\t----- bird -----\tcard_games",
    "521": "SELECT l.status\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.frameVersion = '1997'\n  AND c.artist = 'D. Alexander Gregory'\n  AND l.format = 'legacy'\n  AND (c.hasContentWarning = 1 OR c.rarity = 'Wizards of the Coast');\t----- bird -----\tcard_games",
    "522": "SELECT \n    c.name AS card_name,\n    l.format AS banned_format\nFROM \n    cards c\nJOIN \n    legalities l ON c.uuid = l.uuid\nWHERE \n    c.edhrecRank = 1\n    AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "523": "SELECT COUNT(*) AS total_sets\nFROM sets\nWHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31';\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT artist\nFROM cards\nWHERE borderColor = 'black'\n  AND availability = 'arena';\t----- bird -----\tcard_games",
    "525": "SELECT DISTINCT c.uuid\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.format = 'oldschool'\n  AND l.status IN ('banned', 'restricted');\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) \nFROM cards \nWHERE artist = 'Matthew D. Wilson' \n  AND availability = 'paper';\t----- bird -----\tcard_games",
    "527": "SELECT r.date, r.text\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nWHERE c.artist = 'Kev Walker'\nORDER BY r.date DESC;\t----- bird -----\tcard_games",
    "528": "SELECT \n    c.name AS card_name,\n    l.format AS legal_format\nFROM \n    cards c\nJOIN \n    sets s ON c.setCode = s.code\nJOIN \n    legalities l ON c.uuid = l.uuid\nWHERE \n    s.name = 'Hour of Devastation'\n    AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "529": "SELECT s.name\nFROM sets s\nWHERE s.code IN (\n    -- Get set codes that have Korean translation\n    SELECT st.setCode\n    FROM set_translations st\n    WHERE st.language = 'Korean'\n)\nAND s.code NOT IN (\n    -- Exclude set codes that have Japanese translation\n    SELECT st.setCode\n    FROM set_translations st\n    WHERE st.language LIKE '%Japanese%'\n);\t----- bird -----\tcard_games",
    "530": "SELECT DISTINCT frameVersion AS frame_style\nFROM cards\nWHERE frameVersion IS NOT NULL;\t----- bird -----\tcard_games",
    "531": "SELECT DisplayName, Reputation\nFROM users\nWHERE DisplayName IN ('Harlan', 'Jarrod Dixon')\nORDER BY Reputation DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName\nFROM users\nWHERE strftime('%Y', CreationDate) = '2011';\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(*) AS UsersLastAccessedAfter2014\nFROM users\nWHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "534": "SELECT DisplayName\nFROM users\nWHERE Views = (SELECT MAX(Views) FROM users);\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(*) AS UserCount\nFROM users\nWHERE UpVotes > 100\n  AND DownVotes > 1;\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(*) AS UserCount\nFROM users\nWHERE Views > 10\n  AND CreationDate > '2013-12-31';\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(*) AS PostCount\nFROM posts\nWHERE OwnerUserId = (\n    SELECT Id\n    FROM users\n    WHERE DisplayName = 'csgillespie'\n);\t----- bird -----\tcodebase_community",
    "538": "SELECT Title\nFROM posts\nWHERE OwnerUserId = (\n    SELECT Id\n    FROM users\n    WHERE DisplayName = 'csgillespie'\n);\t----- bird -----\tcodebase_community",
    "539": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "540": "SELECT p.Title\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'csgillespie'\nORDER BY p.ViewCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "541": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.FavoriteCount = (\n    SELECT MAX(FavoriteCount)\n    FROM posts\n    WHERE FavoriteCount IS NOT NULL\n);\t----- bird -----\tcodebase_community",
    "542": "SELECT Id FROM users WHERE DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "543": "SELECT Id FROM users WHERE DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "544": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.LastEditorUserId = u.Id\nWHERE p.Title = 'Examples for teaching: Correlation does not mean causation';\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*) AS RootPostCount\nFROM posts\nWHERE OwnerUserId = (\n    SELECT Id\n    FROM users\n    WHERE DisplayName = 'csgillespie'\n)\nAND ParentId IS NULL;\t----- bird -----\tcodebase_community",
    "546": "SELECT DISTINCT u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.ClosedDate IS NOT NULL;\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(*) AS HighScorePostsByElders\nFROM posts\nWHERE OwnerUserId IN (\n    SELECT Id\n    FROM users\n    WHERE Age > 65\n)\nAND Score >= 20;\t----- bird -----\tcodebase_community",
    "548": "SELECT u.Location\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "549": "SELECT p.Body\nFROM tags t\nJOIN posts p ON t.ExcerptPostId = p.Id\nWHERE t.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
    "550": "SELECT p.Body\nFROM tags t\nJOIN posts p ON t.ExcerptPostId = p.Id\nWHERE t.Count = (\n    SELECT MAX(Count)\n    FROM tags\n);\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(*) AS BadgeCount\nFROM badges\nWHERE UserId = (\n    SELECT Id\n    FROM users\n    WHERE DisplayName = 'csgillespie'\n);\t----- bird -----\tcodebase_community",
    "552": "SELECT b.Name\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "553": "SELECT Id FROM users WHERE DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "554": "SELECT u.DisplayName\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nGROUP BY b.UserId\nORDER BY COUNT(b.Id) DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(p.Score) AS AverageScore\nFROM posts p\nWHERE p.OwnerUserId = (\n    SELECT u.Id\n    FROM users u\n    WHERE u.DisplayName = 'csgillespie'\n);\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(badge_count) AS average_badges\nFROM (\n    SELECT u.Id, COUNT(b.Id) AS badge_count\n    FROM users u\n    LEFT JOIN badges b ON u.Id = b.UserId\n    WHERE u.Views > 200\n    GROUP BY u.Id\n) AS user_badges;\t----- bird -----\tcodebase_community",
    "557": "SELECT \n    100.0 * COUNT(CASE WHEN u.Age > 65 THEN p.Id END) / COUNT(p.Id) AS PercentageElderUsers\nFROM \n    posts p\nLEFT JOIN \n    users u ON p.OwnerUserId = u.Id\nWHERE \n    p.Score > 5;\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) AS VoteCount\nFROM votes\nWHERE UserId = 58\n  AND CreationDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate\nFROM votes\nGROUP BY CreationDate\nORDER BY COUNT(Id) DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(*) AS RevivalBadgeCount\nFROM badges\nWHERE Name = 'Revival';\t----- bird -----\tcodebase_community",
    "561": "SELECT p.Title\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE c.Score = (\n    SELECT MAX(Score)\n    FROM comments\n    WHERE Score IS NOT NULL\n);\t----- bird -----\tcodebase_community",
    "562": "SELECT COUNT(*) AS CommentCount\nFROM comments\nWHERE PostId = (\n    SELECT Id\n    FROM posts\n    WHERE ViewCount = 1910\n);\t----- bird -----\tcodebase_community",
    "563": "SELECT p.FavoriteCount\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE c.UserId = 3025\n  AND c.CreationDate = '2014-04-23 20:29:39.0';\t----- bird -----\tcodebase_community",
    "564": "SELECT c.Text\nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nWHERE p.ParentId = 107829;\t----- bird -----\tcodebase_community",
    "565": "SELECT \n    p.ClosedDate IS NULL AS IsWellFinished\nFROM \n    comments c\nJOIN \n    posts p ON c.PostId = p.Id\nWHERE \n    c.UserId = 23853\n    AND c.CreationDate = '2013-07-12 09:08:18.0';\t----- bird -----\tcodebase_community",
    "566": "SELECT u.Reputation\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE p.Id = 65041;\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(*) AS OwnedPostCount\nFROM posts\nWHERE OwnerUserId = (\n    SELECT Id\n    FROM users\n    WHERE DisplayName = 'Tiago Pasqualini'\n);\t----- bird -----\tcodebase_community",
    "568": "SELECT u.DisplayName\nFROM votes v\nJOIN users u ON v.UserId = u.Id\nWHERE v.Id = 6347;\t----- bird -----\tcodebase_community",
    "569": "SELECT Id FROM posts WHERE Title LIKE '%data visualization%';\t----- bird -----\tcodebase_community",
    "570": "SELECT b.Name\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE u.DisplayName = 'DatEpicCoderGuyWhoPrograms';\t----- bird -----\tcodebase_community",
    "571": "SELECT \n    (SELECT COUNT(*) FROM posts WHERE OwnerUserId = 24) * 1.0 / \n    (SELECT COUNT(*) FROM votes WHERE UserId = 24) AS post_to_vote_ratio;\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount\nFROM posts\nWHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "573": "SELECT Text\nFROM comments\nWHERE Score = 17;\t----- bird -----\tcodebase_community",
    "574": "SELECT DisplayName\nFROM users\nWHERE WebsiteUrl = 'http://stackoverflow.com';\t----- bird -----\tcodebase_community",
    "575": "SELECT b.Name\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE u.DisplayName = 'SilentGhost';\t----- bird -----\tcodebase_community",
    "576": "SELECT UserDisplayName\nFROM comments\nWHERE Text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "577": "SELECT Text AS Comment\nFROM comments\nWHERE UserId = (\n    SELECT Id\n    FROM users\n    WHERE DisplayName = 'A Lion'\n);\t----- bird -----\tcodebase_community",
    "578": "SELECT \n    u.DisplayName AS UserDisplayName,\n    u.Reputation\nFROM \n    posts p\nJOIN \n    users u ON p.OwnerUserId = u.Id\nWHERE \n    p.Title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
    "579": "with the given title from the `posts` table.\n2. **Use that `Id` to find all related comments** in the `comments` table where `PostId` matches the post's `Id`.\n\n---\n\n### \u2705 Step-by-step SQL Query:\n\n```sql\n-- Step 1: Find the PostId of the post with the given title\nSELECT Id\nFROM posts\nWHERE Title = 'How does gentle boosting differ from AdaBoost?';\t----- bird -----\tcodebase_community",
    "580": "SELECT u.DisplayName\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE b.Name = 'Necromancer'\nLIMIT 10;\t----- bird -----\tcodebase_community",
    "581": "SELECT u.DisplayName AS Editor\nFROM posts p\nJOIN users u ON p.LastEditorUserId = u.Id\nWHERE p.Title = 'Open source tools for visualizing multi-dimensional data';\t----- bird -----\tcodebase_community",
    "582": "SELECT Id FROM users WHERE DisplayName = 'Vebjorn Ljosa';\t----- bird -----\tcodebase_community",
    "583": "SELECT Id FROM users WHERE DisplayName = 'Yevgeny';\t----- bird -----\tcodebase_community",
    "584": "with the given title from the `posts` table.\n2. **Find all the edits** (i.e., entries in `postHistory`) for that post.\n3. **Find the `UserId`s** of the users who made those edits.\n4. **Find all the comments** in the `comments` table made by those users.\n\n---\n\n### \u2705 **SQL Query:**\n\n```sql\n-- Step 1: Find the post ID for the given title\nWITH TargetPost AS (\n    SELECT Id\n    FROM posts\n    WHERE Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\n),\n\n-- Step 2: Find all users who edited this post\nEditors AS (\n    SELECT DISTINCT ph.UserId\n    FROM postHistory ph\n    JOIN TargetPost tp ON ph.PostId = tp.Id\n    WHERE ph.UserId IS NOT NULL\n)\n\n-- Step 3: Find all comments made by these users\nSELECT c.Text AS CommentText, c.CreationDate, u.DisplayName AS UserDisplayName\nFROM comments c\nJOIN users u ON c.UserId = u.Id\nWHERE c.UserId IN (SELECT UserId FROM Editors);\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(v.BountyAmount) AS TotalBountyAmount\nFROM posts p\nJOIN votes v ON p.Id = v.PostId\nWHERE p.Title LIKE '%data%';\t----- bird -----\tcodebase_community",
    "586": "SELECT u.DisplayName\nFROM votes v\nJOIN posts p ON v.PostId = p.Id\nJOIN users u ON v.UserId = u.Id\nWHERE v.BountyAmount = 50\n  AND p.Title LIKE '%variance%';\t----- bird -----\tcodebase_community",
    "587": "SELECT \n    p.Title,\n    c.Text AS Comment,\n    p.ViewCount\nFROM \n    posts p\nLEFT JOIN \n    comments c ON p.Id = c.PostId\nWHERE \n    p.Tags LIKE '%<humor>%'\nORDER BY \n    p.ViewCount DESC;\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(*) AS TotalComments\nFROM comments\nWHERE UserId = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT Id\nFROM users\nWHERE Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "590": "SELECT Id\nFROM users\nWHERE Views = (SELECT MIN(Views) FROM users)\n  AND Views IS NOT NULL;\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT UserId) AS SupporterBadgeCount2011\nFROM badges\nWHERE Name = 'Supporter'\n  AND strftime('%Y', Date) = '2011';\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(*) AS UserCount\nFROM (\n    SELECT UserId\n    FROM badges\n    WHERE UserId IS NOT NULL\n    GROUP BY UserId\n    HAVING COUNT(*) > 5\n) AS badge_counts;\t----- bird -----\tcodebase_community",
    "593": "SELECT Id\n   FROM users\n   WHERE Location = 'New York';\t----- bird -----\tcodebase_community",
    "594": "SELECT \n    u.Id AS UserId,\n    u.DisplayName,\n    u.Reputation\nFROM \n    posts p\nJOIN \n    users u ON p.OwnerUserId = u.Id\nWHERE \n    p.Id = 1;\t----- bird -----\tcodebase_community",
    "595": "SELECT DISTINCT u.Id AS UserId\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId OR u.Id = p.LastEditorUserId\nJOIN postHistory ph ON p.Id = ph.PostId\nWHERE p.ViewCount >= 1000\nGROUP BY p.Id, u.Id\nHAVING COUNT(ph.Id) = 1;\t----- bird -----\tcodebase_community",
    "596": "SELECT b.UserId, b.Name AS BadgeName, b.Date AS BadgeDate\nFROM badges b\nWHERE b.UserId IN (\n    SELECT c.UserId\n    FROM comments c\n    GROUP BY c.UserId\n    HAVING COUNT(c.Id) = (\n        SELECT MAX(comment_count)\n        FROM (\n            SELECT COUNT(Id) AS comment_count\n            FROM comments\n            GROUP BY UserId\n        )\n    )\n);\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(DISTINCT u.Id) AS TeacherUsersFromIndia\nFROM users u\nJOIN badges b ON u.Id = b.UserId\nWHERE u.Location = 'India'\n  AND b.Name = 'Teacher';\t----- bird -----\tcodebase_community",
    "598": "SELECT \n    100.0 * ( \n        (SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND strftime('%Y', Date) = '2010') \n        / \n        (SELECT COUNT(*) FROM badges WHERE Name = 'Student') \n    ) \n    - \n    100.0 * ( \n        (SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND strftime('%Y', Date) = '2011') \n        / \n        (SELECT COUNT(*) FROM badges WHERE Name = 'Student') \n    ) AS percentage_difference;\t----- bird -----\tcodebase_community",
    "599": "SELECT \n    ph.PostHistoryTypeId,\n    COUNT(DISTINCT c.UserId) AS UniqueCommenters\nFROM \n    postHistory ph\nLEFT JOIN \n    comments c ON ph.PostId = c.PostId\nWHERE \n    ph.PostId = 3720\nGROUP BY \n    ph.PostHistoryTypeId;\t----- bird -----\tcodebase_community",
    "600": "SELECT \n    'Related Posts' AS Type,\n    pl.RelatedPostId AS PostId,\n    p.ViewCount AS Popularity\nFROM postLinks pl\nJOIN posts p ON p.Id = pl.RelatedPostId\nWHERE pl.PostId = 61217\n\nUNION ALL\n\nSELECT \n    'Related Posts' AS Type,\n    pl.PostId AS PostId,\n    p.ViewCount AS Popularity\nFROM postLinks pl\nJOIN posts p ON p.Id = pl.PostId\nWHERE pl.RelatedPostId = 61217\n\nUNION ALL\n\nSELECT \n    'Post 61217' AS Type,\n    p.Id AS PostId,\n    p.ViewCount AS Popularity\nFROM posts p\nWHERE p.Id = 61217;\t----- bird -----\tcodebase_community",
    "601": "SELECT \n    p.Score,\n    pl.LinkTypeId\nFROM \n    posts p\nLEFT JOIN \n    postLinks pl ON p.Id = pl.PostId\nWHERE \n    p.Id = 395;\t----- bird -----\tcodebase_community",
    "602": "SELECT \n    Id AS PostId,\n    OwnerUserId AS CreatorUserId\nFROM \n    posts\nWHERE \n    Score > 60;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(FavoriteCount) AS TotalFavoriteCount\nFROM posts\nWHERE OwnerUserId = 686\n  AND strftime('%Y', CreationDate) = '2011';\t----- bird -----\tcodebase_community",
    "604": "SELECT \n    AVG(users.UpVotes) AS AverageUpVotes,\n    AVG(users.Age) AS AverageAge\nFROM users\nWHERE users.Id IN (\n    SELECT posts.OwnerUserId\n    FROM posts\n    WHERE posts.OwnerUserId IS NOT NULL\n    GROUP BY posts.OwnerUserId\n    HAVING COUNT(*) > 10\n);\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT UserId) AS AnnouncerCount\nFROM badges\nWHERE Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "606": "SELECT Name\nFROM badges\nWHERE Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) AS PositiveCommentCount\nFROM comments\nWHERE Score > 60;\t----- bird -----\tcodebase_community",
    "608": "SELECT Text\nFROM comments\nWHERE CreationDate = '2010-07-19 19:25:47.0';\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(*) \nFROM posts \nWHERE Score = 10;\t----- bird -----\tcodebase_community",
    "610": "SELECT b.Name AS BadgeName\nFROM badges b\nWHERE b.UserId IN (\n    SELECT Id\n    FROM users\n    WHERE Reputation = (\n        SELECT MAX(Reputation)\n        FROM users\n    )\n);\t----- bird -----\tcodebase_community",
    "611": "SELECT u.Reputation\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE b.Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "612": "SELECT b.Name\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE u.DisplayName = 'Pierre';\t----- bird -----\tcodebase_community",
    "613": "SELECT b.Date\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE u.Location = 'Rochester, NY';\t----- bird -----\tcodebase_community",
    "614": "SELECT \n    100.0 * \n    (SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Teacher') / \n    (SELECT COUNT(*) FROM users) AS percentage;\t----- bird -----\tcodebase_community",
    "615": "with the `users` table to get their age.\n3. **Count** the total number of users with the \"Organizer\" badge.\n4. **Count** how many of them are teenagers (age between 13 and 18).\n5. **Calculate** the percentage using the formula:\n   ```\n   (Number of teenagers / Total users with badge) * 100\n   ```\n\nHere is the **correct SQL query** to do this in **SQLite**:\n\n```sql\nSELECT\n    100.0 * COUNT(CASE WHEN u.Age BETWEEN 13 AND 18 THEN 1 END) / COUNT(*) AS PercentageTeenagers\nFROM\n    badges b\nJOIN\n    users u ON b.UserId = u.Id\nWHERE\n    b.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "616": "SELECT c.Score\nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nWHERE p.CreationDate = '2010-07-19 19:19:56.0';\t----- bird -----\tcodebase_community",
    "617": "SELECT c.Text\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.CreationDate = '2010-07-19 19:37:33.0';\t----- bird -----\tcodebase_community",
    "618": "SELECT DISTINCT u.Age\nFROM users u\nJOIN badges b ON u.Id = b.UserId\nWHERE u.Location = 'Vienna, Austria';\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(DISTINCT b.UserId) AS AdultSupporterCount\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE b.Name = 'Supporter'\n  AND u.Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "620": "SELECT u.Views\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE b.Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "621": "SELECT MIN(Reputation) FROM users;\t----- bird -----\tcodebase_community",
    "622": "SELECT b.Name\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE u.DisplayName = 'Sharpie';\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(DISTINCT b.UserId) AS ElderSupporters\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE b.Name = 'Supporter'\n  AND u.Age > 65;\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName\nFROM users\nWHERE Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(*) AS NewYorkUsers\nFROM users\nWHERE Location = 'New York';\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(*) AS VoteCount\nFROM votes\nWHERE strftime('%Y', CreationDate) = '2010';\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) AS AdultUserCount\nFROM users\nWHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "628": "SELECT DisplayName, Views\nFROM users\nORDER BY Views DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "629": "SELECT\n    (SELECT COUNT(*) FROM votes WHERE strftime('%Y', CreationDate) = '2010') * 1.0 /\n    (SELECT COUNT(*) FROM votes WHERE strftime('%Y', CreationDate) = '2011') AS Ratio_2010_to_2011;\t----- bird -----\tcodebase_community",
    "630": "SELECT DISTINCT t.TagName\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId OR u.Id = p.LastEditorUserId\nJOIN tags t ON t.TagName = TRIM(SUBSTR(p.Tags, INSTR(p.Tags, '<') + 1, INSTR(SUBSTR(p.Tags, INSTR(p.Tags, '<') + 1), '>') - 1))\nWHERE u.DisplayName = 'John Salvatier';\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(*) AS PostCount\nFROM posts\nWHERE OwnerUserId = (\n    SELECT Id\n    FROM users\n    WHERE DisplayName = 'Daniel Vassallo'\n);\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(*) AS VoteCount\nFROM votes\nWHERE UserId = (\n    SELECT Id\n    FROM users\n    WHERE DisplayName = 'Harlan'\n);\t----- bird -----\tcodebase_community",
    "633": "SELECT Id\nFROM posts\nWHERE OwnerDisplayName = 'slashnick'\nORDER BY AnswerCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "634": "SELECT \n    u.DisplayName,\n    SUM(p.ViewCount) AS TotalViewCount\nFROM \n    users u\nJOIN \n    posts p ON u.Id = p.OwnerUserId\nWHERE \n    u.DisplayName IN ('Harvey Motulsky', 'Noah Snyder')\nGROUP BY \n    u.DisplayName\nORDER BY \n    TotalViewCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(*) AS num_posts\nFROM (\n    SELECT v.PostId\n    FROM votes v\n    JOIN posts p ON v.PostId = p.Id\n    JOIN users u ON p.OwnerUserId = u.Id\n    WHERE u.DisplayName = 'Matt Parker'\n    GROUP BY v.PostId\n    HAVING COUNT(*) > 4\n) AS result;\t----- bird -----\tcodebase_community",
    "636": "SELECT Id FROM users WHERE DisplayName = 'Neil McGuigan';\t----- bird -----\tcodebase_community",
    "637": "SELECT \n    TRIM(REPLACE(REPLACE(tags, '<', ''), '>', '')) AS tags\nFROM \n    posts\nWHERE \n    OwnerUserId = (\n        SELECT Id \n        FROM users \n        WHERE DisplayName = 'Mark Meckes'\n    )\n    AND CommentCount = 0\n    AND Id NOT IN (\n        SELECT DISTINCT PostId \n        FROM comments \n        WHERE PostId IS NOT NULL\n    );\t----- bird -----\tcodebase_community",
    "638": "SELECT DISTINCT u.DisplayName\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE b.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "639": "SELECT \n    100.0 * \n    COUNT(CASE WHEN instr(posts.Tags, 'r') > 0 THEN 1 END) / \n    COUNT(*) AS percentage\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Community';\t----- bird -----\tcodebase_community",
    "640": "SELECT \n    SUM(CASE WHEN u.DisplayName = 'Mornington' THEN p.ViewCount ELSE 0 END) -\n    SUM(CASE WHEN u.DisplayName = 'Amos' THEN p.ViewCount ELSE 0 END) AS ViewCountDifference\nFROM \n    posts p\nJOIN \n    users u ON p.OwnerUserId = u.Id;\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT UserId) AS CommentatorCount\nFROM badges\nWHERE Name = 'Commentator'\n  AND strftime('%Y', Date) = '2014';\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(*) AS PostCount\nFROM posts\nWHERE DATE(CreationDate) = '2010-07-21';\t----- bird -----\tcodebase_community",
    "643": "SELECT MAX(Views) FROM users;\t----- bird -----\tcodebase_community",
    "644": "SELECT \n    LastEditDate, \n    LastEditorUserId\nFROM \n    posts\nWHERE \n    Title = 'Detecting a given face in a database of facial images';\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) AS NegativeCommentCount\nFROM comments\nWHERE UserId = 13 AND Score < 60;\t----- bird -----\tcodebase_community",
    "646": "SELECT \n    p.Title AS PostTitle,\n    c.UserDisplayName AS CommenterDisplayName\nFROM \n    comments c\nJOIN \n    posts p ON c.PostId = p.Id\nWHERE \n    c.Score > 60;\t----- bird -----\tcodebase_community",
    "647": "SELECT b.Name\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE strftime('%Y', b.Date) = '2011'\n  AND u.Location = 'North Pole';\t----- bird -----\tcodebase_community",
    "648": "SELECT \n    u.DisplayName,\n    u.WebsiteUrl\nFROM \n    posts p\nJOIN \n    users u ON p.OwnerUserId = u.Id\nWHERE \n    p.FavoriteCount > 150;\t----- bird -----\tcodebase_community",
    "649": "SELECT\n    p.Id AS PostId,\n    COUNT(ph.Id) AS PostHistoryCount,\n    MAX(ph.CreationDate) AS LastEditDate\nFROM\n    posts p\nLEFT JOIN\n    postHistory ph ON p.Id = ph.PostId\nWHERE\n    p.Title = 'What is the best introductory Bayesian statistics textbook?'\nGROUP BY\n    p.Id;\t----- bird -----\tcodebase_community",
    "650": "SELECT \n    u.LastAccessDate,\n    u.Location\nFROM \n    badges b\nJOIN \n    users u ON b.UserId = u.Id\nWHERE \n    b.Name = 'Outliers';\t----- bird -----\tcodebase_community",
    "651": "SELECT p2.Title AS RelatedPostTitle\nFROM posts p1\nJOIN postLinks pl ON p1.Id = pl.PostId\nJOIN posts p2 ON pl.RelatedPostId = p2.Id\nWHERE p1.Title = 'How to tell if something happened in a data set which monitors a value over time';\t----- bird -----\tcodebase_community",
    "652": "SELECT \n    p.Id AS PostId,\n    b.Name AS BadgeName\nFROM \n    users u\nJOIN \n    badges b ON u.Id = b.UserId\nLEFT JOIN \n    posts p ON u.Id = p.OwnerUserId\nWHERE \n    u.UserDisplayName = 'Samuel'\n    AND strftime('%Y', b.Date) = '2013'\n    AND strftime('%Y', p.CreationDate) = '2013';\t----- bird -----\tcodebase_community",
    "653": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.ViewCount = (SELECT MAX(ViewCount) FROM posts);\t----- bird -----\tcodebase_community",
    "654": "SELECT u.DisplayName, u.Location\nFROM tags t\nJOIN posts p ON t.ExcerptPostId = p.Id\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE t.TagName = 'hypothesis-testing';\t----- bird -----\tcodebase_community",
    "655": "SELECT \n    p1.Title AS OriginalPostTitle,\n    p2.Title AS RelatedPostTitle,\n    pl.LinkTypeId\nFROM \n    posts p1\nJOIN \n    postLinks pl ON p1.Id = pl.PostId\nJOIN \n    posts p2 ON pl.RelatedPostId = p2.Id\nWHERE \n    p1.Title = 'What are principal component scores?';\t----- bird -----\tcodebase_community",
    "656": "SELECT p.OwnerDisplayName\nFROM posts p\nWHERE p.Id = (\n    SELECT ParentId\n    FROM posts\n    WHERE ParentId IS NOT NULL\n      AND Score = (\n          SELECT MAX(Score)\n          FROM posts\n          WHERE ParentId IS NOT NULL\n      )\n);\t----- bird -----\tcodebase_community",
    "657": "SELECT u.DisplayName, u.WebsiteUrl\nFROM votes v\nJOIN users u ON v.UserId = u.Id\nWHERE v.VoteTypeId = 8\n  AND v.BountyAmount = (\n      SELECT MAX(BountyAmount)\n      FROM votes\n      WHERE VoteTypeId = 8\n  );\t----- bird -----\tcodebase_community",
    "658": "SELECT Title\nFROM posts\nWHERE ViewCount IS NOT NULL\nORDER BY ViewCount DESC\nLIMIT 5;\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(*) AS TagCount\nFROM tags\nWHERE Count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT MAX(FavoriteCount) FROM posts;\t----- bird -----\tcodebase_community",
    "661": "SELECT Age\nFROM users\nWHERE Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(DISTINCT p.Id) AS PostCount\nFROM posts p\nJOIN votes v ON p.Id = v.PostId\nWHERE strftime('%Y', p.CreationDate) = '2011'\n  AND v.BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "663": "SELECT Id\nFROM users\nWHERE Age = (SELECT MIN(Age) FROM users WHERE Age IS NOT NULL)\n  AND Age IS NOT NULL;\t----- bird -----\tcodebase_community",
    "664": "SELECT SUM(Score) AS TotalScore\nFROM posts\nWHERE LasActivityDate LIKE '2010-07-19%';\t----- bird -----\tcodebase_community",
    "665": "SELECT \n    COUNT(*) / 12 AS AverageMonthlyLinks\nFROM \n    postLinks pl\nJOIN \n    posts p ON pl.PostId = p.Id\nWHERE \n    strftime('%Y', pl.CreationDate) = '2010'\n    AND p.AnswerCount <= 2;\t----- bird -----\tcodebase_community",
    "666": "SELECT p.Id\nFROM votes v\nJOIN posts p ON v.PostId = p.Id\nWHERE v.UserId = 1465\nORDER BY p.FavoriteCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "667": "SELECT p.Title\nFROM postLinks pl\nJOIN posts p ON pl.PostId = p.Id\nWHERE pl.CreationDate = (\n    SELECT MIN(CreationDate)\n    FROM postLinks\n);\t----- bird -----\tcodebase_community",
    "668": "SELECT u.DisplayName\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nGROUP BY b.UserId\nORDER BY COUNT(b.Name) DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(v.CreationDate) AS FirstVoteDate\nFROM votes v\nJOIN users u ON v.UserId = u.Id\nWHERE u.DisplayName = 'chl';\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(posts.CreationDate) AS FirstPostDate\nFROM posts\nWHERE posts.OwnerUserId = (\n    SELECT users.Id\n    FROM users\n    WHERE users.Age = (\n        SELECT MIN(Age)\n        FROM users\n        WHERE Age IS NOT NULL\n    )\n    LIMIT 1\n);\t----- bird -----\tcodebase_community",
    "671": "SELECT u.DisplayName\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE b.Name = 'Autobiographer'\n  AND b.Date = (\n    SELECT MIN(Date)\n    FROM badges\n    WHERE Name = 'Autobiographer'\n  );\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT u.Id) AS UserCount\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE u.Location = 'United Kingdom'\nGROUP BY u.Id\nHAVING SUM(p.FavoriteCount) >= 4;\t----- bird -----\tcodebase_community",
    "673": "SELECT MAX(Age) AS MaxAge FROM users;\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName\nFROM users\nORDER BY Reputation DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(*) AS UserCount\nFROM users\nWHERE Reputation > 2000 AND Views > 1000;\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName\nFROM users\nWHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(*) AS PostCount\nFROM posts\nWHERE OwnerUserId = (\n    SELECT Id\n    FROM users\n    WHERE DisplayName = 'Jay Stevens'\n)\nAND strftime('%Y', CreationDate) = '2010';\t----- bird -----\tcodebase_community",
    "678": "SELECT \n    p.Id, \n    p.Title\nFROM \n    posts p\nJOIN \n    users u ON p.OwnerUserId = u.Id\nWHERE \n    u.DisplayName = 'Harvey Motulsky'\nORDER BY \n    p.ViewCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "679": "SELECT Id, Title\nFROM posts\nORDER BY Score DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(p.Score) AS AverageScore\nFROM posts p\nWHERE p.OwnerUserId = (\n    SELECT u.Id\n    FROM users u\n    WHERE u.DisplayName = 'Stephen Turner'\n);\t----- bird -----\tcodebase_community",
    "681": "SELECT DISTINCT u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.ViewCount > 20000\n  AND strftime('%Y', p.CreationDate) = '2011';\t----- bird -----\tcodebase_community",
    "682": "SELECT \n    p.Id,\n    p.OwnerDisplayName\nFROM \n    posts p\nWHERE \n    strftime('%Y', p.CreationDate) = '2010'\nORDER BY \n    p.FavoriteCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "683": "SELECT \n    100.0 * COUNT(CASE WHEN u.Reputation > 1000 THEN p.Id END) / COUNT(p.Id) AS Percentage\nFROM \n    posts p\nJOIN \n    users u ON p.OwnerUserId = u.Id\nWHERE \n    strftime('%Y', p.CreationDate) = '2011';\t----- bird -----\tcodebase_community",
    "684": "SELECT \n    100.0 * COUNT(CASE WHEN Age BETWEEN 13 AND 18 THEN 1 END) / COUNT(*) AS percentage\nFROM users;\t----- bird -----\tcodebase_community",
    "685": "SELECT \n    p.ViewCount AS TotalViews,\n    u.DisplayName AS LastEditorName\nFROM \n    posts p\nJOIN \n    users u ON p.LastEditorUserId = u.Id\nWHERE \n    p.Body LIKE '%Computer Game Datasets%';\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(*) AS PostsAboveAverageViews\nFROM posts\nWHERE ViewCount > (\n    SELECT AVG(ViewCount)\n    FROM posts\n    WHERE ViewCount IS NOT NULL\n);\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(*) AS CommentCount\nFROM comments\nWHERE PostId = (\n    SELECT Id\n    FROM posts\n    ORDER BY Score DESC\n    LIMIT 1\n);\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(*) AS HighViewNoCommentPosts\nFROM posts\nWHERE ViewCount > 35000\n  AND CommentCount = 0;\t----- bird -----\tcodebase_community",
    "689": "SELECT \n    u.DisplayName,\n    u.Location\nFROM \n    posts p\nJOIN \n    users u ON p.LastEditorUserId = u.Id\nWHERE \n    p.Id = 183;\t----- bird -----\tcodebase_community",
    "690": "SELECT Id\nFROM users\nWHERE DisplayName = 'Emmett';\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(*) AS AdultUsersWithOver5000Upvotes\nFROM users\nWHERE Age BETWEEN 19 AND 65\n  AND UpVotes > 5000;\t----- bird -----\tcodebase_community",
    "692": "SELECT \n    julianday(b.Date) - julianday(u.CreationDate) AS DaysToGetBadge\nFROM \n    users u\nJOIN \n    badges b ON u.Id = b.UserId\nWHERE \n    u.DisplayName = 'Zolomon'\nORDER BY \n    b.Date ASC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "693": "SELECT Id\nFROM users\nORDER BY CreationDate DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "694": "SELECT \n    c.Text AS CommentText,\n    c.CreationDate,\n    c.UserDisplayName\nFROM \n    comments c\nJOIN \n    posts p ON c.PostId = p.Id\nWHERE \n    p.Title = 'Analysing wind data with R'\nORDER BY \n    c.CreationDate DESC\nLIMIT 10;\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(DISTINCT UserId) AS CitizenPatrolCount\nFROM badges\nWHERE Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(*) AS CareersPostCount\nFROM posts\nWHERE Tags LIKE '%careers%';\t----- bird -----\tcodebase_community",
    "697": "SELECT Reputation, Views\nFROM users\nWHERE DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "698": "SELECT Id FROM posts WHERE Title = 'Clustering 1D data';\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate\nFROM users\nWHERE DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(DISTINCT PostId) AS NumPostsWithBountyOver30\nFROM votes\nWHERE VoteTypeId = 9\n  AND BountyAmount >= 30;\t----- bird -----\tcodebase_community",
    "701": "SELECT Id\n   FROM users\n   ORDER BY Reputation DESC\n   LIMIT 1;\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(*) \nFROM posts \nWHERE Score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) AS TagCount\nFROM tags\nWHERE Id < 15\n  AND Count <= 20;\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId\nFROM tags\nWHERE TagName = 'sample';\t----- bird -----\tcodebase_community",
    "705": "SELECT \n    u.Reputation,\n    u.UpVotes\nFROM \n    comments c\nJOIN \n    users u ON c.UserId = u.Id\nWHERE \n    c.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "706": "SELECT Id\nFROM posts\nWHERE Title LIKE '%linear regression%';\t----- bird -----\tcodebase_community",
    "707": "SELECT c.Text AS HighestScoreComment, c.Score\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.ViewCount BETWEEN 100 AND 150\nORDER BY c.Score DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
    "708": "SELECT \n    u.CreationDate,\n    u.Age\nFROM \n    comments c\nJOIN \n    users u ON c.UserId = u.Id\nWHERE \n    u.WebsiteUrl LIKE '%http://%'\nGROUP BY \n    u.Id;\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT c.PostId) AS PostCount\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE c.Score = 0\n  AND p.ViewCount < 5;\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(*) AS ZeroScoreComments\nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nWHERE p.CommentCount = 1\n  AND c.Score = 0;\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT u.Id) AS TotalUsersAge40\nFROM comments c\nJOIN users u ON c.UserId = u.Id\nWHERE c.Score = 0 AND u.Age = 40;\t----- bird -----\tcodebase_community",
    "712": "SELECT \n    p.Id AS PostId,\n    c.Text AS CommentText,\n    c.CreationDate AS CommentDate,\n    c.UserId AS CommenterUserId,\n    c.UserDisplayName AS CommenterName\nFROM \n    posts p\nJOIN \n    comments c ON p.Id = c.PostId\nWHERE \n    p.Title = 'Group differences on a five point Likert item';\t----- bird -----\tcodebase_community",
    "713": "SELECT u.UpVotes\nFROM comments c\nJOIN users u ON c.UserId = u.Id\nWHERE c.Text = 'R is also lazy evaluated.';\t----- bird -----\tcodebase_community",
    "714": "SELECT \n    comments.Id AS CommentId,\n    comments.Text AS CommentText,\n    comments.CreationDate\nFROM \n    comments\nJOIN \n    users ON comments.UserId = users.Id\nWHERE \n    users.DisplayName = 'Harvey Motulsky';\t----- bird -----\tcodebase_community",
    "715": "SELECT DISTINCT c.UserDisplayName\nFROM comments c\nJOIN users u ON c.UserId = u.Id\nWHERE c.Score BETWEEN 1 AND 5\n  AND u.DownVotes = 0;\t----- bird -----\tcodebase_community",
    "716": "SELECT\n    100.0 * COUNT(CASE WHEN u.UpVotes = 0 THEN 1 END) / COUNT(*) AS percentage\nFROM\n    comments c\nLEFT JOIN\n    users u ON c.UserId = u.Id\nWHERE\n    c.Score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
    "717": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(DISTINCT hp.hero_id) AS num_superheroes_with_super_strength\nFROM hero_power hp\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(*) AS num_superheroes\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower p ON hp.power_id = p.id\nWHERE p.power_name = 'Super Strength'\n  AND s.height_cm > 200;\t----- bird -----\tsuperhero",
    "720": "SELECT s.full_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nGROUP BY s.id\nHAVING COUNT(hp.power_id) > 15;\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(*) AS blue_eyed_superheroes\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE colour.colour = 'Blue';\t----- bird -----\tsuperhero",
    "722": "SELECT c.colour\nFROM superhero s\nJOIN colour c ON s.skin_colour_id = c.id\nWHERE s.superhero_name = 'Apocalypse';\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(DISTINCT h.id) AS blue_eyed_heroes_with_agility\nFROM superhero h\nJOIN colour c ON h.eye_colour_id = c.id\nJOIN hero_power hp ON h.id = hp.hero_id\nJOIN superpower s ON hp.power_id = s.id\nWHERE c.colour = 'Blue' AND s.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "724": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour c_eye ON s.eye_colour_id = c_eye.id\nJOIN colour c_hair ON s.hair_colour_id = c_hair.id\nWHERE c_eye.colour = 'Blue' AND c_hair.colour = 'Blond';\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(*) AS marvel_superhero_count\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "726": "SELECT \n    s.superhero_name,\n    s.height_cm\nFROM \n    superhero s\nJOIN \n    publisher p ON s.publisher_id = p.id\nWHERE \n    p.publisher_name = 'Marvel Comics'\nORDER BY \n    s.height_cm DESC;\t----- bird -----\tsuperhero",
    "727": "SELECT p.publisher_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.superhero_name = 'Sauron';\t----- bird -----\tsuperhero",
    "728": "SELECT \n    c.colour AS eye_color,\n    COUNT(s.id) AS count\nFROM \n    superhero s\nJOIN \n    colour c ON s.eye_colour_id = c.id\nJOIN \n    publisher p ON s.publisher_id = p.id\nWHERE \n    p.publisher_name = 'Marvel Comics'\nGROUP BY \n    s.eye_colour_id, c.colour\nORDER BY \n    count DESC;\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(s.height_cm) AS average_height\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "730": "SELECT DISTINCT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics'\n  AND sp.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(*) AS dc_superhero_count\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'DC Comics';\t----- bird -----\tsuperhero",
    "732": "SELECT p.publisher_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE a.attribute_name = 'Speed'\n  AND ha.attribute_value = (\n    SELECT MIN(attribute_value)\n    FROM hero_attribute\n    JOIN attribute ON attribute.id = hero_attribute.attribute_id\n    WHERE attribute_name = 'Speed'\n  );\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(*) AS gold_eyed_marvel_superheroes\nFROM superhero s\nJOIN colour eye_colour ON s.eye_colour_id = eye_colour.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE eye_colour.colour = 'Gold'\n  AND p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "734": "SELECT p.publisher_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.superhero_name = 'Blue Beetle II';\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(*) AS blonde_superheroes_count\nFROM superhero\nJOIN colour ON superhero.hair_colour_id = colour.id\nWHERE colour.colour = 'Blond';\t----- bird -----\tsuperhero",
    "736": "SELECT s.superhero_name, ha.attribute_value\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Intelligence'\n  AND ha.attribute_value = (\n    SELECT MIN(attribute_value)\n    FROM hero_attribute\n    WHERE attribute_id = (\n      SELECT id\n      FROM attribute\n      WHERE attribute_name = 'Intelligence'\n    )\n  );\t----- bird -----\tsuperhero",
    "737": "SELECT r.race\nFROM superhero s\nJOIN race r ON s.race_id = r.id\nWHERE s.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "738": "SELECT s.superhero_name, ha.attribute_value\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Durability' AND ha.attribute_value < 50;\t----- bird -----\tsuperhero",
    "739": "SELECT DISTINCT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower p ON hp.power_id = p.id\nWHERE p.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(*) AS female_superheroes_with_strength_100\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE g.gender = 'Female'\n  AND a.attribute_name = 'Strength'\n  AND ha.attribute_value = 100;\t----- bird -----\tsuperhero",
    "741": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nGROUP BY s.id\nORDER BY COUNT(hp.power_id) DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(*) AS vampire_superhero_count\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nWHERE race.race = 'Vampire';\t----- bird -----\tsuperhero",
    "743": "SELECT\n    100.0 * COUNT(CASE WHEN a.alignment = 'Bad' THEN 1 END) / COUNT(*) AS bad_percentage,\n    COUNT(CASE WHEN a.alignment = 'Bad' AND p.publisher_name = 'Marvel Comics' THEN 1 END) AS bad_marvel_count\nFROM superhero s\nJOIN alignment a ON s.alignment_id = a.id\nJOIN publisher p ON s.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "744": "SELECT \n    SUM(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS marvel_count,\n    SUM(CASE WHEN p.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) AS dc_count,\n    (SUM(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - \n     SUM(CASE WHEN p.publisher_name = 'DC Comics' THEN 1 ELSE 0 END)) AS difference\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name IN ('DC Comics', 'Marvel Comics');\t----- bird -----\tsuperhero",
    "745": "SELECT id\nFROM publisher\nWHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) AS average_attribute_value\nFROM hero_attribute;\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) AS superheroes_without_full_name\nFROM superhero\nWHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "748": "SELECT c.colour\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.id = 75;\t----- bird -----\tsuperhero",
    "749": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.superhero_name = 'Deathlok';\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(superhero.weight_kg) AS average_weight\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nWHERE gender.gender = 'Female';\t----- bird -----\tsuperhero",
    "751": "SELECT DISTINCT sp.power_name\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE g.gender = 'Male'\nLIMIT 5;\t----- bird -----\tsuperhero",
    "752": "SELECT s.superhero_name\nFROM superhero s\nJOIN race r ON s.race_id = r.id\nWHERE r.race = 'Alien';\t----- bird -----\tsuperhero",
    "753": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.height_cm BETWEEN 170 AND 190\n  AND c.colour = 'No Colour';\t----- bird -----\tsuperhero",
    "754": "SELECT sp.power_name\nFROM hero_power hp\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE hp.hero_id = 56;\t----- bird -----\tsuperhero",
    "755": "SELECT s.full_name\nFROM superhero s\nJOIN race r ON s.race_id = r.id\nWHERE r.race = 'Demi-God'\nLIMIT 5;\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) AS bad_superhero_count\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE alignment.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "757": "SELECT r.race\nFROM superhero s\nJOIN race r ON s.race_id = r.id\nWHERE s.weight_kg = 169;\t----- bird -----\tsuperhero",
    "758": "SELECT c.colour AS hair_colour\nFROM superhero s\nJOIN race r ON s.race_id = r.id\nJOIN colour c ON s.hair_colour_id = c.id\nWHERE s.height_cm = 185\n  AND r.race = 'human';\t----- bird -----\tsuperhero",
    "759": "SELECT c.colour AS eye_colour\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.weight_kg = (\n    SELECT MAX(weight_kg)\n    FROM superhero\n);\t----- bird -----\tsuperhero",
    "760": "SELECT \n    100.0 * \n    (\n        SELECT COUNT(*) \n        FROM superhero \n        WHERE height_cm BETWEEN 150 AND 180 \n          AND publisher_id = (\n              SELECT id \n              FROM publisher \n              WHERE publisher_name = 'Marvel Comics'\n          )\n    ) / \n    (\n        SELECT COUNT(*) \n        FROM superhero \n        WHERE height_cm BETWEEN 150 AND 180\n    ) AS percentage;\t----- bird -----\tsuperhero",
    "761": "SELECT AVG(weight_kg) FROM superhero;\t----- bird -----\tsuperhero",
    "762": "SELECT sp.power_name\nFROM hero_power hp\nJOIN superpower sp ON hp.power_id = sp.id\nGROUP BY sp.power_name\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "763": "SELECT ha.attribute_value\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nWHERE s.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "764": "SELECT sp.power_name\nFROM hero_power hp\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE hp.hero_id = 1;\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(DISTINCT hp.hero_id) AS stealth_hero_count\nFROM hero_power hp\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'stealth';\t----- bird -----\tsuperhero",
    "766": "SELECT s.full_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'strength'\n  AND ha.attribute_value = (\n    SELECT MAX(ha2.attribute_value)\n    FROM hero_attribute ha2\n    JOIN attribute a2 ON ha2.attribute_id = a2.id\n    WHERE a2.attribute_name = 'strength'\n  );\t----- bird -----\tsuperhero",
    "767": "SELECT \n    COUNT(*) * 1.0 / COUNT(CASE WHEN skin_colour_id = 1 THEN 1 END) AS average\nFROM superhero;\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(*) AS num_superheroes\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "769": "SELECT s.superhero_name, ha.attribute_value\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE a.attribute_name = 'Durability'\n  AND p.publisher_name = 'Dark Horse Comics'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "770": "SELECT c.colour AS eye_colour\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.full_name = 'Abraham Sapien';\t----- bird -----\tsuperhero",
    "771": "SELECT DISTINCT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower p ON hp.power_id = p.id\nWHERE p.power_name = 'Flight';\t----- bird -----\tsuperhero",
    "772": "SELECT \n    eye.colour AS eye_colour,\n    hair.colour AS hair_colour,\n    skin.colour AS skin_colour\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nJOIN colour AS eye ON superhero.eye_colour_id = eye.id\nJOIN colour AS hair ON superhero.hair_colour_id = hair.id\nJOIN colour AS skin ON superhero.skin_colour_id = skin.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE gender.gender = 'Female'\n  AND publisher.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "773": "SELECT \n    s.superhero_name,\n    p.publisher_name\nFROM \n    superhero s\nJOIN \n    publisher p ON s.publisher_id = p.id\nWHERE \n    s.eye_colour_id = s.hair_colour_id \n    AND s.hair_colour_id = s.skin_colour_id;\t----- bird -----\tsuperhero",
    "774": "SELECT r.race\nFROM superhero s\nJOIN race r ON s.race_id = r.id\nWHERE s.superhero_name = 'A-Bomb';\t----- bird -----\tsuperhero",
    "775": "SELECT \n    100.0 * \n    (\n        SELECT COUNT(*) \n        FROM superhero s\n        JOIN gender g ON s.gender_id = g.id\n        JOIN colour c ON s.skin_colour_id = c.id\n        WHERE g.gender = 'Female' AND c.colour = 'Blue'\n    ) / \n    (\n        SELECT COUNT(*) \n        FROM superhero s\n        JOIN gender g ON s.gender_id = g.id\n        WHERE g.gender = 'Female'\n    ) AS percentage;\t----- bird -----\tsuperhero",
    "776": "SELECT \n    s.superhero_name,\n    r.race\nFROM \n    superhero s\nJOIN \n    race r ON s.race_id = r.id\nWHERE \n    s.full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "777": "SELECT g.gender\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nWHERE s.superhero_name = 'Agent 13';\t----- bird -----\tsuperhero",
    "778": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower p ON hp.power_id = p.id\nWHERE p.power_name = 'Adaptation';\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(*) AS power_count\nFROM hero_power\nWHERE hero_id = (\n    SELECT id\n    FROM superhero\n    WHERE superhero_name = 'Amazo'\n);\t----- bird -----\tsuperhero",
    "780": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.full_name = 'Hunter Zolomon';\t----- bird -----\tsuperhero",
    "781": "SELECT s.height_cm\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE c.colour = 'Amber';\t----- bird -----\tsuperhero",
    "782": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour eye ON s.eye_colour_id = eye.id\nJOIN colour hair ON s.hair_colour_id = hair.id\nWHERE eye.colour = 'Black' AND hair.colour = 'Black';\t----- bird -----\tsuperhero",
    "783": "SELECT c.eye_colour.colour AS eye_colour\nFROM superhero s\nJOIN colour AS skin_colour ON s.skin_colour_id = skin_colour.id\nJOIN colour AS eye_colour ON s.eye_colour_id = eye_colour.id\nWHERE skin_colour.colour = 'Gold';\t----- bird -----\tsuperhero",
    "784": "SELECT s.full_name\nFROM superhero s\nJOIN race r ON s.race_id = r.id\nWHERE r.race = 'Vampire';\t----- bird -----\tsuperhero",
    "785": "SELECT s.superhero_name\nFROM superhero s\nJOIN alignment a ON s.alignment_id = a.id\nWHERE a.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(*) AS num_heroes_with_max_strength\nFROM hero_attribute\nWHERE attribute_id = (\n    SELECT id\n    FROM attribute\n    WHERE attribute_name = 'Strength'\n)\nAND attribute_value = (\n    SELECT MAX(attribute_value)\n    FROM hero_attribute\n    WHERE attribute_id = (\n        SELECT id\n        FROM attribute\n        WHERE attribute_name = 'Strength'\n    )\n);\t----- bird -----\tsuperhero",
    "787": "SELECT \n    r.race AS race_name,\n    a.alignment AS alignment_name\nFROM superhero s\nJOIN race r ON s.race_id = r.id\nJOIN alignment a ON s.alignment_id = a.id\nWHERE s.superhero_name = 'Cameron Hicks';\t----- bird -----\tsuperhero",
    "788": "SELECT \n    100.0 * \n    (\n        SELECT COUNT(*) \n        FROM superhero s\n        JOIN gender g ON s.gender_id = g.id\n        JOIN publisher p ON s.publisher_id = p.id\n        WHERE g.gender = 'Female' AND p.publisher_name = 'Marvel Comics'\n    ) / \n    (\n        SELECT COUNT(*) \n        FROM superhero s\n        JOIN publisher p ON s.publisher_id = p.id\n        WHERE p.publisher_name = 'Marvel Comics'\n    ) AS percent_female_marvel;\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(s.weight_kg) AS average_weight\nFROM superhero s\nJOIN race r ON s.race_id = r.id\nWHERE r.race = 'Alien';\t----- bird -----\tsuperhero",
    "790": "SELECT \n    (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') \n    - \n    (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler') AS weight_difference;\t----- bird -----\tsuperhero",
    "791": "SELECT AVG(height_cm) AS average_height\nFROM superhero;\t----- bird -----\tsuperhero",
    "792": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(*) AS male_god_eternal_count\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE race.race = 'god/eternal'\n  AND gender.gender = 'male';\t----- bird -----\tsuperhero",
    "794": "SELECT s.superhero_name, ha.attribute_value\nFROM hero_attribute ha\nJOIN attribute a ON ha.attribute_id = a.id\nJOIN superhero s ON ha.hero_id = s.id\nWHERE a.attribute_name = 'Speed'\n  AND ha.attribute_value = (\n    SELECT MAX(attribute_value)\n    FROM hero_attribute\n    WHERE attribute_id = (\n      SELECT id\n      FROM attribute\n      WHERE attribute_name = 'Speed'\n    )\n  );\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) AS num_neutral_superheroes\nFROM superhero\nWHERE alignment_id = 3;\t----- bird -----\tsuperhero",
    "796": "SELECT \n    a.attribute_name,\n    ha.attribute_value\nFROM \n    superhero s\nJOIN \n    hero_attribute ha ON s.id = ha.hero_id\nJOIN \n    attribute a ON ha.attribute_id = a.id\nWHERE \n    s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "797": "SELECT s.superhero_name\nFROM superhero s\nJOIN colour eye ON s.eye_colour_id = eye.id\nJOIN colour hair ON s.hair_colour_id = hair.id\nWHERE eye.colour = 'Blue' AND hair.colour = 'Brown';\t----- bird -----\tsuperhero",
    "798": "SELECT \n    s.superhero_name,\n    p.publisher_name\nFROM \n    superhero s\nJOIN \n    publisher p ON s.publisher_id = p.id\nWHERE \n    s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) AS superheroes_without_publisher\nFROM superhero\nWHERE publisher_id = 1;\t----- bird -----\tsuperhero",
    "800": "SELECT \n    100.0 * COUNT(CASE WHEN eye_colour_id = 7 THEN 1 END) / COUNT(*) AS percentage_blue_eyes\nFROM superhero;\t----- bird -----\tsuperhero",
    "801": "SELECT \n    (CAST(male_count AS REAL) / female_count) AS male_to_female_ratio\nFROM\n    (SELECT \n        (SELECT COUNT(*) FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE g.gender = 'Male') AS male_count,\n        (SELECT COUNT(*) FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE g.gender = 'Female') AS female_count\n    );\t----- bird -----\tsuperhero",
    "802": "SELECT superhero_name\nFROM superhero\nWHERE height_cm = (\n    SELECT MAX(height_cm)\n    FROM superhero\n);\t----- bird -----\tsuperhero",
    "803": "SELECT id\nFROM superpower\nWHERE power_name = 'cryokinesis';\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name\nFROM superhero\nWHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT full_name\nFROM superhero\nWHERE weight_kg = 0 OR weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "806": "SELECT c.colour AS eye_colour\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "807": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.full_name = 'Helen Parr';\t----- bird -----\tsuperhero",
    "808": "SELECT r.race\nFROM superhero s\nJOIN race r ON s.race_id = r.id\nWHERE s.weight_kg = 108 AND s.height_cm = 188;\t----- bird -----\tsuperhero",
    "809": "SELECT p.publisher_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.id = 38;\t----- bird -----\tsuperhero",
    "810": "SELECT r.race\nFROM hero_attribute ha\nJOIN superhero s ON ha.hero_id = s.id\nJOIN race r ON s.race_id = r.id\nWHERE ha.attribute_value = (\n    SELECT MAX(attribute_value)\n    FROM hero_attribute\n);\t----- bird -----\tsuperhero",
    "811": "SELECT \n    a.alignment,\n    p.power_name AS superpower\nFROM \n    superhero s\nJOIN \n    alignment a ON s.alignment_id = a.id\nJOIN \n    hero_power hp ON s.id = hp.hero_id\nJOIN \n    superpower p ON hp.power_id = p.id\nWHERE \n    s.superhero_name = 'Atom IV';\t----- bird -----\tsuperhero",
    "812": "SELECT s.full_name\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE c.colour = 'Blue'\nLIMIT 5;\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(ha.attribute_value) AS average_attribute_value\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nWHERE s.alignment_id = 3;\t----- bird -----\tsuperhero",
    "814": "SELECT c.colour AS skin_colour\nFROM hero_attribute ha\nJOIN superhero s ON ha.hero_id = s.id\nJOIN colour c ON s.skin_colour_id = c.id\nWHERE ha.attribute_value = 100;\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) AS good_female_superheroes_count\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE alignment.id = 1 AND gender.id = 2;\t----- bird -----\tsuperhero",
    "816": "SELECT DISTINCT s.superhero_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nWHERE ha.attribute_value BETWEEN 75 AND 80;\t----- bird -----\tsuperhero",
    "817": "SELECT r.race\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN colour c ON s.hair_colour_id = c.id\nJOIN race r ON s.race_id = r.id\nWHERE g.gender = 'male' AND c.colour = 'blue';\t----- bird -----\tsuperhero",
    "818": "SELECT \n    100.0 * SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END) / COUNT(*) AS percentage_female_bad_superheroes\nFROM superhero\nWHERE alignment_id = 2;\t----- bird -----\tsuperhero",
    "819": "SELECT\n    (SELECT COUNT(*) FROM superhero\n     WHERE (weight_kg = 0 OR weight_kg IS NULL)\n       AND eye_colour_id = 7) AS blue_eyes_count,\n    (SELECT COUNT(*) FROM superhero\n     WHERE (weight_kg = 0 OR weight_kg IS NULL)\n       AND eye_colour_id = 1) AS no_eye_color_count,\n    (SELECT COUNT(*) FROM superhero\n     WHERE (weight_kg = 0 OR weight_kg IS NULL)\n       AND eye_colour_id = 7) -\n    (SELECT COUNT(*) FROM superhero\n     WHERE (weight_kg = 0 OR weight_kg IS NULL)\n       AND eye_colour_id = 1) AS difference;\t----- bird -----\tsuperhero",
    "820": "SELECT ha.attribute_value\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE s.superhero_name = 'Hulk'\n  AND a.attribute_name = 'Strength';\t----- bird -----\tsuperhero",
    "821": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.superhero_name = 'Ajax';\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(*) AS green_skinned_villains_count\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nJOIN colour ON superhero.skin_colour_id = colour.id\nWHERE alignment.alignment = 'Bad'\n  AND colour.colour = 'Green';\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(*) AS female_marvel_superheroes\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE gender.gender = 'Female'\n  AND publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "824": "SELECT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower p ON hp.power_id = p.id\nWHERE p.power_name = 'Wind Control'\nORDER BY s.superhero_name ASC;\t----- bird -----\tsuperhero",
    "825": "SELECT g.gender\nFROM superpower sp\nJOIN hero_power hp ON sp.id = hp.power_id\nJOIN superhero s ON hp.hero_id = s.id\nJOIN gender g ON s.gender_id = g.id\nWHERE sp.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "826": "SELECT id FROM publisher WHERE publisher_name = 'DC Comics';\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(s.height_cm) AS average_height\nFROM superhero s\nJOIN race r ON s.race_id = r.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE r.race <> 'Human'\n  AND p.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(*) AS fastest_superhero_count\nFROM hero_attribute\nWHERE attribute_id = (\n    SELECT id\n    FROM attribute\n    WHERE attribute_name = 'Speed'\n)\nAND attribute_value = 100;\t----- bird -----\tsuperhero",
    "829": "SELECT \n    (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics') \n    - \n    (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics') AS difference;\t----- bird -----\tsuperhero",
    "830": "SELECT a.attribute_name, ha.attribute_value\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE s.superhero_name = 'Black Panther'\nORDER BY ha.attribute_value ASC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "831": "SELECT c.colour AS eye_colour\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "832": "SELECT superhero_name, height_cm\nFROM superhero\nWHERE height_cm = (\n    SELECT MAX(height_cm)\n    FROM superhero\n);\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name\nFROM superhero\nWHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "834": "SELECT \n    100.0 * \n    SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END) / \n    COUNT(*) AS percentage_female\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN gender g ON s.gender_id = g.id\nWHERE p.publisher_name = 'George Lucas';\t----- bird -----\tsuperhero",
    "835": "SELECT \n    100.0 * COUNT(CASE WHEN a.alignment = 'Good' THEN 1 END) / COUNT(*) AS percentage_good\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN alignment a ON s.alignment_id = a.id\nWHERE p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) AS total_john_superheroes\nFROM superhero\nWHERE full_name LIKE 'John%';\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id\nFROM hero_attribute\nWHERE attribute_value = (\n    SELECT MIN(attribute_value)\n    FROM hero_attribute\n);\t----- bird -----\tsuperhero",
    "838": "SELECT full_name\nFROM superhero\nWHERE superhero_name = 'Alien';\t----- bird -----\tsuperhero",
    "839": "SELECT s.full_name\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.weight_kg < 100\n  AND c.colour = 'brown';\t----- bird -----\tsuperhero",
    "840": "SELECT \n    a.attribute_name,\n    ha.attribute_value\nFROM \n    superhero s\nJOIN \n    hero_attribute ha ON s.id = ha.hero_id\nJOIN \n    attribute a ON ha.attribute_id = a.id\nWHERE \n    s.superhero_name = 'Aquababy';\t----- bird -----\tsuperhero",
    "841": "SELECT \n    s.weight_kg AS weight,\n    r.race AS race\nFROM \n    superhero s\nJOIN \n    race r ON s.race_id = r.id\nWHERE \n    s.id = 40;\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(s.height_cm) AS average_height\nFROM superhero s\nJOIN alignment a ON s.alignment_id = a.id\nWHERE a.alignment = 'neutral';\t----- bird -----\tsuperhero",
    "843": "SELECT hp.hero_id\nFROM hero_power hp\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Intelligence';\t----- bird -----\tsuperhero",
    "844": "SELECT c.colour\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.superhero_name = 'Blackwulf';\t----- bird -----\tsuperhero",
    "845": "SELECT AVG(height_cm) FROM superhero;\t----- bird -----\tsuperhero",
    "846": "SELECT d.driverRef\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 20\n  AND q.q1 IS NOT NULL\nORDER BY \n  -- Convert q1 time to milliseconds for sorting\n  CAST(substr(q.q1, 1, instr(q.q1, ':') - 1) * 60000 + \n       CAST(substr(q.q1, instr(q.q1, ':') + 1) AS INTEGER) * 1000 AS INTEGER) ASC\nLIMIT 5;\t----- bird -----\tformula_1",
    "847": "SELECT d.surname\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 19\n  AND q.q2 IS NOT NULL\n  AND q.q2 = (\n    SELECT MIN(q2)\n    FROM qualifying\n    WHERE raceId = 19 AND q2 IS NOT NULL\n  );\t----- bird -----\tformula_1",
    "848": "SELECT DISTINCT r.year\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.location = 'Shanghai';\t----- bird -----\tformula_1",
    "849": "SELECT r.url\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.name = 'Circuit de Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "850": "SELECT r.name AS raceName\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.country = 'Germany';\t----- bird -----\tformula_1",
    "851": "SELECT DISTINCT c.name AS circuitName, c.location, c.country\nFROM circuits c\nJOIN races r ON c.circuitId = r.circuitId\nJOIN results res ON r.raceId = res.raceId\nJOIN constructors con ON res.constructorId = con.constructorId\nWHERE con.name = 'Renault';\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(*) AS races_outside_asia_europe\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE r.year = 2010\n  AND c.country NOT IN (\n    -- List of countries in Europe\n    'Austria', 'Belgium', 'France', 'Germany', 'Italy', 'Spain', 'Portugal', 'United Kingdom', 'Netherlands', 'Sweden', 'Switzerland', 'Hungary', 'Turkey', 'Russia', 'Monaco', 'Finland', 'Denmark', 'Norway', 'Ireland', 'Poland', 'Czech Republic', 'Greece', 'Ukraine', 'Belarus', 'Slovakia', 'Serbia', 'Croatia', 'Bulgaria', 'Romania', 'Hungary', 'Iceland', 'Albania', 'Bosnia and Herzegovina', 'North Macedonia', 'Slovenia', 'Lithuania', 'Latvia', 'Estonia', 'Moldova', 'Armenia', 'Azerbaijan', 'Georgia', 'Ukraine', 'Russia', 'Belarus', 'Kazakhstan', 'Uzbekistan', 'Kyrgyzstan', 'Tajikistan', 'Turkmenistan', 'Azerbaijan', 'Armenia', 'Georgia', 'Moldova', 'Ukraine', 'Belarus', 'Russia', 'Kazakhstan', 'Uzbekistan', 'Kyrgyzstan', 'Tajikistan', 'Turkmenistan'\n  )\n  AND c.country NOT IN (\n    -- List of countries in Asia\n    'China', 'Japan', 'South Korea', 'India', 'Malaysia', 'Singapore', 'Thailand', 'Indonesia', 'Vietnam', 'Australia', 'New Zealand', 'Philippines', 'Sri Lanka', 'Nepal', 'Bangladesh', 'Pakistan', 'Iran', 'Iraq', 'Israel', 'Jordan', 'Kuwait', 'Lebanon', 'Oman', 'Qatar', 'Saudi Arabia', 'Syria', 'United Arab Emirates', 'Yemen', 'Afghanistan', 'Bhutan', 'Brunei', 'Cambodia', 'Myanmar', 'Nepal', 'Sri Lanka', 'Taiwan', 'Hong Kong', 'Macau'\n  );\t----- bird -----\tformula_1",
    "853": "SELECT r.name AS race_name\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.country = 'Spain';\t----- bird -----\tformula_1",
    "854": "SELECT c.lat, c.lng\nFROM circuits c\nJOIN races r ON c.circuitId = r.circuitId\nWHERE r.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "855": "SELECT r.raceId, r.year, r.round, r.name, r.date, r.time, r.url\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "856": "SELECT r.time\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "857": "SELECT c.lat, c.lng\nFROM circuits c\nJOIN races r ON c.circuitId = r.circuitId\nWHERE r.name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "858": "SELECT c.nationality\nFROM constructorResults cr\nJOIN constructors c ON cr.constructorId = c.constructorId\nWHERE cr.raceId = 24 AND cr.points = 1;\t----- bird -----\tformula_1",
    "859": "SELECT q.q1\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 354\n  AND d.forename = 'Bruno'\n  AND d.surname = 'Senna';\t----- bird -----\tformula_1",
    "860": "SELECT d.nationality\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 355 AND q.q2 = '0:01:40';\t----- bird -----\tformula_1",
    "861": "SELECT d.number\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nWHERE q.raceId = 903\n  AND q.q3 = '0:01:54';\t----- bird -----\tformula_1",
    "862": "SELECT raceId\nFROM races\nWHERE year = 2007 AND name = 'Bahrain Grand Prix';\t----- bird -----\tformula_1",
    "863": "SELECT year FROM races WHERE raceId = 901;\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(*) AS driversFinished\nFROM results\nWHERE raceId = (\n    SELECT raceId\n    FROM races\n    WHERE date = '2015-11-29'\n)\n  AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "865": "SELECT d.driverId, d.forename, d.surname, d.dob\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nWHERE r.raceId = 592\n  AND r.time IS NOT NULL\nORDER BY d.dob ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "866": "SELECT d.forename || ' ' || d.surname AS driverName, d.url\nFROM lapTimes l\nJOIN drivers d ON l.driverId = d.driverId\nWHERE l.raceId = 161 AND l.time = '0:01:27';\t----- bird -----\tformula_1",
    "867": "SELECT d.nationality\nFROM drivers d\nWHERE d.driverId = (\n    SELECT r.driverId\n    FROM results r\n    WHERE r.raceId = 933\n      AND r.fastestLapSpeed = (\n          SELECT MAX(fastestLapSpeed)\n          FROM results\n          WHERE raceId = 933\n      )\n);\t----- bird -----\tformula_1",
    "868": "SELECT c.lat, c.lng\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE r.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "869": "SELECT c.url\nFROM constructors c\nJOIN constructorResults cr ON c.constructorId = cr.constructorId\nWHERE cr.raceId = 9\nORDER BY cr.points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "870": "SELECT q.q1\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 345\n  AND d.forename = 'Lucas'\n  AND d.surname = 'di Grassi';\t----- bird -----\tformula_1",
    "871": "SELECT d.nationality\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 347 AND q.q2 = '0:01:15';\t----- bird -----\tformula_1",
    "872": "SELECT d.code\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 45 AND q.q3 = '0:01:33';\t----- bird -----\tformula_1",
    "873": "SELECT driverId\nFROM drivers\nWHERE forename = 'Bruce' AND surname = 'McLaren';\t----- bird -----\tformula_1",
    "874": "SELECT d.forename, d.surname\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 2006\n  AND ra.name = 'San Marino Grand Prix'\n  AND r.position = 2;\t----- bird -----\tformula_1",
    "875": "SELECT year FROM races WHERE raceId = 901;\t----- bird -----\tformula_1",
    "876": "SELECT raceId\nFROM races\nWHERE date = '2015-11-29';\t----- bird -----\tformula_1",
    "877": "SELECT d.driverId, d.forename, d.surname, d.dob\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.raceId = (\n    SELECT raceId\n    FROM races\n    WHERE raceId = 872\n)\n  AND r.time IS NOT NULL  -- Only drivers who finished the race\nORDER BY d.dob DESC  -- Youngest first\nLIMIT 1;\t----- bird -----\tformula_1",
    "878": "SELECT d.forename || ' ' || d.surname AS fullName\nFROM lapTimes l\nJOIN drivers d ON l.driverId = d.driverId\nWHERE l.raceId = 348\n  AND l.milliseconds = (\n    SELECT MIN(milliseconds)\n    FROM lapTimes\n    WHERE raceId = 348\n  );\t----- bird -----\tformula_1",
    "879": "SELECT d.nationality\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nWHERE r.fastestLapSpeed = (\n    SELECT MAX(fastestLapSpeed)\n    FROM results\n    WHERE fastestLapSpeed IS NOT NULL\n);\t----- bird -----\tformula_1",
    "880": "SELECT\n    ( (CAST(r853.fastestLapSpeed AS REAL) - CAST(r854.fastestLapSpeed AS REAL)) / CAST(r854.fastestLapSpeed AS REAL) ) * 100 AS percentage_faster\nFROM\n    results r853\nJOIN\n    drivers d ON r853.driverId = d.driverId\nLEFT JOIN\n    results r854 ON r854.driverId = d.driverId AND r854.raceId = 854\nWHERE\n    d.forename = 'Paul'\n    AND d.surname = 'di Resta'\n    AND r853.raceId = 853;\t----- bird -----\tformula_1",
    "881": "SELECT raceId\nFROM races\nWHERE date = '1983-07-16';\t----- bird -----\tformula_1",
    "882": "SELECT MIN(year) AS first_singapore_gp_year\nFROM races\nWHERE name = 'Singapore Grand Prix';\t----- bird -----\tformula_1",
    "883": "SELECT \n    COUNT(*) AS total_races,\n    name\nFROM \n    races\nWHERE \n    year = 2005\nORDER BY \n    name DESC;\t----- bird -----\tformula_1",
    "884": "SELECT name\nFROM races\nWHERE strftime('%Y-%m', date) = (\n    SELECT strftime('%Y-%m', MIN(date))\n    FROM races\n);\t----- bird -----\tformula_1",
    "885": "SELECT name, date\nFROM races\nWHERE year = 1999\n  AND round = (\n    SELECT MAX(round)\n    FROM races\n    WHERE year = 1999\n  );\t----- bird -----\tformula_1",
    "886": "SELECT year, COUNT(*) AS num_races\nFROM races\nGROUP BY year\nORDER BY num_races DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "887": "SELECT r2017.raceId, r2017.name, r2017.date\nFROM races r2017\nWHERE r2017.year = 2017\n  AND r2017.circuitId NOT IN (\n    SELECT r2000.circuitId\n    FROM races r2000\n    WHERE r2000.year = 2000\n  );\t----- bird -----\tformula_1",
    "888": "SELECT \n    c.name AS circuitName,\n    c.location AS circuitLocation,\n    c.country AS hostCountry\nFROM \n    races r\nJOIN \n    circuits c ON r.circuitId = c.circuitId\nWHERE \n    r.name = 'European Grand Prix'\nORDER BY \n    r.date ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "889": "SELECT MAX(r.year) AS last_brands_hatch_british_gp\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.name = 'Brands Hatch'\n  AND r.name = 'British Grand Prix';\t----- bird -----\tformula_1",
    "890": "SELECT circuitId FROM circuits WHERE name = 'Silverstone';\t----- bird -----\tformula_1",
    "891": "SELECT \n    d.forename || ' ' || d.surname AS driverName,\n    r.position,\n    r.positionText,\n    r.positionOrder\nFROM \n    results r\nJOIN \n    drivers d ON r.driverId = d.driverId\nJOIN \n    races ra ON r.raceId = ra.raceId\nWHERE \n    ra.year = 2010\n    AND ra.name = 'Singapore Grand Prix'\nORDER BY \n    r.positionOrder;\t----- bird -----\tformula_1",
    "892": "SELECT \n    d.forename || ' ' || d.surname AS fullName,\n    SUM(ds.points) AS totalPoints\nFROM \n    driverStandings ds\nJOIN \n    drivers d ON ds.driverId = d.driverId\nGROUP BY \n    ds.driverId\nORDER BY \n    totalPoints DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "893": "SELECT \n    d.forename || ' ' || d.surname AS driverName,\n    r.points\nFROM \n    results r\nJOIN \n    drivers d ON r.driverId = d.driverId\nWHERE \n    r.raceId = (\n        SELECT raceId\n        FROM races\n        WHERE year = 2017 AND name = 'Chinese Grand Prix'\n    )\nORDER BY \n    r.points DESC\nLIMIT 3;\t----- bird -----\tformula_1",
    "894": "SELECT \n    d.forename || ' ' || d.surname AS driver,\n    r.name AS race,\n    lt.milliseconds AS best_lap_time\nFROM \n    lapTimes lt\nJOIN \n    drivers d ON lt.driverId = d.driverId\nJOIN \n    races r ON lt.raceId = r.raceId\nWHERE \n    lt.milliseconds = (\n        SELECT MIN(milliseconds)\n        FROM lapTimes\n        WHERE milliseconds IS NOT NULL\n    );\t----- bird -----\tformula_1",
    "895": "SELECT raceId\nFROM races\nWHERE year = 2009 AND name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "896": "SELECT\n  100.0 * COUNT(CASE WHEN r.position != 1 THEN 1 END) / COUNT(*) AS percentage_not_first\nFROM\n  results r\nJOIN\n  drivers d ON r.driverId = d.driverId\nJOIN\n  races ra ON r.raceId = ra.raceId\nWHERE\n  d.surname = 'Hamilton'\n  AND ra.year >= 2010;\t----- bird -----\tformula_1",
    "897": "SELECT \n    d.driverId,\n    d.forename || ' ' || d.surname AS fullName,\n    d.nationality,\n    MAX(r.points) AS maxPointScore,\n    ds.totalWins\nFROM \n    drivers d\nJOIN (\n    SELECT \n        driverId, \n        SUM(wins) AS totalWins\n    FROM \n        driverStandings\n    GROUP BY \n        driverId\n) ds ON d.driverId = ds.driverId\nJOIN results r ON d.driverId = r.driverId\nWHERE \n    ds.totalWins = (\n        SELECT \n            MAX(totalWins)\n        FROM (\n            SELECT \n                SUM(wins) AS totalWins\n            FROM \n                driverStandings\n            GROUP BY \n                driverId\n        )\n    )\nGROUP BY \n    d.driverId, d.forename, d.surname, d.nationality\nORDER BY \n    ds.totalWins DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "898": "SELECT \n    forename || ' ' || surname AS name,\n    strftime('%Y', 'now') - strftime('%Y', dob) AS age\nFROM \n    drivers\nWHERE \n    nationality = 'Japanese'\nORDER BY \n    age ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "899": "SELECT \n    c.circuitId,\n    c.name AS circuitName,\n    c.location,\n    c.country,\n    COUNT(r.raceId) AS raceCount\nFROM \n    races r\nJOIN \n    circuits c ON r.circuitId = c.circuitId\nWHERE \n    r.year BETWEEN 1990 AND 2000\nGROUP BY \n    c.circuitId\nHAVING \n    COUNT(r.raceId) >= 4;\t----- bird -----\tformula_1",
    "900": "SELECT \n    c.name AS circuitName,\n    c.location AS circuitLocation,\n    r.name AS raceName\nFROM \n    circuits c\nJOIN \n    races r ON c.circuitId = r.circuitId\nWHERE \n    r.year = 2006\n    AND c.country = 'USA';\t----- bird -----\tformula_1",
    "901": "SELECT \n    r.name AS raceName,\n    c.name AS circuitName,\n    c.location AS circuitLocation\nFROM \n    races r\nJOIN \n    circuits c ON r.circuitId = c.circuitId\nWHERE \n    strftime('%Y', r.date) = '2005'\n    AND strftime('%m', r.date) = '09';\t----- bird -----\tformula_1",
    "902": "SELECT r.name AS race_name\nFROM results res\nJOIN drivers d ON res.driverId = d.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.forename = 'Alex' AND d.surname = 'Yoong' AND res.grid < 20;\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(*) AS wins\nFROM results\nWHERE driverId = (\n    SELECT driverId\n    FROM drivers\n    WHERE forename = 'Michael' AND surname = 'Schumacher'\n)\nAND raceId IN (\n    SELECT raceId\n    FROM races\n    WHERE circuitId = (\n        SELECT circuitId\n        FROM circuits\n        WHERE name = 'Sepang International Circuit'\n    )\n)\nAND position = 1;\t----- bird -----\tformula_1",
    "904": "SELECT \n    r.name AS raceName,\n    r.year AS raceYear\nFROM \n    lapTimes l\nJOIN \n    drivers d ON l.driverId = d.driverId\nJOIN \n    races r ON l.raceId = r.raceId\nWHERE \n    d.forename = 'Michael' AND d.surname = 'Schumacher'\n    AND l.milliseconds = (\n        SELECT MIN(milliseconds)\n        FROM lapTimes\n        WHERE driverId = d.driverId\n    );\t----- bird -----\tformula_1",
    "905": "SELECT AVG(r.points) AS average_points\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE d.forename = 'Eddie' AND d.surname = 'Irvine' AND ra.year = 2000;\t----- bird -----\tformula_1",
    "906": "SELECT \n    r.raceId,\n    r.name AS raceName,\n    r.date AS raceDate,\n    res.points\nFROM \n    drivers d\nJOIN \n    results res ON d.driverId = res.driverId\nJOIN \n    races r ON res.raceId = r.raceId\nWHERE \n    d.forename = 'Lewis' AND d.surname = 'Hamilton'\nORDER BY \n    r.date ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "907": "SELECT \n    races.name AS raceName,\n    races.date AS raceDate,\n    circuits.country AS hostingCountry\nFROM \n    races\nJOIN \n    circuits ON races.circuitId = circuits.circuitId\nWHERE \n    races.year = 2017\nORDER BY \n    races.date;\t----- bird -----\tformula_1",
    "908": "SELECT \n    r.name AS raceName,\n    r.year,\n    c.location AS circuitLocation,\n    MAX(res.laps) AS maxLaps\nFROM results res\nJOIN races r ON res.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE res.laps = (\n    SELECT MAX(laps)\n    FROM results\n)\nGROUP BY r.raceId;\t----- bird -----\tformula_1",
    "909": "SELECT \n    ROUND(\n        100.0 * \n        (\n            SELECT COUNT(*) \n            FROM races \n            JOIN circuits ON races.circuitId = circuits.circuitId\n            WHERE races.name = 'European Grand Prix' \n              AND circuits.country = 'Germany'\n        ) / \n        (\n            SELECT COUNT(*) \n            FROM races \n            WHERE races.name = 'European Grand Prix'\n        ),\n        2\n    ) AS percentage_in_germany;\t----- bird -----\tformula_1",
    "910": "SELECT lat, lng\nFROM circuits\nWHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "911": "SELECT name, lat\nFROM circuits\nWHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring')\nORDER BY lat DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef\nFROM circuits\nWHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "913": "SELECT country\nFROM circuits\nWHERE alt = (SELECT MAX(alt) FROM circuits);\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) \nFROM drivers \nWHERE code IS NULL;\t----- bird -----\tformula_1",
    "915": "SELECT nationality\nFROM drivers\nORDER BY dob ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "916": "SELECT surname\nFROM drivers\nWHERE nationality = 'Italian';\t----- bird -----\tformula_1",
    "917": "SELECT driverId FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson';\t----- bird -----\tformula_1",
    "918": "SELECT driverRef\nFROM drivers\nWHERE forename = 'Lewis' AND surname = 'Hamilton';\t----- bird -----\tformula_1",
    "919": "SELECT c.name AS circuit_name\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE r.year = 2009 AND r.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT r.year\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.name = 'Silverstone';\t----- bird -----\tformula_1",
    "921": "SELECT circuitId\nFROM circuits\nWHERE name = 'Silverstone';\t----- bird -----\tformula_1",
    "922": "SELECT r.time\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.name = 'Abu Dhabi' AND r.year = 2010;\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(*) AS races_in_italy\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.country = 'Italy';\t----- bird -----\tformula_1",
    "924": "SELECT r.date\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.name = 'Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "925": "SELECT c.url\nFROM circuits c\nJOIN races r ON c.circuitId = r.circuitId\nWHERE r.year = 2009 AND r.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "926": "SELECT \n    l.raceId,\n    r.name AS raceName,\n    r.date AS raceDate,\n    l.time AS fastestLapTime\nFROM \n    lapTimes l\nJOIN \n    drivers d ON l.driverId = d.driverId\nJOIN \n    races r ON l.raceId = r.raceId\nWHERE \n    d.forename = 'Lewis' AND d.surname = 'Hamilton'\nORDER BY \n    l.milliseconds ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "927": "SELECT d.forename, d.surname\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nWHERE r.fastestLapSpeed = (\n    SELECT MAX(fastestLapSpeed)\n    FROM results\n    WHERE fastestLapSpeed IS NOT NULL\n);\t----- bird -----\tformula_1",
    "928": "SELECT d.driverRef\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.name = 'Canadian Grand Prix'\n  AND ra.year = 2007\n  AND r.positionOrder = 1;\t----- bird -----\tformula_1",
    "929": "SELECT DISTINCT r.raceId, r.year, r.round, r.name AS raceName, r.date\nFROM drivers d\nJOIN results res ON d.driverId = res.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "930": "SELECT r.raceId, r.year, r.name AS raceName\nFROM results res\nJOIN drivers d ON res.driverId = d.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nORDER BY res.rank ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "931": "SELECT raceId\nFROM races\nWHERE year = 2009 AND name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT r.year\nFROM drivers d\nJOIN results res ON d.driverId = res.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "933": "SELECT raceId\nFROM races\nWHERE year = 2008 AND name = 'Chinese Grand Prix';\t----- bird -----\tformula_1",
    "934": "SELECT d.forename, d.surname\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 1989\n  AND ra.name = 'Australian Grand Prix'\n  AND r.grid = 4;\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(DISTINCT r.driverId) AS driversFinished\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 2008\n  AND ra.name = 'Australian Grand Prix'\n  AND r.time IS NOT NULL;\t----- bird -----\tformula_1",
    "936": "SELECT driverId\nFROM drivers\nWHERE forename = 'Lewis' AND surname = 'Hamilton';\t----- bird -----\tformula_1",
    "937": "SELECT r.time\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 2008\n  AND ra.name = 'Chinese Grand Prix'\n  AND r.positionOrder = 2;\t----- bird -----\tformula_1",
    "938": "SELECT \n    d.forename,\n    d.surname,\n    d.url\nFROM \n    races r\nJOIN \n    results res ON r.raceId = res.raceId\nJOIN \n    drivers d ON res.driverId = d.driverId\nWHERE \n    r.year = 2008\n    AND r.name = 'Australian Grand Prix'\n    AND res.position = 1;\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(DISTINCT d.driverId) AS british_drivers_count\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 2008\n  AND ra.name = 'Australian Grand Prix'\n  AND d.nationality = 'British';\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT d.driverId) AS participated_drivers\nFROM drivers d\nWHERE d.driverId IN (\n    SELECT r.driverId\n    FROM results r\n    WHERE r.raceId = (\n        SELECT raceId\n        FROM races\n        WHERE year = 2008 AND name = 'Chinese Grand Prix'\n    ) AND r.time IS NOT NULL\n)\nAND d.driverId IN (\n    SELECT DISTINCT driverId\n    FROM results\n    WHERE raceId != (\n        SELECT raceId\n        FROM races\n        WHERE year = 2008 AND name = 'Chinese Grand Prix'\n    )\n);\t----- bird -----\tformula_1",
    "941": "SELECT SUM(r.points) AS total_points\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nWHERE d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "942": "SELECT \n    AVG(\n        CAST(substr(fastestLapTime, 1, 2) AS INTEGER) * 60 + \n        CAST(substr(fastestLapTime, 4, 2) AS INTEGER) + \n        CAST(substr(fastestLapTime, 7, 3) AS REAL) / 1000\n    ) AS average_fastest_lap_time_seconds\nFROM \n    results\nJOIN \n    drivers ON results.driverId = drivers.driverId\nWHERE \n    drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "943": "SELECT\n    (CAST(COUNT(CASE WHEN r.time IS NOT NULL THEN 1 END) AS REAL) / COUNT(*)) AS completion_rate\nFROM\n    results r\nWHERE\n    r.raceId = (\n        SELECT raceId\n        FROM races\n        WHERE year = 2008 AND name = 'Australian Grand Prix'\n    );\t----- bird -----\tformula_1",
    "944": "SELECT raceId\nFROM races\nWHERE year = 2008 AND name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) AS circuit_count\nFROM circuits\nWHERE location = 'Adelaide' AND country = 'Australia';\t----- bird -----\tformula_1",
    "946": "SELECT lat, lng\nFROM circuits\nWHERE country = 'USA';\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(*) AS BritishDriversBornAfter1980\nFROM drivers\nWHERE nationality = 'British'\n  AND dob > '1980-12-31';\t----- bird -----\tformula_1",
    "948": "SELECT constructorId\n   FROM constructors\n   WHERE nationality = 'British';\t----- bird -----\tformula_1",
    "949": "SELECT \n    c.constructorId,\n    c.name AS constructorName,\n    SUM(cs.points) AS totalPoints\nFROM \n    constructorStandings cs\nJOIN \n    constructors c ON cs.constructorId = c.constructorId\nGROUP BY \n    c.constructorId, c.name\nORDER BY \n    totalPoints DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "950": "SELECT c.name\nFROM constructorResults cr\nJOIN constructors c ON cr.constructorId = c.constructorId\nWHERE cr.raceId = 291\n  AND cr.points = 0;\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(DISTINCT cr.constructorId) AS num_japanese_constructors_with_0_points_in_2_races\nFROM constructorResults cr\nJOIN constructors c ON cr.constructorId = c.constructorId\nWHERE c.nationality = 'Japanese'\n  AND cr.points = 0\nGROUP BY cr.constructorId\nHAVING COUNT(DISTINCT cr.raceId) = 2;\t----- bird -----\tformula_1",
    "952": "SELECT DISTINCT c.name\nFROM constructorStandings cs\nJOIN constructors c ON cs.constructorId = c.constructorId\nWHERE cs.position = 1;\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT c.constructorId) AS frenchConstructorsWithLapsOver50\nFROM constructors c\nJOIN results r ON c.constructorId = r.constructorId\nJOIN drivers d ON r.driverId = d.driverId\nJOIN lapTimes l ON d.driverId = l.driverId\nWHERE c.nationality = 'French'\n  AND l.lap > 50;\t----- bird -----\tformula_1",
    "954": "SELECT\n    100.0 * COUNT(CASE WHEN r.time IS NOT NULL THEN 1 END) / COUNT(*) AS completion_percentage\nFROM\n    drivers d\nJOIN\n    results r ON d.driverId = r.driverId\nJOIN\n    races ra ON r.raceId = ra.raceId\nWHERE\n    d.nationality = 'Japanese'\n    AND ra.year BETWEEN 2007 AND 2009;\t----- bird -----\tformula_1",
    "955": "SELECT \n    r.year,\n    AVG(\n        CAST(strftime('%H', results.time) AS INTEGER) * 3600 +\n        CAST(strftime('%M', results.time) AS INTEGER) * 60 +\n        CAST(strftime('%S', results.time) AS INTEGER) +\n        CAST(SUBSTR(results.time, 7, 3) AS INTEGER) / 1000.0\n    ) AS average_time_seconds\nFROM \n    results\nJOIN \n    races r ON results.raceId = r.raceId\nWHERE \n    r.year < 1975\n    AND results.position = 1\n    AND results.time IS NOT NULL\nGROUP BY \n    r.year\nORDER BY \n    r.year;\t----- bird -----\tformula_1",
    "956": "SELECT d.forename, d.surname\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE strftime('%Y', d.dob) > '1975'\n  AND r.positionOrder = 2;\t----- bird -----\tformula_1",
    "957": "SELECT driverId\n   FROM drivers\n   WHERE nationality = 'Italian';\t----- bird -----\tformula_1",
    "958": "SELECT d.forename, d.surname, l.milliseconds\nFROM lapTimes l\nJOIN drivers d ON l.driverId = d.driverId\nWHERE l.milliseconds = (\n    SELECT MIN(milliseconds)\n    FROM lapTimes\n    WHERE milliseconds IS NOT NULL\n);\t----- bird -----\tformula_1",
    "959": "SELECT l.lap\nFROM lapTimes l\nJOIN results r ON l.raceId = r.raceId AND l.driverId = r.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.year = 2009\n  AND r.driverId = (\n    SELECT ds.driverId\n    FROM driverStandings ds\n    JOIN races ra2 ON ds.raceId = ra2.raceId\n    WHERE ra2.year = 2009\n    ORDER BY ds.points DESC\n    LIMIT 1\n  )\nORDER BY l.milliseconds\nLIMIT 1;\t----- bird -----\tformula_1",
    "960": "SELECT AVG(fastestLapSpeed) AS average_fastest_lap_speed\nFROM results\nWHERE raceId = (\n    SELECT raceId\n    FROM races\n    WHERE year = 2009 AND name = 'Spanish Grand Prix'\n);\t----- bird -----\tformula_1",
    "961": "SELECT r.name AS raceName, r.year\nFROM results res\nJOIN races r ON res.raceId = r.raceId\nWHERE res.milliseconds IS NOT NULL\n  AND res.milliseconds = (\n    SELECT MIN(milliseconds)\n    FROM results\n    WHERE milliseconds IS NOT NULL\n)\nLIMIT 1;\t----- bird -----\tformula_1",
    "962": "SELECT\n  100.0 * COUNT(DISTINCT CASE WHEN strftime('%Y', drivers.dob) < '1985' AND results.laps > 50 THEN drivers.driverId END) \n  / COUNT(DISTINCT drivers.driverId) AS percentage\nFROM\n  drivers\nJOIN\n  results ON drivers.driverId = results.driverId\nJOIN\n  races ON results.raceId = races.raceId\nWHERE\n  races.year BETWEEN 2000 AND 2005;\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(DISTINCT d.driverId) AS french_drivers_with_fast_lap\nFROM drivers d\nJOIN lapTimes l ON d.driverId = l.driverId\nWHERE d.nationality = 'French'\n  AND l.milliseconds < 120000;\t----- bird -----\tformula_1",
    "964": "SELECT code\nFROM drivers\nWHERE nationality = 'America';\t----- bird -----\tformula_1",
    "965": "SELECT raceId\nFROM races\nWHERE year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(DISTINCT driverId) AS num_participants\nFROM results\nWHERE raceId = 18;\t----- bird -----\tformula_1",
    "967": "SELECT \n    driverId,\n    code,\n    dob,\n    nationality,\n    strftime('%Y', 'now') - strftime('%Y', dob) AS age\nFROM \n    drivers\nWHERE \n    nationality IN ('Dutch', 'Netherlandic') OR nationality IS NULL\nORDER BY \n    age ASC\nLIMIT 3;\t----- bird -----\tformula_1",
    "968": "SELECT driverRef\nFROM drivers\nWHERE forename = 'Robert' AND surname = 'Kubica';\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(*) AS british_drivers_1980\nFROM drivers\nWHERE nationality = 'British'\n  AND strftime('%Y', dob) = '1980';\t----- bird -----\tformula_1",
    "970": "SELECT \n    d.driverId,\n    d.forename || ' ' || d.surname AS driverName,\n    MIN(lt.time) AS earliestLapTime\nFROM \n    drivers d\nJOIN \n    lapTimes lt ON d.driverId = lt.driverId\nWHERE \n    d.nationality = 'German'\n    AND strftime('%Y', d.dob) BETWEEN '1980' AND '1990'\nGROUP BY \n    d.driverId, d.forename, d.surname\nORDER BY \n    earliestLapTime\nLIMIT 3;\t----- bird -----\tformula_1",
    "971": "SELECT driverRef\nFROM drivers\nWHERE nationality = 'German'\n  AND dob = (\n    SELECT MIN(dob)\n    FROM drivers\n    WHERE nationality = 'German'\n  );\t----- bird -----\tformula_1",
    "972": "SELECT d.driverId, d.code\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE strftime('%Y', d.dob) = '1971'\n  AND r.fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
    "973": "SELECT driverId\nFROM drivers\nWHERE nationality = 'Spanish' AND year(dob) < 1982;\t----- bird -----\tformula_1",
    "974": "SELECT r.year\nFROM lapTimes l\nJOIN races r ON l.raceId = r.raceId\nWHERE l.milliseconds = (\n    SELECT MIN(milliseconds)\n    FROM lapTimes\n    WHERE milliseconds IS NOT NULL\n);\t----- bird -----\tformula_1",
    "975": "SELECT r.year\nFROM lapTimes l\nJOIN races r ON l.raceId = r.raceId\nWHERE l.time = (\n    SELECT MAX(time)\n    FROM lapTimes\n);\t----- bird -----\tformula_1",
    "976": "SELECT driverId\nFROM lapTimes\nWHERE lap = 1\nORDER BY time ASC\nLIMIT 5;\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(*) AS disqualified_finishers\nFROM results\nWHERE raceId BETWEEN 50 AND 100\n  AND time IS NOT NULL  -- finisher\n  AND statusId = 2;     -- disqualified;\t----- bird -----\tformula_1",
    "978": "SELECT \n    name AS circuitName,\n    location,\n    lat,\n    lng\nFROM \n    circuits\nWHERE \n    country = 'Austria';\t----- bird -----\tformula_1",
    "979": "SELECT r.round AS raceNumber, COUNT(*) AS finisherCount\nFROM results res\nJOIN races r ON res.raceId = r.raceId\nWHERE res.time IS NOT NULL\nGROUP BY r.round\nORDER BY finisherCount DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "980": "SELECT \n    d.driverRef,\n    d.nationality,\n    d.dob AS birthday\nFROM \n    qualifying q\nJOIN \n    drivers d ON q.driverId = d.driverId\nWHERE \n    q.raceId = 23\n    AND q.q2 IS NOT NULL;\t----- bird -----\tformula_1",
    "981": "SELECT \n    r.year,\n    r.name AS raceName,\n    r.date AS raceDate,\n    r.time AS raceTime\nFROM (\n    SELECT \n        q.driverId\n    FROM qualifying q\n    JOIN drivers d ON q.driverId = d.driverId\n    WHERE d.dob = (SELECT MAX(dob) FROM drivers)\n    ORDER BY r.date\n    LIMIT 1\n) AS youngest_driver\nJOIN qualifying q ON youngest_driver.driverId = q.driverId\nJOIN races r ON q.raceId = r.raceId\nWHERE r.date = (\n    SELECT MIN(r2.date)\n    FROM qualifying q2\n    JOIN races r2 ON q2.raceId = r2.raceId\n    WHERE q2.driverId = youngest_driver.driverId\n);\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(DISTINCT d.driverId) AS american_puncture_drivers_count\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nJOIN status s ON r.statusId = s.statusId\nWHERE d.nationality = 'American'\n  AND s.status = 'Puncture';\t----- bird -----\tformula_1",
    "983": "SELECT constructorId, name, url\nFROM constructors\nWHERE nationality = 'Italian';\t----- bird -----\tformula_1",
    "984": "SELECT c.url\nFROM constructors c\nJOIN (\n    SELECT constructorId\n    FROM constructorStandings\n    WHERE position = 1\n    GROUP BY constructorId\n    ORDER BY COUNT(*) DESC\n    LIMIT 1\n) AS most_wins\nON c.constructorId = most_wins.constructorId;\t----- bird -----\tformula_1",
    "985": "SELECT raceId FROM races WHERE name = 'French Grand Prix';\t----- bird -----\tformula_1",
    "986": "SELECT \n    r.name AS raceName,\n    r.raceId,\n    l.milliseconds\nFROM \n    lapTimes l\nJOIN \n    races r ON l.raceId = r.raceId\nWHERE \n    l.lap = 1\nORDER BY \n    l.milliseconds ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "987": "SELECT AVG(fastestLapTime) AS averageFastestLapTime\nFROM (\n    SELECT l.driverId, MIN(l.milliseconds) AS fastestLapTime\n    FROM lapTimes l\n    JOIN results r ON l.driverId = r.driverId AND l.raceId = r.raceId\n    WHERE r.raceId = (\n        SELECT raceId\n        FROM races\n        WHERE year = 2006 AND name = 'United States Grand Prix'\n    )\n    AND r.positionOrder < 11\n    GROUP BY l.driverId\n);\t----- bird -----\tformula_1",
    "988": "SELECT \n    d.driverId,\n    d.forename || ' ' || d.surname AS fullName,\n    d.dob,\n    AVG(p.duration) AS avgPitStopDuration\nFROM \n    drivers d\nJOIN \n    pitStops p ON d.driverId = p.driverId\nWHERE \n    d.nationality = 'German'\n    AND strftime('%Y', d.dob) BETWEEN '1980' AND '1985'\nGROUP BY \n    d.driverId, d.forename, d.surname, d.dob\nORDER BY \n    avgPitStopDuration ASC\nLIMIT 3;\t----- bird -----\tformula_1",
    "989": "SELECT \n    d.forename || ' ' || d.surname AS driverName,\n    r.time AS finishTime\nFROM \n    results r\nJOIN \n    drivers d ON r.driverId = d.driverId\nJOIN \n    races ra ON r.raceId = ra.raceId\nWHERE \n    ra.year = 2008\n    AND ra.name = 'Canadian Grand Prix'\n    AND r.positionOrder = 1;\t----- bird -----\tformula_1",
    "990": "SELECT \n    c.constructorRef,\n    c.url\nFROM \n    races r\nJOIN \n    results res ON r.raceId = res.raceId\nJOIN \n    constructors c ON res.constructorId = c.constructorId\nWHERE \n    r.year = 2009\n    AND r.name = 'Singapore Grand Prix'\n    AND res.position = 1;\t----- bird -----\tformula_1",
    "991": "SELECT \n    forename, \n    surname, \n    dob\nFROM \n    drivers\nWHERE \n    nationality = 'Austrian'\n    AND strftime('%Y', dob) BETWEEN '1981' AND '1991';\t----- bird -----\tformula_1",
    "992": "SELECT \n    forename || ' ' || surname AS fullName,\n    url,\n    dob\nFROM \n    drivers\nWHERE \n    nationality = 'German'\n    AND strftime('%Y', dob) BETWEEN '1971' AND '1985'\nORDER BY \n    dob DESC;\t----- bird -----\tformula_1",
    "993": "SELECT \n    location, \n    country, \n    lat, \n    lng \nFROM \n    circuits \nWHERE \n    name = 'Hungaroring';\t----- bird -----\tformula_1",
    "994": "SELECT \n    c.constructorId,\n    c.name AS constructorName,\n    c.nationality,\n    SUM(cr.points) AS totalPoints\nFROM \n    constructorResults cr\nJOIN \n    races r ON cr.raceId = r.raceId\nJOIN \n    constructors c ON cr.constructorId = c.constructorId\nWHERE \n    r.name = 'Monaco Grand Prix'\n    AND r.year BETWEEN 1980 AND 2010\nGROUP BY \n    c.constructorId, c.name, c.nationality\nORDER BY \n    totalPoints DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "995": "SELECT AVG(r.points) AS average_score\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nJOIN races ra ON r.raceId = ra.raceId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\n  AND ra.name = 'Turkish Grand Prix';\t----- bird -----\tformula_1",
    "996": "SELECT AVG(race_count) AS average_races_per_year\nFROM (\n    SELECT year, COUNT(*) AS race_count\n    FROM races\n    WHERE date BETWEEN '2000-01-01' AND '2010-12-31'\n    GROUP BY year\n);\t----- bird -----\tformula_1",
    "997": "SELECT nationality, COUNT(*) AS driver_count\nFROM drivers\nGROUP BY nationality\nORDER BY driver_count DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "998": "SELECT driverId, SUM(points) AS totalPoints\nFROM driverStandings\nGROUP BY driverId;\t----- bird -----\tformula_1",
    "999": "SELECT r.name AS race_name, MAX(res.fastestLapSpeed) AS fastest_speed\nFROM results res\nJOIN races r ON res.raceId = r.raceId\nWHERE res.fastestLapSpeed IS NOT NULL\nGROUP BY r.name\nORDER BY fastest_speed DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "1000": "SELECT \n    c.location || ', ' || c.country AS full_location\nFROM \n    races r\nJOIN \n    circuits c ON r.circuitId = c.circuitId\nWHERE \n    r.date = (SELECT MAX(date) FROM races);\t----- bird -----\tformula_1",
    "1001": "SELECT d.forename || ' ' || d.surname AS fullName\nFROM qualifying q\nJOIN races r ON q.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nJOIN drivers d ON q.driverId = d.driverId\nWHERE c.name = 'Marina Bay Street Circuit'\n  AND r.year = 2008\n  AND q.position = 1\n  AND q.raceId = (\n    SELECT raceId\n    FROM races\n    WHERE year = 2008\n      AND circuitId = (\n        SELECT circuitId\n        FROM circuits\n        WHERE name = 'Marina Bay Street Circuit'\n      )\n  )\nORDER BY q.q3 ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "1002": "SELECT driverId, forename, surname, dob, nationality\nFROM drivers\nORDER BY dob DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "1003": "SELECT \n    r.driverId,\n    COUNT(*) AS accident_count\nFROM \n    results r\nJOIN \n    status s ON r.statusId = s.statusId\nJOIN \n    races ra ON r.raceId = ra.raceId\nWHERE \n    ra.name = 'Canadian Grand Prix'\n    AND s.status = 'Retired'  -- assuming statusId = 3 corresponds to 'Retired' (accident)\nGROUP BY \n    r.driverId\nORDER BY \n    accident_count DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "1004": "SELECT driverId, forename, surname\n   FROM drivers\n   ORDER BY dob ASC\n   LIMIT 1;\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(duration) AS longestPitStopDuration\nFROM pitStops;\t----- bird -----\tformula_1",
    "1006": "SELECT \n    l.milliseconds AS fastestLapTimeInMS,\n    l.time AS fastestLapTime,\n    r.name AS raceName,\n    c.name AS circuitName\nFROM \n    lapTimes l\nJOIN \n    races r ON l.raceId = r.raceId\nJOIN \n    circuits c ON r.circuitId = c.circuitId\nWHERE \n    l.milliseconds = (\n        SELECT MIN(milliseconds)\n        FROM lapTimes\n        WHERE milliseconds IS NOT NULL\n    );\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(duration) AS longest_pit_stop_time\nFROM pitStops\nWHERE driverId = (\n    SELECT driverId\n    FROM drivers\n    WHERE forename = 'Lewis' AND surname = 'Hamilton'\n);\t----- bird -----\tformula_1",
    "1008": "SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1009": "SELECT \n    d.driverId,\n    d.forename || ' ' || d.surname AS driverName,\n    p.stop,\n    p.duration\nFROM \n    pitStops p\nJOIN \n    races r ON p.raceId = r.raceId\nJOIN \n    drivers d ON p.driverId = d.driverId\nWHERE \n    r.year = 2011\n    AND r.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "1010": "SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1011": "SELECT MIN(milliseconds) AS shortest_time\n   FROM lapTimes;\t----- bird -----\tformula_1",
    "1012": "SELECT c.name AS circuitName, c.location, c.country\nFROM circuits c\nJOIN races r ON c.circuitId = r.circuitId\nJOIN lapTimes l ON r.raceId = l.raceId\nJOIN drivers d ON l.driverId = d.driverId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\n  AND l.milliseconds = (\n    SELECT MIN(milliseconds)\n    FROM lapTimes\n    WHERE driverId = d.driverId\n  );\t----- bird -----\tformula_1",
    "1013": "SELECT circuitId FROM circuits WHERE name = 'Red Bull Ring';\t----- bird -----\tformula_1",
    "1014": "SELECT \n    c.name AS circuitName,\n    d.forename || ' ' || d.surname AS driverName,\n    l.time AS fastestLapTime,\n    l.milliseconds AS fastestLapMilliseconds\nFROM circuits c\nJOIN lapTimes l ON c.circuitId = l.raceId\nJOIN races r ON l.raceId = r.raceId\nJOIN drivers d ON l.driverId = d.driverId\nWHERE c.country = 'Italy'\n  AND l.milliseconds = (\n      SELECT MIN(milliseconds)\n      FROM lapTimes\n      WHERE raceId = r.raceId\n  )\nGROUP BY c.circuitId;\t----- bird -----\tformula_1",
    "1015": "SELECT circuitId FROM circuits WHERE name = 'Austrian Grand Prix';\t----- bird -----\tformula_1",
    "1016": "SELECT circuitId FROM circuits WHERE name = 'Austrian Grand Prix';\t----- bird -----\tformula_1",
    "1017": "SELECT c.name AS circuitName, c.lat, c.lng\nFROM circuits c\nJOIN races r ON c.circuitId = r.circuitId\nJOIN lapTimes l ON r.raceId = l.raceId\nWHERE l.time = '1:29.488';\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(p.milliseconds) AS averagePitStopTime\nFROM pitStops p\nJOIN drivers d ON p.driverId = d.driverId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(l.milliseconds) AS average_lap_time\nFROM lapTimes l\nJOIN races r ON l.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.country = 'Italy';\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id\nFROM Player_Attributes\nWHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1021": "SELECT player_name, height\nFROM Player\nWHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1022": "SELECT preferred_foot\nFROM Player_Attributes\nWHERE potential = (\n    SELECT MIN(potential)\n    FROM Player_Attributes\n);\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(*) AS player_count\nFROM Player_Attributes\nWHERE overall_rating BETWEEN 60 AND 65\n  AND defensive_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1024": "SELECT \n    player_api_id,\n    MAX(crossing) AS max_crossing\nFROM \n    Player_Attributes\nGROUP BY \n    player_api_id\nORDER BY \n    max_crossing DESC\nLIMIT 5;\t----- bird -----\teuropean_football_2",
    "1025": "SELECT \n    l.name AS league_name,\n    SUM(m.home_team_goal + m.away_team_goal) AS total_goals\nFROM \n    Match m\nJOIN \n    League l ON m.league_id = l.id\nWHERE \n    m.season = '2015/2016'\nGROUP BY \n    m.league_id\nORDER BY \n    total_goals DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "1026": "SELECT \n    home_team_api_id,\n    COUNT(*) AS home_losses\nFROM \n    Match\nWHERE \n    season = '2015/2016'\n    AND home_team_goal < away_team_goal\nGROUP BY \n    home_team_api_id\nORDER BY \n    home_losses ASC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "1027": "SELECT \n    p.player_name,\n    SUM(pa.penalties) AS total_penalties\nFROM \n    Player p\nJOIN \n    Player_Attributes pa ON p.player_api_id = pa.player_api_id\nGROUP BY \n    p.player_api_id, p.player_name\nORDER BY \n    total_penalties DESC\nLIMIT 10;\t----- bird -----\teuropean_football_2",
    "1028": "SELECT id FROM League WHERE name = 'Scotland Premier League';\t----- bird -----\teuropean_football_2",
    "1029": "SELECT buildUpPlaySpeed\nFROM Team_Attributes\nORDER BY buildUpPlaySpeed DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "1030": "SELECT \n    L.name AS league_name,\n    COUNT(*) AS draw_count\nFROM \n    Match M\nJOIN \n    League L ON M.league_id = L.id\nWHERE \n    M.season = '2015/2016'\n    AND M.home_team_goal = M.away_team_goal\nGROUP BY \n    L.id\nORDER BY \n    draw_count DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "1031": "SELECT \n    p.player_name,\n    (strftime('%Y', 'now') - strftime('%Y', p.birthday)) AS age\nFROM \n    Player p\nJOIN \n    Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE \n    pa.sprint_speed >= 97\n    AND strftime('%Y', pa.date) BETWEEN '2013' AND '2015';\t----- bird -----\teuropean_football_2",
    "1032": "SELECT \n    L.name AS league_name,\n    COUNT(M.id) AS total_matches\nFROM \n    Match M\nJOIN \n    League L ON M.league_id = L.id\nGROUP BY \n    M.league_id\nORDER BY \n    total_matches DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) AS average_height\nFROM Player\nWHERE birthday >= '1990-01-01' AND birthday < '1996-01-01';\t----- bird -----\teuropean_football_2",
    "1034": "SELECT player_api_id\nFROM Player_Attributes\nWHERE date LIKE '2010-%'\n  AND overall_rating = (\n    SELECT MAX(overall_rating)\n    FROM Player_Attributes\n    WHERE date LIKE '2010-%'\n  );\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id\nFROM Team_Attributes\nWHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "1036": "SELECT DISTINCT T.team_long_name\nFROM Team T\nJOIN Team_Attributes TA ON T.team_api_id = TA.team_api_id\nWHERE strftime('%Y', TA.date) = '2012'\n  AND TA.buildUpPlayPassing > (\n      SELECT AVG(TA2.buildUpPlayPassing)\n      FROM Team_Attributes TA2\n      WHERE strftime('%Y', TA2.date) = '2012'\n        AND TA2.buildUpPlayPassing IS NOT NULL\n  );\t----- bird -----\teuropean_football_2",
    "1037": "SELECT\n    100.0 * COUNT(CASE WHEN pa.preferred_foot = 'left' THEN 1 END) / COUNT(*) AS percentage_left_foot\nFROM\n    Player p\nJOIN\n    Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE\n    strftime('%Y', p.birthday) BETWEEN '1987' AND '1992';\t----- bird -----\teuropean_football_2",
    "1038": "SELECT \n    l.name AS league_name,\n    SUM(m.home_team_goal + m.away_team_goal) AS total_goals\nFROM \n    Match m\nJOIN \n    League l ON m.league_id = l.id\nGROUP BY \n    l.name\nORDER BY \n    total_goals ASC\nLIMIT 5;\t----- bird -----\teuropean_football_2",
    "1039": "SELECT player_api_id\nFROM Player\nWHERE player_name = 'Ahmed Samir Farag';\t----- bird -----\teuropean_football_2",
    "1040": "SELECT \n    p.player_name,\n    AVG(pa.heading_accuracy) AS avg_heading_accuracy\nFROM \n    Player p\nJOIN \n    Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE \n    p.height > 180\nGROUP BY \n    p.player_api_id, p.player_name\nORDER BY \n    avg_heading_accuracy DESC\nLIMIT 10;\t----- bird -----\teuropean_football_2",
    "1041": "SELECT \n    t.team_long_name,\n    ta.chanceCreationPassing\nFROM \n    Team_Attributes ta\nJOIN \n    Team t ON ta.team_api_id = t.team_api_id\nWHERE \n    ta.buildUpPlayDribblingClass = 'Normal'\n    AND ta.date >= '2014-01-01'\n    AND ta.date <= '2014-01-31'\n    AND ta.chanceCreationPassing < (\n        SELECT \n            AVG(chanceCreationPassing)\n        FROM \n            Team_Attributes\n        WHERE \n            buildUpPlayDribblingClass = 'Normal'\n            AND date >= '2014-01-01'\n            AND date <= '2014-01-31'\n    )\nORDER BY \n    ta.chanceCreationPassing DESC;\t----- bird -----\teuropean_football_2",
    "1042": "SELECT l.name AS league_name\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE m.season = '2009/2010'\nGROUP BY m.league_id\nHAVING AVG(m.home_team_goal) > AVG(m.away_team_goal);\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name\nFROM Team\nWHERE team_long_name = 'Queens Park Rangers';\t----- bird -----\teuropean_football_2",
    "1044": "SELECT player_name, birthday\nFROM Player\nWHERE strftime('%Y', birthday) = '1970'\n  AND strftime('%m', birthday) = '10';\t----- bird -----\teuropean_football_2",
    "1045": "SELECT pa.attacking_work_rate\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Franco Zennaro';\t----- bird -----\teuropean_football_2",
    "1046": "SELECT team_api_id, team_fifa_api_id\nFROM Team\nWHERE team_long_name = 'ADO Den Haag';\t----- bird -----\teuropean_football_2",
    "1047": "SELECT pa.heading_accuracy\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Francois Affolter'\n  AND pa.date = '2014-09-18 00:00:00';\t----- bird -----\teuropean_football_2",
    "1048": "SELECT pa.overall_rating\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Gabriel Tamas'\n  AND strftime('%Y', pa.date) = '2011';\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(*) AS match_count\nFROM Match\nWHERE season = '2015/2016'\n  AND league_id = (\n      SELECT id\n      FROM League\n      WHERE name = 'Scotland Premier League'\n  );\t----- bird -----\teuropean_football_2",
    "1050": "SELECT pa.preferred_foot\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.birthday = (\n    SELECT MAX(birthday)\n    FROM Player\n);\t----- bird -----\teuropean_football_2",
    "1051": "SELECT pa.player_api_id, p.player_name, pa.potential\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.potential = (\n    SELECT MAX(potential)\n    FROM Player_Attributes\n);\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*) AS left_footed_light_players\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.weight < 130\n  AND pa.preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1053": "SELECT DISTINCT t.team_short_name\nFROM Team_Attributes ta\nJOIN Team t ON ta.team_api_id = t.team_api_id\nWHERE ta.chanceCreationPassingClass = 'Risky';\t----- bird -----\teuropean_football_2",
    "1054": "SELECT player_api_id\nFROM Player\nWHERE player_name = 'David Wilson';\t----- bird -----\teuropean_football_2",
    "1055": "SELECT p.birthday\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.overall_rating = (\n    SELECT MAX(overall_rating)\n    FROM Player_Attributes\n);\t----- bird -----\teuropean_football_2",
    "1056": "SELECT l.name\nFROM League l\nJOIN Country c ON l.country_id = c.id\nWHERE c.name = 'Netherlands';\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(Match.home_team_goal) AS average_home_team_goal\nFROM Match\nJOIN Country ON Match.country_id = Country.id\nWHERE Country.name = 'Poland'\n  AND Match.season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "1058": "SELECT \n    pa.player_api_id,\n    p.player_name,\n    AVG(pa.finishing) AS avg_finishing\nFROM \n    Player_Attributes pa\nJOIN \n    Player p ON pa.player_api_id = p.player_api_id\nWHERE \n    p.height BETWEEN \n        (SELECT MIN(height) FROM Player) \n        AND \n        (SELECT MAX(height) FROM Player)\nGROUP BY \n    pa.player_api_id, p.player_name\nORDER BY \n    avg_finishing DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name\nFROM Player\nWHERE height > 180;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) AS players_born_after_1990\nFROM Player\nWHERE strftime('%Y', birthday) > '1990';\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) AS adam_players_over_170\nFROM Player\nWHERE player_name LIKE 'Adam%'\n  AND weight > 170;\t----- bird -----\teuropean_football_2",
    "1062": "SELECT DISTINCT p.player_name\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.overall_rating > 80\n  AND strftime('%Y', pa.date) BETWEEN '2008' AND '2010';\t----- bird -----\teuropean_football_2",
    "1063": "SELECT pa.potential\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Aaron Doran';\t----- bird -----\teuropean_football_2",
    "1064": "SELECT \n    p.player_api_id,\n    p.player_name,\n    pa.preferred_foot\nFROM \n    Player p\nJOIN \n    Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE \n    pa.preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1065": "SELECT t.team_long_name\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE ta.buildUpPlaySpeedClass = 'Fast';\t----- bird -----\teuropean_football_2",
    "1066": "SELECT team_api_id\nFROM Team\nWHERE team_short_name = 'CLB';\t----- bird -----\teuropean_football_2",
    "1067": "SELECT DISTINCT T.team_short_name\nFROM Team_Attributes TA\nJOIN Team T ON TA.team_api_id = T.team_api_id\nWHERE TA.buildUpPlayPassing > 70;\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(t2.overall_rating) AS average_overall_rating\nFROM Player t1\nJOIN Player_Attributes t2 ON t1.player_api_id = t2.player_api_id\nWHERE t1.height > 170\n  AND strftime('%Y', t2.date) BETWEEN '2010' AND '2015';\t----- bird -----\teuropean_football_2",
    "1069": "SELECT player_name, height\nFROM Player\nWHERE height = (SELECT MIN(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1070": "SELECT c.name AS country_name\nFROM League l\nJOIN Country c ON l.country_id = c.id\nWHERE l.name = 'Italy Serie A';\t----- bird -----\teuropean_football_2",
    "1071": "SELECT t.team_short_name\nFROM Team_Attributes ta\nJOIN Team t ON ta.team_api_id = t.team_api_id\nWHERE ta.buildUpPlaySpeed = 31\n  AND ta.buildUpPlayDribbling = 53\n  AND ta.buildUpPlayPassing = 32;\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(overall_rating) AS average_overall_rating\nFROM Player_Attributes\nWHERE player_api_id = (\n    SELECT player_api_id\n    FROM Player\n    WHERE player_name = 'Aaron Doran'\n);\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(*) AS match_count\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Germany 1. Bundesliga'\n  AND Match.date BETWEEN '2008-08-01' AND '2008-10-31';\t----- bird -----\teuropean_football_2",
    "1074": "SELECT DISTINCT Team.team_short_name\nFROM Match\nJOIN Team ON Match.home_team_api_id = Team.team_api_id\nWHERE Match.home_team_goal = 10;\t----- bird -----\teuropean_football_2",
    "1075": "SELECT \n    pa.id AS attribute_id,\n    p.player_api_id,\n    p.player_name,\n    pa.balance,\n    pa.potential\nFROM \n    Player_Attributes pa\nJOIN \n    Player p ON pa.player_api_id = p.player_api_id\nWHERE \n    pa.potential = 61\n    AND pa.balance = (\n        SELECT MAX(balance)\n        FROM Player_Attributes\n        WHERE potential = 61\n    );\t----- bird -----\teuropean_football_2",
    "1076": "SELECT \n    AVG(CASE WHEN p.player_name = 'Abdou Diallo' THEN pa.ball_control END) -\n    AVG(CASE WHEN p.player_name = 'Aaron Appindangoye' THEN pa.ball_control END) AS ball_control_diff\nFROM \n    Player p\nJOIN \n    Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE \n    p.player_name IN ('Abdou Diallo', 'Aaron Appindangoye');\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name\nFROM Team\nWHERE team_short_name = 'GEN';\t----- bird -----\teuropean_football_2",
    "1078": "SELECT player_name, birthday\nFROM Player\nWHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada');\t----- bird -----\teuropean_football_2",
    "1079": "SELECT player_name, height\nFROM Player\nWHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*) AS count\nFROM Player_Attributes\nWHERE preferred_foot = 'left'\n  AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1081": "SELECT c.name AS country_name\nFROM League l\nJOIN Country c ON l.country_id = c.id\nWHERE l.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "1082": "SELECT League.name\nFROM League\nJOIN Country ON League.country_id = Country.id\nWHERE Country.name = 'Germany';\t----- bird -----\teuropean_football_2",
    "1083": "SELECT \n    p.player_name,\n    pa.overall_rating\nFROM \n    Player p\nJOIN \n    Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE \n    pa.overall_rating = (\n        SELECT MAX(overall_rating) FROM Player_Attributes\n    );\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(DISTINCT pa.player_api_id)\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE strftime('%Y', p.birthday) < '1986'\n  AND pa.defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1085": "SELECT \n    p.player_name,\n    pa.crossing\nFROM \n    Player p\nJOIN \n    Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE \n    p.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone')\nORDER BY \n    pa.crossing DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "1086": "SELECT pa.heading_accuracy\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Ariel Borysiuk';\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(*) AS num_players\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.height > 180 AND pa.volleys > 70;\t----- bird -----\teuropean_football_2",
    "1088": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.volleys > 70 AND pa.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) AS match_count\nFROM Match\nJOIN Country ON Match.country_id = Country.id\nWHERE Match.season = '2008/2009'\n  AND Country.name = 'Belgium';\t----- bird -----\teuropean_football_2",
    "1090": "SELECT pa.long_passing\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.birthday = (\n    SELECT MIN(birthday)\n    FROM Player\n);\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(*) AS match_count\nFROM Match\nJOIN League ON Match.league_id = League.id\nWHERE League.name = 'Belgium Jupiler League'\n  AND SUBSTR(Match.date, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "1092": "SELECT l.name AS league_name\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE m.season = '2008/2009'\nGROUP BY l.id\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(pa.overall_rating) AS average_overall_rating\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE strftime('%Y', p.birthday) < '1986';\t----- bird -----\teuropean_football_2",
    "1094": "SELECT \n    100.0 * \n    ((\n        (SELECT overall_rating \n         FROM Player_Attributes \n         JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id \n         WHERE Player.player_name = 'Ariel Borysiuk' \n         LIMIT 1) \n        - \n        (SELECT overall_rating \n         FROM Player_Attributes \n         JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id \n         WHERE Player.player_name = 'Paulin Puel' \n         LIMIT 1)\n    ) / \n    (SELECT overall_rating \n     FROM Player_Attributes \n     JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id \n     WHERE Player.player_name = 'Paulin Puel' \n     LIMIT 1)\n    ) AS percentage_increase;\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(TA.buildUpPlaySpeed) AS average_build_up_play_speed\nFROM Team_Attributes TA\nJOIN Team T ON TA.team_api_id = T.team_api_id\nWHERE T.team_long_name = 'Heart of Midlothian';\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) AS average_overall_rating\nFROM Player_Attributes T1\nJOIN Player T2 ON T1.player_api_id = T2.player_api_id\nWHERE T2.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(pa.crossing) AS total_crossing_score\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Aaron Lennox';\t----- bird -----\teuropean_football_2",
    "1098": "SELECT \n    chanceCreationPassing,\n    chanceCreationPassingClass\nFROM \n    Team_Attributes\nWHERE \n    team_api_id = (\n        SELECT team_api_id\n        FROM Team\n        WHERE team_long_name = 'Ajax'\n    )\n    AND chanceCreationPassing = (\n        SELECT MAX(chanceCreationPassing)\n        FROM Team_Attributes\n        WHERE team_api_id = (\n            SELECT team_api_id\n            FROM Team\n            WHERE team_long_name = 'Ajax'\n        )\n    );\t----- bird -----\teuropean_football_2",
    "1099": "SELECT pa.preferred_foot\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Abdou Diallo';\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(Player_Attributes.overall_rating) AS highest_overall_rating\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE Player.player_name = 'Dorlan Pabon';\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(away_team_goal) AS average_away_goals\nFROM Match\nWHERE away_team_api_id = (\n    SELECT team_api_id\n    FROM Team\n    WHERE team_long_name = 'Parma'\n)\nAND country_id = (\n    SELECT id\n    FROM Country\n    WHERE name = 'Italy'\n);\t----- bird -----\teuropean_football_2",
    "1102": "SELECT p.player_name\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.overall_rating = 77\n  AND pa.date LIKE '2016-06-23%'\nORDER BY p.birthday ASC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "1103": "SELECT pa.overall_rating\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Aaron Mooy'\n  AND pa.date = '2016-02-04';\t----- bird -----\teuropean_football_2",
    "1104": "SELECT potential\nFROM Player_Attributes\nWHERE player_api_id = (\n    SELECT player_api_id\n    FROM Player\n    WHERE player_name = 'Francesco Parravicini'\n)\nAND date = '2010-08-30 00:00:00';\t----- bird -----\teuropean_football_2",
    "1105": "SELECT pa.attacking_work_rate\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Francesco Migliore'\n  AND pa.date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "1106": "SELECT pa.defensive_work_rate\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Kevin Berigaud'\n  AND pa.date = '2013-02-22';\t----- bird -----\teuropean_football_2",
    "1107": "SELECT pa.date\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Kevin Constant'\n  AND pa.crossing = (\n    SELECT MAX(crossing)\n    FROM Player_Attributes\n    WHERE player_api_id = p.player_api_id\n)\nORDER BY pa.date\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "1108": "SELECT t.buildUpPlaySpeedClass\nFROM Team_Attributes t\nJOIN Team tm ON t.team_api_id = tm.team_api_id\nWHERE tm.team_long_name = 'Willem II'\n  AND t.date = '2012-02-22';\t----- bird -----\teuropean_football_2",
    "1109": "SELECT t.buildUpPlayDribblingClass\nFROM Team_Attributes t\nJOIN Team tm ON t.team_api_id = tm.team_api_id\nWHERE tm.team_short_name = 'LEI'\n  AND t.date = '2015-09-10 00:00:00';\t----- bird -----\teuropean_football_2",
    "1110": "SELECT t.buildUpPlayPassingClass\nFROM Team_Attributes t\nJOIN Team tm ON t.team_api_id = tm.team_api_id\nWHERE tm.team_long_name = 'FC Lorient'\n  AND t.date = '2010-02-22';\t----- bird -----\teuropean_football_2",
    "1111": "SELECT t.team_long_name, ta.date, ta.chanceCreationPassingClass\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE t.team_long_name = 'PEC Zwolle'\n  AND ta.date = '2013-09-20 00:00:00';\t----- bird -----\teuropean_football_2",
    "1112": "SELECT t.team_long_name, ta.date, ta.chanceCreationCrossingClass\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE t.team_long_name = 'Hull City'\n  AND ta.date = '2010-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1113": "SELECT t.team_long_name, ta.defenceAggressionClass\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE t.team_long_name = 'Hannover 96'\n  AND ta.date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(pa.overall_rating) AS average_overall_rating\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Marko Arnautovic'\n  AND pa.date BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "1115": "SELECT\n    ( ( ld.overall_rating - jb.overall_rating ) / ld.overall_rating ) * 100 AS percentage_difference\nFROM\n    Player_Attributes ld\nJOIN\n    Player p1 ON ld.player_api_id = p1.player_api_id\nJOIN\n    Player_Attributes jb\nJOIN\n    Player p2 ON jb.player_api_id = p2.player_api_id\nWHERE\n    p1.player_name = 'Landon Donovan'\n    AND p2.player_name = 'Jordan Bowery'\n    AND ld.date = '2013/7/12'\n    AND jb.date = '2013/7/12';\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name, height\nFROM Player\nWHERE height = (\n    SELECT MAX(height)\n    FROM Player\n);\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id\nFROM Player\nWHERE weight IS NOT NULL\nORDER BY weight DESC\nLIMIT 10;\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name\nFROM Player\nWHERE strftime('%Y', 'now') - strftime('%Y', birthday) >= 35;\t----- bird -----\teuropean_football_2",
    "1119": "SELECT COUNT(*) AS home_goals_by_aaron_lennon\nFROM Match\nWHERE \n    (home_player_1 = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR\n     home_player_2 = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR\n     home_player_3 = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR\n     home_player_4 = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR\n     home_player_5 = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR\n     home_player_6 = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR\n     home_player_7 = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR\n     home_player_8 = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR\n     home_player_9 = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR\n     home_player_10 = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR\n     home_player_11 = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon'))\n  AND EXISTS (\n    SELECT 1\n    FROM json_each(Match.goal)\n    WHERE json_each.value = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon')\n  );\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(M.away_team_goal) AS total_away_goals\nFROM Match M\nWHERE \n    M.away_player_1 IN (\n        SELECT P.player_api_id\n        FROM Player P\n        WHERE P.player_name IN ('Daan Smith', 'Filipe Ferreira')\n    )\n    OR M.away_player_2 IN (\n        SELECT P.player_api_id\n        FROM Player P\n        WHERE P.player_name IN ('Daan Smith', 'Filipe Ferreira')\n    )\n    OR M.away_player_3 IN (\n        SELECT P.player_api_id\n        FROM Player P\n        WHERE P.player_name IN ('Daan Smith', 'Filipe Ferreira')\n    )\n    OR M.away_player_4 IN (\n        SELECT P.player_api_id\n        FROM Player P\n        WHERE P.player_name IN ('Daan Smith', 'Filipe Ferreira')\n    )\n    OR M.away_player_5 IN (\n        SELECT P.player_api_id\n        FROM Player P\n        WHERE P.player_name IN ('Daan Smith', 'Filipe Ferreira')\n    )\n    OR M.away_player_6 IN (\n        SELECT P.player_api_id\n        FROM Player P\n        WHERE P.player_name IN ('Daan Smith', 'Filipe Ferreira')\n    )\n    OR M.away_player_7 IN (\n        SELECT P.player_api_id\n        FROM Player P\n        WHERE P.player_name IN ('Daan Smith', 'Filipe Ferreira')\n    )\n    OR M.away_player_8 IN (\n        SELECT P.player_api_id\n        FROM Player P\n        WHERE P.player_name IN ('Daan Smith', 'Filipe Ferreira')\n    )\n    OR M.away_player_9 IN (\n        SELECT P.player_api_id\n        FROM Player P\n        WHERE P.player_name IN ('Daan Smith', 'Filipe Ferreira')\n    )\n    OR M.away_player_10 IN (\n        SELECT P.player_api_id\n        FROM Player P\n        WHERE P.player_name IN ('Daan Smith', 'Filipe Ferreira')\n    )\n    OR M.away_player_11 IN (\n        SELECT P.player_api_id\n        FROM Player P\n        WHERE P.player_name IN ('Daan Smith', 'Filipe Ferreira')\n    );\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(m.home_team_goal) AS total_home_goals_by_young_players\nFROM Match m\nWHERE \n    (\n        SELECT COUNT(*) \n        FROM Player p1 \n        WHERE p1.player_api_id = m.home_player_1 \n          AND julianday('now') - julianday(p1.birthday) <= 30 * 365\n    ) > 0\n    OR\n    (\n        SELECT COUNT(*) \n        FROM Player p2 \n        WHERE p2.player_api_id = m.home_player_2 \n          AND julianday('now') - julianday(p2.birthday) <= 30 * 365\n    ) > 0\n    OR\n    (\n        SELECT COUNT(*) \n        FROM Player p3 \n        WHERE p3.player_api_id = m.home_player_3 \n          AND julianday('now') - julianday(p3.birthday) <= 30 * 365\n    ) > 0\n    OR\n    (\n        SELECT COUNT(*) \n        FROM Player p4 \n        WHERE p4.player_api_id = m.home_player_4 \n          AND julianday('now') - julianday(p4.birthday) <= 30 * 365\n    ) > 0\n    OR\n    (\n        SELECT COUNT(*) \n        FROM Player p5 \n        WHERE p5.player_api_id = m.home_player_5 \n          AND julianday('now') - julianday(p5.birthday) <= 30 * 365\n    ) > 0\n    OR\n    (\n        SELECT COUNT(*) \n        FROM Player p6 \n        WHERE p6.player_api_id = m.home_player_6 \n          AND julianday('now') - julianday(p6.birthday) <= 30 * 365\n    ) > 0\n    OR\n    (\n        SELECT COUNT(*) \n        FROM Player p7 \n        WHERE p7.player_api_id = m.home_player_7 \n          AND julianday('now') - julianday(p7.birthday) <= 30 * 365\n    ) > 0\n    OR\n    (\n        SELECT COUNT(*) \n        FROM Player p8 \n        WHERE p8.player_api_id = m.home_player_8 \n          AND julianday('now') - julianday(p8.birthday) <= 30 * 365\n    ) > 0\n    OR\n    (\n        SELECT COUNT(*) \n        FROM Player p9 \n        WHERE p9.player_api_id = m.home_player_9 \n          AND julianday('now') - julianday(p9.birthday) <= 30 * 365\n    ) > 0\n    OR\n    (\n        SELECT COUNT(*) \n        FROM Player p10 \n        WHERE p10.player_api_id = m.home_player_10 \n          AND julianday('now') - julianday(p10.birthday) <= 30 * 365\n    ) > 0\n    OR\n    (\n        SELECT COUNT(*) \n        FROM Player p11 \n        WHERE p11.player_api_id = m.home_player_11 \n          AND julianday('now') - julianday(p11.birthday) <= 30 * 365\n    ) > 0;\t----- bird -----\teuropean_football_2",
    "1122": "SELECT p.player_name\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.overall_rating = (\n    SELECT MAX(overall_rating)\n    FROM Player_Attributes\n);\t----- bird -----\teuropean_football_2",
    "1123": "SELECT p.player_name, pa.potential\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.potential = (\n    SELECT MAX(potential)\n    FROM Player_Attributes\n);\t----- bird -----\teuropean_football_2",
    "1124": "SELECT DISTINCT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1125": "SELECT p.player_name\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.finishing = 1\nORDER BY julianday('now') - julianday(p.birthday) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "1126": "SELECT DISTINCT p.player_name\nFROM Player p\nWHERE p.player_api_id IN (\n    SELECT home_player_1 FROM Match WHERE league_id IN (\n        SELECT id FROM League WHERE country_id = (\n            SELECT id FROM Country WHERE name = 'Belgium'\n        )\n    )\n    UNION\n    SELECT home_player_2 FROM Match WHERE league_id IN (\n        SELECT id FROM League WHERE country_id = (\n            SELECT id FROM Country WHERE name = 'Belgium'\n        )\n    )\n    UNION\n    SELECT home_player_3 FROM Match WHERE league_id IN (\n        SELECT id FROM League WHERE country_id = (\n            SELECT id FROM Country WHERE name = 'Belgium'\n        )\n    )\n    UNION\n    SELECT home_player_4 FROM Match WHERE league_id IN (\n        SELECT id FROM League WHERE country_id = (\n            SELECT id FROM Country WHERE name = 'Belgium'\n        )\n    )\n    UNION\n    SELECT home_player_5 FROM Match WHERE league_id IN (\n        SELECT id FROM League WHERE country_id = (\n            SELECT id FROM Country WHERE name = 'Belgium'\n        )\n    )\n    UNION\n    SELECT home_player_6 FROM Match WHERE league_id IN (\n        SELECT id FROM League WHERE country_id = (\n            SELECT id FROM Country WHERE name = 'Belgium'\n        )\n    )\n    UNION\n    SELECT home_player_7 FROM Match WHERE league_id IN (\n        SELECT id FROM League WHERE country_id = (\n            SELECT id FROM Country WHERE name = 'Belgium'\n        )\n    )\n    UNION\n    SELECT home_player_8 FROM Match WHERE league_id IN (\n        SELECT id FROM League WHERE country_id = (\n            SELECT id FROM Country WHERE name = 'Belgium'\n        )\n    )\n    UNION\n    SELECT home_player_9 FROM Match WHERE league_id IN (\n        SELECT id FROM League WHERE country_id = (\n            SELECT id FROM Country WHERE name = 'Belgium'\n        )\n    )\n    UNION\n    SELECT home_player_10 FROM Match WHERE league_id IN (\n        SELECT id FROM League WHERE country_id = (\n            SELECT id FROM Country WHERE name = 'Belgium'\n        )\n    )\n    UNION\n    SELECT home_player_11 FROM Match WHERE league_id IN (\n        SELECT id FROM League WHERE country_id = (\n            SELECT id FROM Country WHERE name = 'Belgium'\n        )\n    )\n    UNION\n    SELECT away_player_1 FROM Match WHERE league_id IN (\n        SELECT id FROM League WHERE country_id = (\n            SELECT id FROM Country WHERE name = 'Belgium'\n        )\n    )\n    UNION\n    SELECT away_player_2 FROM Match WHERE league_id IN (\n        SELECT id FROM League WHERE country_id = (\n            SELECT id FROM Country WHERE name = 'Belgium'\n        )\n    )\n    UNION\n    SELECT away_player_3 FROM Match WHERE league_id IN (\n        SELECT id FROM League WHERE country_id = (\n            SELECT id FROM Country WHERE name = 'Belgium'\n        )\n    )\n    UNION\n    SELECT away_player_4 FROM Match WHERE league_id IN (\n        SELECT id FROM League WHERE country_id = (\n            SELECT id FROM Country WHERE name = 'Belgium'\n        )\n    )\n    UNION\n    SELECT away_player_5 FROM Match WHERE league_id IN (\n        SELECT id FROM League WHERE country_id = (\n            SELECT id FROM Country WHERE name = 'Belgium'\n        )\n    )\n    UNION\n    SELECT away_player_6 FROM Match WHERE league_id IN (\n        SELECT id FROM League WHERE country_id = (\n            SELECT id FROM Country WHERE name = 'Belgium'\n        )\n    )\n    UNION\n    SELECT away_player_7 FROM Match WHERE league_id IN (\n        SELECT id FROM League WHERE country_id = (\n            SELECT id FROM Country WHERE name = 'Belgium'\n        )\n    )\n    UNION\n    SELECT away_player_8 FROM Match WHERE league_id IN (\n        SELECT id FROM League WHERE country_id = (\n            SELECT id FROM Country WHERE name = 'Belgium'\n        )\n    )\n    UNION\n    SELECT away_player_9 FROM Match WHERE league_id IN (\n        SELECT id FROM League WHERE country_id = (\n            SELECT id FROM Country WHERE name = 'Belgium'\n        )\n    )\n    UNION\n    SELECT away_player_10 FROM Match WHERE league_id IN (\n        SELECT id FROM League WHERE country_id = (\n            SELECT id FROM Country WHERE name = 'Belgium'\n        )\n    )\n    UNION\n    SELECT away_player_11 FROM Match WHERE league_id IN (\n        SELECT id FROM League WHERE country_id = (\n            SELECT id FROM Country WHERE name = 'Belgium'\n        )\n    )\n);\t----- bird -----\teuropean_football_2",
    "1127": "SELECT DISTINCT\n    p.player_name,\n    c.name AS country_name\nFROM\n    Player_Attributes pa\nJOIN\n    Player p ON pa.player_api_id = p.player_api_id\nJOIN\n    Match m ON p.player_api_id IN (\n        m.home_player_1, m.home_player_2, m.home_player_3, m.home_player_4, m.home_player_5,\n        m.home_player_6, m.home_player_7, m.home_player_8, m.home_player_9, m.home_player_10, m.home_player_11\n    )\nJOIN\n    Country c ON m.country_id = c.id\nWHERE\n    pa.vision >= 90;\t----- bird -----\teuropean_football_2",
    "1128": "SELECT \n    c.name AS country_name,\n    AVG(p.weight) AS average_weight\nFROM \n    Player p\nJOIN \n    Match m \n    ON p.player_api_id IN (\n        m.home_player_1, m.home_player_2, m.home_player_3, m.home_player_4, m.home_player_5,\n        m.home_player_6, m.home_player_7, m.home_player_8, m.home_player_9, m.home_player_10, m.home_player_11,\n        m.away_player_1, m.away_player_2, m.away_player_3, m.away_player_4, m.away_player_5,\n        m.away_player_6, m.away_player_7, m.away_player_8, m.away_player_9, m.away_player_10, m.away_player_11\n    )\nJOIN \n    League l ON m.league_id = l.id\nJOIN \n    Country c ON l.country_id = c.id\nGROUP BY \n    c.name\nORDER BY \n    average_weight DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "1129": "SELECT t.team_long_name\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE ta.buildUpPlaySpeedClass = 'Slow';\t----- bird -----\teuropean_football_2",
    "1130": "SELECT t.team_short_name\nFROM Team_Attributes ta\nJOIN Team t ON ta.team_api_id = t.team_api_id\nWHERE ta.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(p.height) AS average_height\nFROM Player p\nJOIN Team t ON p.player_api_id IN (\n    SELECT home_player_1, home_player_2, home_player_3, home_player_4, home_player_5,\n           home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11\n    FROM Match m\n    JOIN Team t ON m.home_team_api_id = t.team_api_id\n    JOIN League l ON m.league_id = l.id\n    JOIN Country c ON l.country_id = c.id\n    WHERE c.name = 'Italy'\n    UNION\n    SELECT away_player_1, away_player_2, away_player_3, away_player_4, away_player_5,\n           away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11\n    FROM Match m\n    JOIN Team t ON m.away_team_api_id = t.team_api_id\n    JOIN League l ON m.league_id = l.id\n    JOIN Country c ON l.country_id = c.id\n    WHERE c.name = 'Italy'\n);\t----- bird -----\teuropean_football_2",
    "1132": "SELECT player_name\nFROM Player\nWHERE height > 180\nORDER BY player_name ASC\nLIMIT 3;\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) AS aaron_players_count\nFROM Player\nWHERE player_name LIKE 'Aaron%'\n  AND birthday > '1990';\t----- bird -----\teuropean_football_2",
    "1134": "SELECT id, player_api_id FROM Player WHERE id IN (6, 23);\t----- bird -----\teuropean_football_2",
    "1135": "SELECT player_api_id\nFROM Player_Attributes\nWHERE preferred_foot = 'right'\nORDER BY potential ASC\nLIMIT 5;\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(*) AS num_players\nFROM Player_Attributes\nWHERE crossing = (\n    SELECT MAX(crossing)\n    FROM Player_Attributes\n)\nAND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1137": "SELECT \n    100.0 * \n    (SELECT COUNT(*) \n     FROM Player_Attributes \n     WHERE strength > 80 AND stamina > 80) / \n    (SELECT COUNT(*) \n     FROM Player_Attributes) AS percentage;\t----- bird -----\teuropean_football_2",
    "1138": "SELECT c.name AS country_name\nFROM League l\nJOIN Country c ON l.country_id = c.id\nWHERE l.name = 'Poland Ekstraklasa';\t----- bird -----\teuropean_football_2",
    "1139": "SELECT \n    home_team_goal, \n    away_team_goal\nFROM \n    Match\nJOIN \n    League ON Match.league_id = League.id\nWHERE \n    League.name = 'Belgium Jupiler League' \n    AND Match.date LIKE '2008-09-24%';\t----- bird -----\teuropean_football_2",
    "1140": "SELECT \n    pa.sprint_speed,\n    pa.agility,\n    pa.acceleration\nFROM \n    Player p\nJOIN \n    Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE \n    p.player_name = 'Alexis Blin'\nORDER BY \n    pa.date DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "1141": "SELECT ta.buildUpPlaySpeedClass\nFROM Team t\nJOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE t.team_long_name = 'KSV Cercle Brugge';\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) AS num_games\nFROM Match\nWHERE league_id = (\n    SELECT id\n    FROM League\n    WHERE name = 'Serie A'\n      AND country_id = (\n          SELECT id\n          FROM Country\n          WHERE name = 'Italy'\n      )\n)\n  AND season = '2015/2016';\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(home_team_goal) AS highest_home_score\nFROM Match\nWHERE league_id = (\n    SELECT id\n    FROM League\n    WHERE name = 'Netherlands Eredivisie'\n);\t----- bird -----\teuropean_football_2",
    "1144": "SELECT pa.finishing, pa.curve\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.weight = (\n    SELECT MAX(weight)\n    FROM Player\n);\t----- bird -----\teuropean_football_2",
    "1145": "SELECT \n    l.name AS league_name,\n    COUNT(m.id) AS total_games\nFROM \n    Match m\nJOIN \n    League l ON m.league_id = l.id\nWHERE \n    m.season = '2015/2016'\nGROUP BY \n    l.name\nORDER BY \n    total_games DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "1146": "SELECT t.team_long_name\nFROM Match m\nJOIN Team t ON m.away_team_api_id = t.team_api_id\nGROUP BY m.away_team_api_id\nORDER BY SUM(m.away_team_goal) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "1147": "SELECT pa.overall_rating, p.player_name\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.overall_rating = (\n    SELECT MAX(overall_rating)\n    FROM Player_Attributes\n)\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "1148": "SELECT \n    100.0 * COUNT(CASE WHEN p.height < 180 AND pa.overall_rating > 70 THEN 1 END) / COUNT(*) AS percentage\nFROM \n    Player p\nJOIN \n    Player_Attributes pa ON p.player_api_id = pa.player_api_id;\t----- bird -----\teuropean_football_2",
    "1149": "SELECT\n    (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '+') AS InpatientMaleCount,\n    (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '-') AS OutpatientMaleCount,\n    ROUND(\n        100.0 * \n        ( (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '+') - \n          (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '-') ) / \n        NULLIF(\n            (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '+') + \n            (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Admission = '-'), \n            0\n        ),\n        2\n    ) AS PercentageDeviation;\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT \n    100.0 * \n    (\n        SELECT COUNT(*) \n        FROM Patient \n        WHERE SEX = 'F' AND strftime('%Y', Birthday) > '1930'\n    ) / \n    (\n        SELECT COUNT(*) \n        FROM Patient \n        WHERE SEX = 'F'\n    ) AS Percentage;\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT \n    100.0 * COUNT(CASE WHEN Admission = '+' THEN 1 END) / COUNT(*) AS InpatientPercentage\nFROM Patient\nWHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31';\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT\n    CAST(\n        SUM(CASE WHEN Admission = '-' AND Diagnosis = 'SLE' THEN 1 ELSE 0 END) AS REAL\n    ) / NULLIF(\n        SUM(CASE WHEN Admission = '+' AND Diagnosis = 'SLE' THEN 1 ELSE 0 END), 0\n    ) AS OutpatientToInpatientRatio\nFROM Patient;\t----- bird -----\tthrombosis_prediction",
    "1153": "with. List all the date of laboratory tests done for this patient.**\n\nWe need to:\n\n1. **Find the diagnosis** of the patient with ID `'30609'` from the `Patient` table.\n2. **List all the dates** of laboratory tests for the same patient from the `Laboratory` table.\n\n---\n\n### \u2705 Step-by-step SQL Query:\n\n1. **Get the diagnosis** from the `Patient` table.\n2. **Get all laboratory test dates** from the `Laboratory` table for the same patient.\n\nHere is the SQL query to achieve this:\n\n```sql\n-- Get the diagnosis for patient '30609'\nSELECT Diagnosis\nFROM Patient\nWHERE ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT \n    P.SEX,\n    P.Birthday,\n    E.`Examination Date`,\n    E.Symptoms\nFROM \n    Patient P\nLEFT JOIN \n    Examination E ON P.ID = E.ID\nWHERE \n    P.ID = 163109;\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT \n    p.ID, \n    p.SEX, \n    p.Birthday\nFROM \n    Patient p\nJOIN \n    Laboratory l ON p.ID = l.ID\nWHERE \n    l.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT \n    p.ID,\n    (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) AS Age\nFROM \n    Patient p\nJOIN \n    Examination e ON p.ID = e.ID\nWHERE \n    e.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT \n    p.ID,\n    p.SEX,\n    p.Diagnosis\nFROM \n    Patient p\nJOIN \n    Examination e ON p.ID = e.ID\nWHERE \n    e.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT DISTINCT P.ID\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE YEAR(P.Birthday) = 1937\n  AND L.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT \n    p.ID, \n    p.SEX, \n    p.Diagnosis\nFROM \n    Patient p\nJOIN \n    Laboratory l ON p.ID = l.ID\nWHERE \n    l.ALB < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT \n    100.0 * COUNT(CASE WHEN p.SEX = 'F' AND (l.TP < 6.0 OR l.TP > 8.5) THEN 1 END) / \n    COUNT(CASE WHEN p.SEX = 'F' THEN 1 END) AS percentage_female_abnormal_TP\nFROM \n    Patient p\nLEFT JOIN \n    Laboratory l ON p.ID = l.ID;\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(e.`aCL IgG`) AS Average_aCL_IgG\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE p.Admission = '+'\n  AND (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) >= 50;\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(*) AS Female_Patients_Count\nFROM Patient\nWHERE SEX = 'F'\n  AND strftime('%Y', Description) = '1997'\n  AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(strftime('%Y', `First Date`) - strftime('%Y', Birthday)) AS YoungestAge\nFROM Patient\nWHERE `First Date` IS NOT NULL\n  AND Birthday IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(DISTINCT e.ID) AS Female_Patients_With_Serious_Thrombosis_1997\nFROM Examination e\nJOIN Patient p ON e.ID = p.ID\nWHERE e.Thrombosis = 1\n  AND strftime('%Y', e.`Examination Date`) = '1997'\n  AND p.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT \n    MAX(YEAR(P.Birthday)) - MIN(YEAR(P.Birthday)) AS AgeGap\nFROM \n    Patient P\nJOIN \n    Laboratory L ON P.ID = L.ID\nWHERE \n    L.TG >= 200;\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT \n    E.Symptoms, \n    E.Diagnosis\nFROM \n    Patient P\nJOIN \n    Examination E ON P.ID = E.ID\nWHERE \n    P.Birthday = (SELECT MAX(Birthday) FROM Patient)\n    AND E.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT \n    COUNT(DISTINCT p.ID) / 12 AS AverageMalePatientsTestedPerMonth\nFROM \n    Patient p\nJOIN \n    Laboratory l ON p.ID = l.ID\nWHERE \n    p.SEX = 'M'\n    AND l.Date BETWEEN '1998-01-01' AND '1998-12-31';\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT\n    L.Date AS LabDate,\n    (strftime('%Y', P.`First Date`) - strftime('%Y', P.Birthday)) AS AgeAtAdmission\nFROM\n    Patient P\nJOIN\n    Laboratory L ON P.ID = L.ID\nWHERE\n    P.Diagnosis = 'SJS'\n    AND P.Birthday = (\n        SELECT MIN(Birthday)\n        FROM Patient\n        WHERE Diagnosis = 'SJS'\n    )\nORDER BY\n    L.Date\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT\n    CAST(\n        SUM(CASE WHEN p.SEX = 'M' AND l.UA <= 8.0 THEN 1 ELSE 0 END) AS REAL\n    ) / NULLIF(\n        SUM(CASE WHEN p.SEX = 'F' AND l.UA <= 6.5 THEN 1 ELSE 0 END), 0\n    ) AS MaleToFemaleRatio\nFROM\n    Patient p\nJOIN\n    Laboratory l ON p.ID = l.ID;\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(*) AS PatientsDelayedExamination\nFROM (\n    SELECT p.ID\n    FROM Patient p\n    JOIN Examination e ON p.ID = e.ID\n    GROUP BY p.ID\n    HAVING strftime('%Y', MIN(e.\"Examination Date\")) - strftime('%Y', p.\"First Date\") >= 1\n) AS delayed;\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(DISTINCT e.ID) AS UnderagePatientsCount\nFROM Examination e\nJOIN Patient p ON e.ID = p.ID\nWHERE strftime('%Y', e.`Examination Date`) BETWEEN '1990' AND '1993'\n  AND strftime('%Y', p.Birthday) < '18';\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(DISTINCT P.ID) AS MalePatientsWithElevatedTBIL\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.SEX = 'M' AND L.`T-BIL` >= 2.0;\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT Diagnosis, COUNT(*) AS Count\nFROM Examination\nWHERE `Examination Date` BETWEEN '1985-01-01' AND '1995-12-31'\nGROUP BY Diagnosis\nORDER BY Count DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(\n    CAST(\n        (strftime('%Y', '1999-01-01') - strftime('%Y', Patient.Birthday)) \n        - \n        CASE \n            WHEN strftime('%m-%d', Patient.Birthday) > '12-31' THEN 1\n            ELSE 0\n        END\n    AS INTEGER)\n) AS AverageAge1999\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE Laboratory.Date BETWEEN '1991-10-01' AND '1991-10-31';\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT \n    E.ID AS PatientID,\n    (strftime('%Y', E.`Examination Date`) - strftime('%Y', P.Birthday)) AS Age,\n    E.Diagnosis AS DoctorDiagnosis\nFROM \n    Laboratory L\nJOIN \n    Patient P ON L.ID = P.ID\nJOIN \n    Examination E ON L.ID = E.ID\nWHERE \n    L.HGB = (\n        SELECT MAX(HGB)\n        FROM Laboratory\n        WHERE HGB IS NOT NULL\n    );\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT ANA\nFROM Examination\nWHERE ID = 3605340\n  AND `Examination Date` = '1996-12-02';\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT \n    ID,\n    Date,\n    `T-CHO`,\n    CASE \n        WHEN `T-CHO` < 250 THEN 'Normal'\n        ELSE 'Not Normal'\n    END AS Cholesterol_Status\nFROM \n    Laboratory\nWHERE \n    ID = 2927464\n    AND Date = '1995-09-04';\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT p.SEX\nFROM Patient p\nWHERE p.Diagnosis = 'AORTITIS'\nORDER BY p.`First Date` ASC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT ID FROM Patient WHERE Diagnosis = 'SLE' AND Description = '1994-02-19';\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT P.SEX\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.Date = '1992-06-12'\n  AND L.GPT = 9;\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT \n    strftime('%Y', '1991-10-21') - strftime('%Y', p.Birthday) AS Age\nFROM \n    Laboratory l\nJOIN \n    Patient p ON l.ID = p.ID\nWHERE \n    l.Date = '1991-10-21'\n    AND l.UA = 8.4;\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(*) AS Total_Lab_Tests\nFROM Laboratory\nWHERE ID = (\n    SELECT ID\n    FROM Patient\n    WHERE `First Date` = '1991-06-13'\n      AND Diagnosis = 'SJS'\n)\n  AND strftime('%Y', Date) = '1995';\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT p.Diagnosis\nFROM Patient p\nWHERE p.ID = (\n    SELECT e.ID\n    FROM Examination e\n    WHERE e.Diagnosis = 'SLE'\n      AND e.`Examination Date` = '1997-01-27'\n);\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT E.Symptoms\nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nWHERE P.Birthday = '1959-03-01'\n  AND E.`Examination Date` = '1993-09-27';\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT\n    (SUM(CASE WHEN Date LIKE '1981-11-%' THEN T_CHO END) - \n     SUM(CASE WHEN Date LIKE '1981-12-%' THEN T_CHO END)) * 100.0 /\n    SUM(CASE WHEN Date LIKE '1981-11-%' THEN T_CHO END) AS DecreaseRate\nFROM\n    Laboratory\nWHERE\n    ID = (\n        SELECT ID\n        FROM Patient\n        WHERE Birthday = '1959-02-18'\n    )\n    AND Date BETWEEN '1981-11-01' AND '1981-12-31';\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT ID\nFROM Patient\nWHERE Diagnosis = 'Behcet';\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT DISTINCT ID\nFROM Laboratory\nWHERE Date BETWEEN '1987-07-06' AND '1996-01-31'\n  AND GPT > 30\n  AND ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT ID\nFROM Patient\nWHERE SEX = 'F'\n  AND strftime('%Y', Birthday) = '1964'\n  AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(*) AS PatientCount\nFROM Examination\nWHERE Thrombosis = 2\n  AND `ANA Pattern` = 'S'\n  AND `aCL IgM` > 1.2 * (\n      SELECT AVG(`aCL IgM`)\n      FROM Examination\n      WHERE `aCL IgM` IS NOT NULL\n  );\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT\n    100.0 * COUNT(CASE WHEN `U-PRO` > 0 AND `U-PRO` < 30 AND UA <= 6.5 THEN 1 END) \n    / COUNT(CASE WHEN `U-PRO` > 0 AND `U-PRO` < 30 THEN 1 END) AS percentage\nFROM\n    Laboratory;\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT \n    100.0 * COUNT(CASE WHEN Diagnosis = 'BEHCET' THEN 1 END) / COUNT(*) AS percentage\nFROM Patient\nWHERE SEX = 'M'\n  AND strftime('%Y', `First Date`) = '1981';\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT DISTINCT P.ID\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.Admission = '-'\n  AND L.Date LIKE '1991-10%'\n  AND L.`T-BIL` < 2.0;\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.`ANA Pattern` != 'P'\n  AND p.SEX = 'F'\n  AND p.Birthday BETWEEN '1980-01-01' AND '1989-12-31';\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT p.SEX\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nJOIN Laboratory l ON p.ID = l.ID\nWHERE e.Diagnosis = 'PSS'\n  AND l.CRP > '2'\n  AND l.CRE = 1\n  AND l.LDH = 123;\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(L.ALB) AS AverageAlbumin\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.SEX = 'F'\n  AND P.Diagnosis = 'SLE'\n  AND L.PLT > 400;\t----- bird -----\tthrombosis_prediction",
    "1196": "WITH RECURSIVE\n-- Step 1: Get all patients with SLE diagnosis\nSLE_Patients AS (\n    SELECT DISTINCT e.ID\n    FROM Examination e\n    WHERE e.Diagnosis = 'SLE'\n),\n\n-- Step 2: Get all symptoms for SLE patients\nSymptomsList AS (\n    SELECT e.Symptoms\n    FROM Examination e\n    JOIN SLE_Patients sp ON e.ID = sp.ID\n    WHERE e.Symptoms IS NOT NULL\n),\n\n-- Step 3: Split the Symptoms into individual values\nSplitSymptoms AS (\n    SELECT \n        SUBSTR(Symptoms, 1, INSTR(Symptoms || ',', ',') - 1) AS Symptom,\n        SUBSTR(Symptoms, INSTR(Symptoms || ',', ',') + 1) AS Remaining\n    FROM SymptomsList\n    UNION ALL\n    SELECT \n        SUBSTR(Remaining, 1, INSTR(Remaining || ',', ',') - 1),\n        SUBSTR(Remaining, INSTR(Remaining || ',', ',') + 1)\n    FROM SplitSymptoms\n    WHERE Remaining != ''\n),\n\n-- Step 4: Count the frequency of each symptom\nSymptomCounts AS (\n    SELECT \n        TRIM(Symptom) AS Symptom,\n        COUNT(*) AS Count\n    FROM SplitSymptoms\n    GROUP BY TRIM(Symptom)\n)\n\n-- Step 5: Find the most common symptom\nSELECT \n    Symptom,\n    Count\nFROM SymptomCounts\nORDER BY Count DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT Description, Diagnosis\nFROM Patient\nWHERE ID = 48473;\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(*) AS FemaleAPSCount\nFROM Patient\nWHERE SEX = 'F' AND Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT ID) AS PatientsOutsideNormalRange\nFROM Laboratory\nWHERE Date BETWEEN '1997-01-01' AND '1997-12-31'\n  AND (TP <= 6 OR TP >= 8.5);\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT\n    100.0 * COUNT(CASE WHEN Patient.Diagnosis LIKE '%SLE%' THEN 1 END) / COUNT(*) AS Proportion_SLE_Thrombocytopenia\nFROM\n    Patient\nJOIN\n    Laboratory ON Patient.ID = Laboratory.ID\nWHERE\n    Laboratory.PLT < 150000;\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT \n    100.0 * COUNT(CASE WHEN SEX = 'F' THEN 1 END) / COUNT(*) AS percentage_women\nFROM \n    Patient\nWHERE \n    YEAR(Birthday) = 1980\n    AND Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE p.SEX = 'M'\n  AND e.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31'\n  AND e.Diagnosis = 'Behcet'\n  AND p.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(DISTINCT p.ID) AS FemaleLowWBCCount\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'F' AND l.WBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT \n    JULIANDAY(e.`Examination Date`) - JULIANDAY(p.`First Date`) AS Days_Between\nFROM \n    Patient p\nJOIN \n    Examination e ON p.ID = e.ID\nWHERE \n    p.ID = 821298\nORDER BY \n    e.`Examination Date`\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT \n    p.ID,\n    p.SEX,\n    l.Date,\n    l.UA,\n    CASE\n        WHEN p.SEX = 'M' AND l.UA > 8.0 THEN 'Within Normal Range'\n        WHEN p.SEX = 'F' AND l.UA > 6.5 THEN 'Within Normal Range'\n        ELSE 'Outside Normal Range'\n    END AS UANormalStatus\nFROM \n    Patient p\nJOIN \n    Laboratory l ON p.ID = l.ID\nWHERE \n    p.ID = 57266;\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT Date\nFROM Laboratory\nWHERE ID = 48473\n  AND GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT \n    Patient.SEX,\n    Patient.Birthday\nFROM \n    Patient\nJOIN \n    Laboratory ON Patient.ID = Laboratory.ID\nWHERE \n    strftime('%Y', Laboratory.Date) = '1994'\n    AND Laboratory.GOT < 60;\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT DISTINCT p.ID\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M'\n  AND l.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT \n    P.ID,\n    P.Birthday,\n    P.Diagnosis\nFROM \n    Patient P\nJOIN \n    Laboratory L ON P.ID = L.ID\nWHERE \n    L.GPT > 60\nORDER BY \n    P.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) AS Average_LDH\nFROM Laboratory\nWHERE LDH < 500;\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT \n    p.ID,\n    (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) AS Age\nFROM \n    Patient p\nJOIN \n    Laboratory l ON p.ID = l.ID\nWHERE \n    l.LDH BETWEEN 600 AND 800;\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT DISTINCT p.Admission\nFROM Laboratory l\nJOIN Patient p ON l.ID = p.ID\nWHERE l.ALP < 300;\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT \n    p.ID,\n    l.ALP,\n    CASE \n        WHEN l.ALP < 300 THEN 'Yes'\n        ELSE 'No'\n    END AS Is_ALP_Normal\nFROM \n    Patient p\nJOIN \n    Laboratory l ON p.ID = l.ID\nWHERE \n    p.Birthday = '1982-04-01';\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT \n    p.ID,\n    p.SEX,\n    p.Birthday\nFROM \n    Patient p\nINNER JOIN \n    Laboratory l ON p.ID = l.ID\nWHERE \n    l.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT \n    P.ID AS PatientID,\n    L.Date AS LabDate,\n    L.TP,\n    (L.TP - 8.5) AS TP_Deviation\nFROM \n    Patient P\nJOIN \n    Laboratory L ON P.ID = L.ID\nWHERE \n    P.SEX = 'F'\n    AND L.TP > 8.5;\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT \n    P.ID,\n    P.SEX,\n    P.Birthday\nFROM \n    Patient P\nJOIN \n    Laboratory L ON P.ID = L.ID\nWHERE \n    P.SEX = 'M'\n    AND (L.ALB <= 3.5 OR L.ALB >= 5.5)\nORDER BY \n    P.Birthday DESC;\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT \n    p.ID,\n    l.ALB,\n    CASE \n        WHEN l.ALB BETWEEN 3.5 AND 5.5 THEN 'Within Normal Range'\n        ELSE 'Outside Normal Range'\n    END AS Albumin_Status\nFROM \n    Patient p\nJOIN \n    Laboratory l ON p.ID = l.ID\nWHERE \n    strftime('%Y', p.Birthday) = '1982';\t----- bird -----\tthrombosis_prediction",
    "1218": "with UA > 6.5**\n\nWe will:\n- Count the total number of **female patients** (from `Patient`)\n- Count the number of **female patients with UA > 6.5** (from `Laboratory` and `Patient`)\n\nThen calculate the **percentage** as:\n```sql\n(Count of females with UA > 6.5 / Total number of females) * 100\n```\n\n---\n\n### \u2705 Final SQL Query\n\n```sql\nSELECT \n    100.0 * COUNT(CASE WHEN p.SEX = 'F' AND l.UA > 6.5 THEN 1 END) / COUNT(CASE WHEN p.SEX = 'F' THEN 1 END) AS percentage_females_with_high_UA\nFROM \n    Patient p\nLEFT JOIN \n    Laboratory l ON p.ID = l.ID;\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(l.UA) AS Average_UA\nFROM Laboratory l\nJOIN Patient p ON l.ID = p.ID\nWHERE (l.Date = (\n    SELECT MAX(Date)\n    FROM Laboratory\n    WHERE ID = l.ID\n))\nAND (\n    (p.SEX = 'M' AND l.UA < 8.0) OR\n    (p.SEX = 'F' AND l.UA < 6.5)\n);\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT DISTINCT p.ID, p.SEX, p.Birthday\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT \n    p.ID,\n    p.SEX,\n    p.Birthday\nFROM \n    Patient p\nJOIN \n    Laboratory l ON p.ID = l.ID\nWHERE \n    p.Diagnosis = 'RA'\n    AND l.UN < 30;\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M' AND l.CRE >= 1.5;\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT \n    P.SEX,\n    COUNT(*) AS Count\nFROM \n    Patient P\nJOIN \n    Laboratory L ON P.ID = L.ID\nWHERE \n    L.CRE >= 1.5\nGROUP BY \n    P.SEX;\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT \n    p.ID,\n    p.SEX,\n    p.Birthday,\n    l.`T-BIL`\nFROM \n    Laboratory l\nJOIN \n    Patient p ON l.ID = p.ID\nWHERE \n    l.`T-BIL` = (\n        SELECT MAX(`T-BIL`) FROM Laboratory\n    );\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT \n    P.SEX,\n    GROUP_CONCAT(DISTINCT P.ID) AS PatientIDs\nFROM \n    Laboratory L\nJOIN \n    Patient P ON L.ID = P.ID\nWHERE \n    L.`T-BIL` >= 2.0\nGROUP BY \n    P.SEX;\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT \n    p.ID,\n    l.`T-CHO`\nFROM \n    Patient p\nJOIN \n    Laboratory l ON p.ID = l.ID\nWHERE \n    p.Birthday = (SELECT MIN(Birthday) FROM Patient)\n    AND l.`T-CHO` = (\n        SELECT MAX(`T-CHO`) \n        FROM Laboratory \n        WHERE ID = (\n            SELECT ID \n            FROM Patient \n            WHERE Birthday = (SELECT MIN(Birthday) FROM Patient)\n        )\n    );\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(strftime('%Y', 'now') - strftime('%Y', Birthday)) AS AverageAge\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M'\n  AND Laboratory.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT \n    P.ID AS PatientID,\n    P.Diagnosis\nFROM \n    Patient P\nJOIN \n    Laboratory L ON P.ID = L.ID\nWHERE \n    L.TG > 300;\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(DISTINCT p.ID) AS Count\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.TG >= 200\n  AND (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) > 50;\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT p.ID\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Admission = '-' AND l.CPK < 250;\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M'\n  AND strftime('%Y', p.Birthday) BETWEEN '1936' AND '1956'\n  AND l.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT \n    p.ID,\n    p.SEX,\n    (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) AS age\nFROM \n    Patient p\nJOIN \n    Laboratory l ON p.ID = l.ID\nWHERE \n    l.GLU >= 180\n    AND l.`T-CHO` < 250;\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT p.ID, l.GLU\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE YEAR(p.Description) = 1991\n  AND l.GLU < 180;\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT \n    P.ID,\n    P.SEX,\n    P.Birthday,\n    julianday('now') - julianday(P.Birthday) AS AgeInDays\nFROM \n    Patient P\nJOIN \n    Laboratory L ON P.ID = L.ID\nWHERE \n    L.WBC <= 3.5 OR L.WBC >= 9.0\nGROUP BY \n    P.SEX, P.ID\nORDER BY \n    P.SEX, AgeInDays ASC;\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT \n    p.ID,\n    (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) AS Age,\n    p.Diagnosis\nFROM \n    Patient p\nJOIN \n    Laboratory l ON p.ID = l.ID\nWHERE \n    l.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT \n    P.ID,\n    (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) AS Age,\n    L.RBC,\n    P.Admission\nFROM \n    Patient P\nJOIN \n    Laboratory L ON P.ID = L.ID\nWHERE \n    P.SEX = 'F'\n    AND (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) >= 50\n    AND (L.RBC <= 3.5 OR L.RBC >= 6.0);\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT DISTINCT p.ID, p.SEX\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Admission = '-' AND l.HGB < 10;\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT \n    p.ID,\n    p.SEX\nFROM \n    Patient p\nJOIN \n    Laboratory l ON p.ID = l.ID\nWHERE \n    p.Diagnosis = 'SLE'\n    AND l.HGB BETWEEN 10 AND 17\nORDER BY \n    p.Birthday ASC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT \n    p.ID,\n    (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) AS Age\nFROM \n    Patient p\nJOIN \n    Laboratory l ON p.ID = l.ID\nWHERE \n    l.HCT >= 52\nGROUP BY \n    p.ID\nHAVING \n    COUNT(l.Date) >= 2;\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) AS Average_Low_HCT\nFROM Laboratory\nWHERE Date LIKE '1991%'\n  AND HCT < 29;\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT\n    COUNT(CASE WHEN PLT < 100 THEN 1 END) AS low_platelet_count,\n    COUNT(CASE WHEN PLT > 400 THEN 1 END) AS high_platelet_count\nFROM (\n    SELECT DISTINCT ID\n    FROM Laboratory\n    WHERE PLT <= 100 OR PLT >= 400\n) AS abnormal_patients;\t----- bird -----\tthrombosis_prediction",
    "1242": "with normal platelet level.\"**\n\nWe need to:\n\n1. **Filter Laboratory records** where `Date` is in the year **1984**.\n2. **Join with Patient** to get the patient's `Birthday` and calculate their age.\n3. **Check if the patient is below 50 years old**.\n4. **Check if the platelet level (PLT)** is **between 100 and 400** (normal range).\n5. **Select the patient ID** (or other relevant fields) for those who meet all criteria.\n\n---\n\n### \u2705 Step-by-step SQL Construction:\n\n1. **Filter Laboratory records for 1984**:\n   ```sql\n   WHERE strftime('%Y', Laboratory.Date) = '1984'\n   ```\n\n2. **Join with Patient**:\n   ```sql\n   JOIN Patient ON Laboratory.ID = Patient.ID\n   ```\n\n3. **Calculate age**:\n   ```sql\n   WHERE strftime('%Y', 'now') - strftime('%Y', Patient.Birthday) < 50\n   ```\n\n4. **Check PLT is between 100 and 400**:\n   ```sql\n   AND Laboratory.PLT BETWEEN 100 AND 400\n   ```\n\n---\n\n### \u2705 Final SQL Query:\n\n```sql\nSELECT DISTINCT Patient.ID\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE strftime('%Y', Laboratory.Date) = '1984'\n  AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) < 50\n  AND Laboratory.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT \n    100.0 * \n    SUM(CASE WHEN p.SEX = 'F' AND l.PT >= 14 THEN 1 ELSE 0 END) / \n    NULLIF(SUM(CASE WHEN l.PT >= 14 THEN 1 ELSE 0 END), 0) AS percentage_female_with_abnormal_PT\nFROM \n    Patient p\nJOIN \n    Laboratory l ON p.ID = l.ID\nWHERE \n    strftime('%Y', 'now') - strftime('%Y', p.Birthday) > 55;\t----- bird -----\tthrombosis_prediction",
    "1244": "with prothrombin time (PT) level that are normal.**\n\nWe need to:\n\n1. **Filter patients** whose `First Date` is **after 1992**.\n2. **Filter patients** whose **PT (prothrombin time)** is **less than 14** (as per the external knowledge: \"normal PT level refers to PT < 14\").\n3. **Select the patient IDs** (or other relevant fields) that meet both conditions.\n\nWe will use the `Patient` and `Laboratory` tables for this.\n\n---\n\n### Step-by-step SQL Construction:\n\n1. **Filter patients by `First Date` > 1992**:\n   ```sql\n   Patient.`First Date` > '1992-12-31'\n   ```\n\n2. **Filter patients by `PT` < 14**:\n   - This is in the `Laboratory` table.\n   - We need to **join** `Patient` and `Laboratory` on `ID`.\n\n3. **Use `JOIN` to combine the two tables**.\n\n4. **Select the relevant patient IDs**.\n\n---\n\n### Final SQL Query:\n\n```sql\nSELECT DISTINCT P.ID\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.`First Date` > '1992-12-31'\n  AND L.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) AS Inactivated_APTT_Count\nFROM Examination e\nJOIN Laboratory l ON e.ID = l.ID AND e.`Examination Date` = l.Date\nWHERE e.`Examination Date` > '1997-01-01'\n  AND l.APTT >= 45;\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT e.ID) AS PatientsWithoutThrombosis\nFROM Examination e\nJOIN Laboratory l ON e.ID = l.ID\nWHERE l.APTT > 45\n  AND e.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(DISTINCT p.ID) AS Male_Patients_With_Abnormal_Fibrinogen\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M'\n  AND l.WBC > 3.5\n  AND l.WBC < 9.0\n  AND (l.FG <= 150 OR l.FG >= 450);\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT p.ID) AS AbnormalFG_Patients_BornAfter1980\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Birthday > '1980-01-01'\n  AND (l.FG < 150 OR l.FG > 450);\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.`U-PRO` >= 30;\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT DISTINCT L.ID\nFROM Laboratory L\nJOIN Patient P ON L.ID = P.ID\nWHERE L.`U-PRO` > 0 AND L.`U-PRO` < 30\n  AND P.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT ID)\nFROM Laboratory\nWHERE IGG >= 2000;\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(DISTINCT e.ID) AS PatientsWithSymptoms\nFROM Laboratory l\nJOIN Examination e ON l.ID = e.ID\nWHERE l.IGG > 900 AND l.IGG < 2000\n  AND e.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT p.Diagnosis\nFROM Patient p\nJOIN (\n    SELECT ID\n    FROM Laboratory\n    WHERE IGA BETWEEN 80 AND 500\n    ORDER BY IGA DESC\n    LIMIT 1\n) lab\nON p.ID = lab.ID;\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(DISTINCT p.ID) AS PatientCount\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE \n    p.`First Date` >= '1990-01-01'\n    AND l.IGA IS NOT NULL\n    AND l.IGA > 80\n    AND l.IGA < 500;\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT Diagnosis, COUNT(*) AS Count\nFROM (\n    SELECT DISTINCT p.ID\n    FROM Laboratory l\n    JOIN Patient p ON l.ID = p.ID\n    JOIN Examination e ON p.ID = e.ID\n    WHERE l.IGM <= 40 OR l.IGM >= 400\n) AS AbnormalIgM\nJOIN Examination e ON AbnormalIgM.ID = e.ID\nGROUP BY Diagnosis\nORDER BY Count DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(DISTINCT p.ID) AS PatientCount\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.CRP = '+'\n  AND p.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(DISTINCT p.ID) AS Count\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.CRE >= 1.5\n  AND (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) < 70;\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT p.ID) AS PatientCount\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.RF IN ('-', '+-')  -- Normal Rhuematoid Factor\n  AND l.KCT = '+';         -- Positive measure of coagulation;\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT DISTINCT p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Birthday > '1985-01-01'\n  AND l.RF IN ('-', '+-');\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT DISTINCT p.ID\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE (YEAR(CURRENT_DATE) - YEAR(p.Birthday)) > 60\n  AND l.RF < 20;\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(DISTINCT Laboratory.ID) AS PatientCount\nFROM Laboratory\nJOIN Examination ON Laboratory.ID = Examination.ID\nWHERE Laboratory.RF < 20\n  AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT e.ID)\nFROM Examination e\nJOIN Laboratory l ON e.ID = l.ID\nWHERE l.C3 > 35\n  AND e.`ANA Pattern` = 'P';\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT E.ID\nFROM Laboratory L\nJOIN Examination E ON L.ID = E.ID\nWHERE (L.HCT <= 29 OR L.HCT >= 52)\nORDER BY E.`aCL IgA` DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT e.ID) AS Normal_C4_Patients_With_Vein_Clot\nFROM Examination e\nJOIN Laboratory l ON e.ID = l.ID\nWHERE e.Thrombosis = 1\n  AND l.C4 > 10;\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT ID)\nFROM Patient\nWHERE RNP IN ('-', '+-') AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT p.Birthday\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.RNP NOT IN ('-', '+-')\nORDER BY p.Birthday DESC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(DISTINCT E.ID) AS PatientsWithoutThrombosis\nFROM Examination E\nJOIN Patient P ON E.ID = P.ID\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.SM IN ('-', '+-', '0')\n  AND E.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT p.ID\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.SM NOT IN ('negative', '0')\nORDER BY p.Birthday ASC\nLIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT ID;\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT p.ID) AS Female_Patients_Without_Symptoms\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.SC170 IN ('negative', '0')  -- Normal anti-scl70\n  AND p.SEX = 'F'                   -- Female\n  AND e.Symptoms IS NULL;           -- No symptoms;\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT p.ID) AS PatientCount\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.`First Date` IS NOT NULL\n  AND strftime('%Y', p.`First Date`) < '2000'\n  AND l.SSA IN ('-', '+-');\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT p.ID\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.SSA NOT IN ('negative', '0')\nORDER BY p.`First Date`\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT e.ID) AS PatientCount\nFROM Examination e\nJOIN Laboratory l ON e.ID = l.ID\nWHERE e.Diagnosis = 'SLE'\n  AND l.SSB IN ('negative', '0');\t----- bird -----\tthrombosis_prediction",
    "1274": "with normal `SSB`:**\n   ```sql\n   SSB IN ('negative', '0')\n   ```\n\n2. **Filter for patients who have `Symptoms` not null:**\n   ```sql\n   Symptoms IS NOT NULL\n   ```\n\n3. **Get the distinct `ID`s of such patients:**\n   ```sql\n   SELECT DISTINCT ID\n   FROM Examination\n   WHERE SSB IN ('negative', '0') AND Symptoms IS NOT NULL\n   ```\n\n4. **Count the number of such distinct patients:**\n   ```sql\n   SELECT COUNT(DISTINCT ID)\n   FROM Examination\n   WHERE SSB IN ('negative', '0') AND Symptoms IS NOT NULL\n   ```\n\n---\n\n### \u2705 Final SQL Query:\n\n```sql\nSELECT COUNT(DISTINCT ID)\nFROM Examination\nWHERE SSB IN ('negative', '0') AND Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(DISTINCT p.ID) AS MaleCount\nFROM Laboratory l\nJOIN Patient p ON l.ID = p.ID\nWHERE l.CENTROMEA IN ('-', '+-')\n  AND l.SSB IN ('-', '+-')\n  AND p.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT DISTINCT p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE CAST(l.DNA AS INTEGER) >= 8;\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT p.ID) AS Unique_Patients\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.DNA < 8\n  AND p.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(DISTINCT p.ID) AS Admitted_Patients_With_Normal_IGG\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.IGG BETWEEN 900 AND 2000\n  AND p.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT \n    100.0 * COUNT(CASE WHEN p.Diagnosis = 'SLE' THEN 1 END) / COUNT(*) AS percentage\nFROM \n    Laboratory l\nJOIN \n    Patient p ON l.ID = p.ID\nWHERE \n    l.GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(DISTINCT p.ID) AS MalePatientsWithNormalGOT\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M'\n  AND l.GOT < 60;\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MAX(P.Birthday) AS YoungestBirthday\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT P.Birthday\nFROM Patient P\nJOIN (\n    SELECT ID, MAX(GPT) AS MaxGPT\n    FROM Laboratory\n    WHERE GPT < 60\n    GROUP BY ID\n    ORDER BY MaxGPT DESC\n    LIMIT 3\n) L ON P.ID = L.ID;\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(DISTINCT p.ID) AS Male_Patients_With_Normal_GOT\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GOT < 60\n  AND p.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT MAX(LDH) AS MaxNormalLDH\nFROM Laboratory\nWHERE LDH < 500;\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT ID\n  FROM Patient\n  ORDER BY `First Date` DESC\n  LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(DISTINCT p.ID) AS AdmittedWithAbnormalALP\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.ALP >= 300\n  AND p.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(DISTINCT p.ID) AS Normal_ALP_Outpatients\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Admission = '-' AND l.ALP < 300;\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT DISTINCT P.Diagnosis\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(DISTINCT p.ID) AS NormalTP_SJS_Patients\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Diagnosis = 'SJS'\n  AND l.TP BETWEEN 6.0 AND 8.5;\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT E.`Examination Date`\nFROM Examination E\nJOIN Patient P ON E.ID = P.ID\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.ALB > 3.5 AND L.ALB < 5.5\n  AND L.ALB = (\n    SELECT MAX(ALB)\n    FROM Laboratory\n    WHERE ALB > 3.5 AND ALB < 5.5\n  );\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(DISTINCT p.ID) AS Male_Patients_With_Normal_ALB_and_TP\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M'\n  AND l.ALB > 3.5 AND l.ALB < 5.5\n  AND l.TP > 6.0 AND l.TP < 8.5;\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT \n    e.`aCL IgG`, \n    e.`aCL IgM`, \n    e.`aCL IgA`\nFROM \n    Patient p\nJOIN \n    Laboratory l ON p.ID = l.ID\nLEFT JOIN \n    Examination e ON p.ID = e.ID\nWHERE \n    p.SEX = 'F'\n    AND l.UA <= 6.50\n    AND l.UA = (\n        SELECT MAX(UA)\n        FROM Laboratory\n        WHERE UA <= 6.50\n    );\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(E.ANA) AS Max_ANA\nFROM Examination E\nJOIN Laboratory L ON E.ID = L.ID\nWHERE L.CRE < 1.5;\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT E.ID\nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.CRE < 1.5\n  AND E.`aCL IgA` = (\n    SELECT MAX(`aCL IgA`)\n    FROM Examination\n    WHERE `aCL IgA` IS NOT NULL\n  );\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT ID\n   FROM Laboratory\n   WHERE `T-BIL` >= 2.0;\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT MAX(`T-BIL`) AS max_t_bil\nFROM Laboratory\nWHERE `T-BIL` < 2.0;\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(DISTINCT e.ID) AS NegativeCoagulationCount\nFROM Examination e\nJOIN Laboratory l ON e.ID = l.ID\nWHERE l.`T-CHO` >= 250\n  AND e.KCT = '-';\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(DISTINCT e.ID) AS PatientCount\nFROM Laboratory l\nJOIN Examination e ON l.ID = e.ID\nWHERE l.`T-CHO` < 250\n  AND e.`ANA Pattern` = 'P';\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(DISTINCT e.ID) AS PatientCount\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nJOIN Examination e ON p.ID = e.ID\nWHERE l.TG < 200\n  AND e.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT P.Diagnosis\nFROM Patient P\nJOIN (\n    SELECT L.ID, L.TG\n    FROM Laboratory L\n    WHERE L.TG < 200\n    ORDER BY L.TG DESC\n    LIMIT 1\n) AS MaxTG\nON P.ID = MaxTG.ID;\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT DISTINCT e.ID\nFROM Examination e\nJOIN Laboratory l ON e.ID = l.ID\nWHERE e.Thrombosis = 0\n  AND l.CPK < 250;\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT e.ID) AS PositiveCoagulationCount\nFROM Examination e\nJOIN Laboratory l ON e.ID = l.ID\nWHERE l.CPK < 250\n  AND (\n    e.KCT = '+' \n    OR e.RVVT = '+' \n    OR e.LAC = '+'\n  );\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT p.Birthday\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GLU > 180\nORDER BY p.Birthday ASC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(DISTINCT e.ID) AS PatientCount\nFROM Examination e\nJOIN Laboratory l ON e.ID = l.ID\nWHERE l.GLU < 180\n  AND e.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(DISTINCT p.ID) AS NormalWBCAdmittedPatients\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Admission = '+'\n  AND l.WBC BETWEEN 3.5 AND 9.0;\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(DISTINCT p.ID) AS NormalWBC_SLE_Patients\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Diagnosis = 'SLE'\n  AND l.WBC BETWEEN 3.5 AND 9.0;\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT DISTINCT p.ID\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE (l.RBC <= 3.5 OR l.RBC >= 6.0)\n  AND p.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(DISTINCT p.ID) AS PatientCount\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.PLT > 100 AND l.PLT < 400\n  AND p.Diagnosis IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT \n    Patient.ID,\n    Laboratory.PLT\nFROM \n    Patient\nJOIN \n    Laboratory ON Patient.ID = Laboratory.ID\nWHERE \n    Patient.Diagnosis = 'MCTD'\n    AND Laboratory.PLT > 100\n    AND Laboratory.PLT < 400;\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(L.PT) AS Average_PT\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.SEX = 'M' AND L.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(DISTINCT e.ID) AS PatientCount\nFROM Examination e\nJOIN Laboratory l ON e.ID = l.ID\nWHERE e.Thrombosis IN (1, 2)\n  AND l.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT m.major_name\nFROM member\nJOIN major m ON member.link_to_major = m.major_id\nWHERE member.first_name = 'Angela' AND member.last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(*) AS engineering_students\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.college = 'College of Engineering';\t----- bird -----\tstudent_club",
    "1314": "SELECT \n    member.first_name || ' ' || member.last_name AS full_name\nFROM \n    member\nJOIN \n    major ON member.link_to_major = major.major_id\nWHERE \n    member.position = 'Student_Club'\n    AND major.department = 'Art and Design';\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(*) AS num_students\nFROM attendance\nJOIN member ON attendance.link_to_member = member.member_id\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'Women''s Soccer'\n  AND member.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1316": "SELECT DISTINCT m.phone\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'Women''s Soccer'\n  AND m.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(*) AS medium_tshirt_count\nFROM attendance\nJOIN member ON attendance.link_to_member = member.member_id\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'Women''s Soccer'\n  AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1318": "SELECT e.event_id, e.event_name, e.event_date, e.location, e.status\nFROM event e\nWHERE e.event_id = (\n    SELECT a.link_to_event\n    FROM attendance a\n    GROUP BY a.link_to_event\n    ORDER BY COUNT(a.link_to_member) DESC\n    LIMIT 1\n);\t----- bird -----\tstudent_club",
    "1319": "SELECT m.college\nFROM member\nJOIN major m ON member.link_to_major = m.major_id\nWHERE member.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1320": "SELECT e.event_name\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nJOIN member m ON a.link_to_member = m.member_id\nWHERE m.first_name = 'Maya' AND m.last_name = 'Mclean';\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(*) AS events_attended\nFROM attendance\nJOIN member ON attendance.link_to_member = member.member_id\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE member.first_name = 'Sacha'\n  AND member.last_name = 'Harrison'\n  AND event.event_name = 'Student_Club'\n  AND strftime('%Y', event.event_date) = '2019';\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(*) AS meeting_count\nFROM (\n    SELECT a.link_to_event\n    FROM attendance a\n    GROUP BY a.link_to_event\n    HAVING COUNT(a.link_to_member) > 10\n) AS large_events\nJOIN event e ON large_events.link_to_event = e.event_id\nWHERE e.type = 'Meeting';\t----- bird -----\tstudent_club",
    "1323": "SELECT link_to_event, COUNT(*) AS attendance_count\n   FROM attendance\n   GROUP BY link_to_event\n   HAVING COUNT(*) > 20;\t----- bird -----\tstudent_club",
    "1324": "SELECT AVG(attendee_count) AS average_attendance\nFROM (\n    SELECT e.event_id, COUNT(a.link_to_member) AS attendee_count\n    FROM event e\n    JOIN attendance a ON e.event_id = a.link_to_event\n    WHERE e.type = 'Meeting' AND strftime('%Y', e.event_date) = '2020'\n    GROUP BY e.event_id\n);\t----- bird -----\tstudent_club",
    "1325": "SELECT expense_description, cost\nFROM expense\nWHERE cost = (SELECT MAX(cost) FROM expense);\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(*) AS num_environmental_engineering_members\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1327": "SELECT m.first_name, m.last_name\nFROM attendance a\nJOIN member m ON a.link_to_member = m.member_id\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.event_name = 'Laugh Out Loud';\t----- bird -----\tstudent_club",
    "1328": "SELECT m.last_name\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE ma.major_name = 'Law and Constitutional Studies';\t----- bird -----\tstudent_club",
    "1329": "SELECT z.county\nFROM member m\nJOIN zip_code z ON m.zip = z.zip_code\nWHERE m.first_name = 'Sherri' AND m.last_name = 'Ramsey';\t----- bird -----\tstudent_club",
    "1330": "SELECT member_id FROM member WHERE first_name = 'Tyler' AND last_name = 'Hewitt';\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(i.amount) AS total_funds_received\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE m.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1332": "SELECT spent\nFROM budget\nWHERE category = 'Food'\n  AND link_to_event = (\n    SELECT event_id\n    FROM event\n    WHERE event_name = 'September Meeting'\n  );\t----- bird -----\tstudent_club",
    "1333": "SELECT z.city, z.state\nFROM member m\nJOIN zip_code z ON m.zip = z.zip_code\nWHERE m.position = 'President';\t----- bird -----\tstudent_club",
    "1334": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN zip_code z ON m.zip = z.zip_code\nWHERE z.state = 'Illinois';\t----- bird -----\tstudent_club",
    "1335": "SELECT b.spent\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.event_name = 'September Meeting'\n  AND b.category = 'Advertisement';\t----- bird -----\tstudent_club",
    "1336": "SELECT m.department\nFROM major m\nJOIN member mb ON m.major_id = mb.link_to_major\nWHERE mb.last_name IN ('Pierce', 'Guidi');\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(budget.amount) AS total_budgeted_amount\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'October Speaker';\t----- bird -----\tstudent_club",
    "1338": "SELECT \n    e.expense_id,\n    e.expense_description,\n    e.expense_date,\n    e.cost,\n    e.approved\nFROM \n    expense e\nJOIN \n    budget b ON e.link_to_budget = b.budget_id\nJOIN \n    event ev ON b.link_to_event = ev.event_id\nWHERE \n    ev.event_name = 'October Meeting' \n    AND ev.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "1339": "SELECT AVG(e.cost) AS average_cost\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE m.first_name = 'Elijah'\n  AND m.last_name = 'Allen'\n  AND (SUBSTR(e.expense_date, 5, 2) = '09' OR SUBSTR(e.expense_date, 5, 2) = '10');\t----- bird -----\tstudent_club",
    "1340": "SELECT \n    (SELECT SUM(b.spent)\n     FROM event e\n     JOIN budget b ON e.event_id = b.link_to_event\n     WHERE SUBSTR(e.event_date, 1, 4) = '2019') \n    - \n    (SELECT SUM(b.spent)\n     FROM event e\n     JOIN budget b ON e.event_id = b.link_to_event\n     WHERE SUBSTR(e.event_date, 1, 4) = '2020') AS difference_2019_2020;\t----- bird -----\tstudent_club",
    "1341": "SELECT location\nFROM event\nWHERE event_name = 'Spring Budget Review';\t----- bird -----\tstudent_club",
    "1342": "SELECT e.cost\nFROM event ev\nJOIN budget b ON ev.event_id = b.link_to_event\nJOIN expense e ON b.budget_id = e.link_to_budget\nWHERE ev.event_name = 'Poster'\n  AND ev.event_date = '2019-09-04'\n  AND e.expense_description = 'Poster';\t----- bird -----\tstudent_club",
    "1343": "SELECT remaining\nFROM budget\nWHERE category = 'Food'\n  AND amount = (\n    SELECT MAX(amount)\n    FROM budget\n    WHERE category = 'Food'\n  );\t----- bird -----\tstudent_club",
    "1344": "SELECT notes\nFROM income\nWHERE source = 'Fundraising'\n  AND date_received = '2019-09-14';\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(*) \nFROM major \nWHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1346": "SELECT phone\nFROM member\nWHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "1347": "SELECT z.county\nFROM member m\nJOIN zip_code z ON m.zip = z.zip_code\nWHERE m.first_name = 'Adela' AND m.last_name = 'O''Gallagher';\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) AS exceeded_budget_count\nFROM budget\nWHERE link_to_event = (\n    SELECT event_id\n    FROM event\n    WHERE event_name = 'November Meeting'\n)\nAND remaining < 0;\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(budget.amount) AS total_budget_amount\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE event.event_name = 'September Speaker';\t----- bird -----\tstudent_club",
    "1350": "SELECT e.status\nFROM expense ex\nJOIN budget b ON ex.link_to_budget = b.budget_id\nJOIN event e ON b.link_to_event = e.event_id\nWHERE ex.expense_description = 'Post Cards, Posters'\n  AND ex.expense_date = '2019-8-20';\t----- bird -----\tstudent_club",
    "1351": "SELECT m.major_name\nFROM member mb\nJOIN major m ON mb.link_to_major = m.major_id\nWHERE mb.first_name = 'Brent' AND mb.last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) AS medium_business_members\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Business'\n  AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1353": "SELECT z.type\nFROM member m\nJOIN zip_code z ON m.zip = z.zip_code\nWHERE m.first_name = 'Christof' AND m.last_name = 'Nielson';\t----- bird -----\tstudent_club",
    "1354": "SELECT m.major_name\nFROM member\nJOIN major m ON member.link_to_major = m.major_id\nWHERE member.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1355": "SELECT z.state\nFROM member m\nJOIN zip_code z ON m.zip = z.zip_code\nWHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "1356": "SELECT m.department\nFROM member\nJOIN major m ON member.link_to_major = m.major_id\nWHERE member.position = 'President';\t----- bird -----\tstudent_club",
    "1357": "SELECT i.date_received\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE m.first_name = 'Connor'\n  AND m.last_name = 'Hilton'\n  AND i.source = 'Dues';\t----- bird -----\tstudent_club",
    "1358": "SELECT m.first_name, m.last_name\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE i.source = 'Dues'\nORDER BY i.date_received ASC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "1359": "SELECT \n    (SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN b.amount ELSE 0 END) / \n     SUM(CASE WHEN e.event_name = 'October Meeting' THEN b.amount ELSE 0 END)) AS ratio\nFROM \n    budget b\nJOIN \n    event e ON b.link_to_event = e.event_id\nWHERE \n    b.category = 'Advertisement';\t----- bird -----\tstudent_club",
    "1360": "SELECT \n    (SUM(CASE WHEN b.category = 'Parking' THEN b.amount ELSE 0 END) * 100.0 / SUM(b.amount)) AS parking_percentage\nFROM \n    budget b\nJOIN \n    event e ON b.link_to_event = e.event_id\nWHERE \n    e.event_name = 'November Speaker';\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) AS total_pizza_cost\nFROM expense\nWHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city) AS city_count\nFROM zip_code\nWHERE county = 'Orange County' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "1363": "SELECT DISTINCT department\nFROM major\nWHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1364": "SELECT \n    z.city || ', ' || z.county || ', ' || z.state AS hometown\nFROM \n    member m\nJOIN \n    zip_code z ON m.zip = z.zip_code\nWHERE \n    m.first_name = 'Amy' AND m.last_name = 'Firth';\t----- bird -----\tstudent_club",
    "1365": "SELECT budget_id\nFROM budget\nORDER BY remaining ASC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "1366": "SELECT m.member_id, m.first_name, m.last_name, m.email\nFROM attendance a\nJOIN member m ON a.link_to_member = m.member_id\nWHERE a.link_to_event = (\n    SELECT event_id\n    FROM event\n    WHERE event_name = 'October Meeting'\n);\t----- bird -----\tstudent_club",
    "1367": "SELECT m.college\nFROM member mb\nJOIN major m ON mb.link_to_major = m.major_id\nGROUP BY m.college\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "1368": "SELECT m.major_name\nFROM member\nJOIN major m ON member.link_to_major = m.major_id\nWHERE member.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "1369": "SELECT \n    e.event_name, \n    MAX(b.amount) AS highest_budget\nFROM \n    budget b\nJOIN \n    event e ON b.link_to_event = e.event_id\nGROUP BY \n    e.event_id, e.event_name\nORDER BY \n    highest_budget DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "1370": "SELECT e.expense_id, e.expense_description, e.expense_date, e.cost, e.approved\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE m.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(DISTINCT link_to_member) AS number_of_attendees\nFROM attendance\nWHERE link_to_event = (\n    SELECT event_id\n    FROM event\n    WHERE event_name = 'Women''s Soccer'\n);\t----- bird -----\tstudent_club",
    "1372": "SELECT member_id\n   FROM member\n   WHERE first_name = 'Casey' AND last_name = 'Mason';\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(*) AS members_from_maryland\nFROM member\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE zip_code.state = 'Maryland';\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(DISTINCT a.link_to_event) AS event_count\nFROM attendance a\nJOIN member m ON a.link_to_member = m.member_id\nWHERE m.phone = '954-555-6240';\t----- bird -----\tstudent_club",
    "1375": "SELECT \n    member.first_name || ' ' || member.last_name AS full_name\nFROM \n    member\nJOIN \n    major ON member.link_to_major = major.major_id\nWHERE \n    major.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1376": "SELECT \n    e.event_id,\n    e.event_name,\n    b.spent,\n    b.amount,\n    (b.spent / b.amount) AS spend_to_budget_ratio\nFROM \n    event e\nJOIN \n    budget b ON e.event_id = b.link_to_event\nWHERE \n    e.status = 'Closed'\nORDER BY \n    spend_to_budget_ratio DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(*) AS president_count\nFROM member\nWHERE position = 'President';\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) AS highest_budget_spent\nFROM budget;\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(*) AS meeting_events_2020\nFROM event\nWHERE type = 'Meeting'\n  AND SUBSTR(event_date, 1, 4) = '2020';\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) AS total_spent_on_food\nFROM budget\nWHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1381": "SELECT m.first_name, m.last_name\nFROM attendance a\nJOIN member m ON a.link_to_member = m.member_id\nGROUP BY m.member_id\nHAVING COUNT(a.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "1382": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN major mj ON m.link_to_major = mj.major_id\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON a.link_to_event = e.event_id\nWHERE mj.major_name = 'Interior Design'\n  AND e.event_name = 'Community Theater';\t----- bird -----\tstudent_club",
    "1383": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN zip_code z ON m.zip = z.zip_code\nWHERE z.city = 'Georgetown' AND z.state = 'South Carolina';\t----- bird -----\tstudent_club",
    "1384": "SELECT SUM(i.amount) AS total_income\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE m.first_name = 'Grant' AND m.last_name = 'Gilmour';\t----- bird -----\tstudent_club",
    "1385": "SELECT m.first_name, m.last_name\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE i.amount > 40;\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(e.cost) AS total_expense\nFROM event e1\nJOIN budget b ON e1.event_id = b.link_to_event\nJOIN expense e ON b.budget_id = e.link_to_budget\nWHERE e1.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1387": "SELECT m.first_name || ' ' || m.last_name AS full_name\nFROM member m\nWHERE m.member_id = (\n    SELECT e.link_to_member\n    FROM expense e\n    WHERE e.link_to_budget = (\n        SELECT b.budget_id\n        FROM budget b\n        WHERE b.link_to_event = (\n            SELECT e.event_id\n            FROM event e\n            WHERE e.event_name = 'Yearly Kickoff'\n        )\n    )\n    LIMIT 1\n);\t----- bird -----\tstudent_club",
    "1388": "SELECT \n    m.first_name || ' ' || m.last_name AS full_name,\n    i.source\nFROM \n    member m\nJOIN \n    income i ON m.member_id = i.link_to_member\nWHERE \n    i.amount = (SELECT MAX(amount) FROM income);\t----- bird -----\tstudent_club",
    "1389": "SELECT e.event_name, SUM(ex.cost) AS total_cost\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nJOIN expense ex ON b.budget_id = ex.link_to_budget\nGROUP BY e.event_id\nORDER BY total_cost ASC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "1390": "SELECT \n    (SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN ex.cost ELSE 0 END) / SUM(ex.cost)) * 100 AS percentage\nFROM \n    expense ex\nJOIN \n    budget b ON ex.link_to_budget = b.budget_id\nJOIN \n    event e ON b.link_to_event = e.event_id;\t----- bird -----\tstudent_club",
    "1391": "SELECT\n    (SUM(CASE WHEN m.major_name = 'Finance' THEN 1 ELSE 0 END) * 1.0) /\n    NULLIF(SUM(CASE WHEN m.major_name = 'Physics' THEN 1 ELSE 0 END), 0) AS finance_to_physics_ratio\nFROM\n    member mem\nLEFT JOIN\n    major m ON mem.link_to_major = m.major_id;\t----- bird -----\tstudent_club",
    "1392": "SELECT source, SUM(amount) AS total_amount\nFROM income\nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30'\nGROUP BY source\nORDER BY total_amount DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "1393": "SELECT first_name || ' ' || last_name AS full_name, email\nFROM member\nWHERE position = 'Secretary';\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(*) AS physics_teaching_members\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(DISTINCT attendance.link_to_member) AS number_of_attendees\nFROM attendance\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event.event_name = 'Community Theater'\n  AND strftime('%Y', event.event_date) = '2019';\t----- bird -----\tstudent_club",
    "1396": "SELECT \n    COUNT(a.link_to_event) AS events_attended,\n    m2.major_name AS major\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN major m2 ON m.link_to_major = m2.major_id\nWHERE m.first_name = 'Luisa' AND m.last_name = 'Guidi';\t----- bird -----\tstudent_club",
    "1397": "SELECT \n    SUM(b.spent) / COUNT(DISTINCT b.link_to_event) AS average_spent_on_food_per_event\nFROM \n    budget b\nJOIN \n    event e ON b.link_to_event = e.event_id\nWHERE \n    b.category = 'Food' \n    AND e.status = 'Closed';\t----- bird -----\tstudent_club",
    "1398": "SELECT e.event_name\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE b.category = 'Advertisement'\n  AND b.spent = (\n    SELECT MAX(spent)\n    FROM budget\n    WHERE category = 'Advertisement'\n);\t----- bird -----\tstudent_club",
    "1399": "SELECT \n    a.link_to_event,\n    a.link_to_member,\n    e.event_name,\n    m.first_name || ' ' || m.last_name AS full_name\nFROM \n    attendance a\nJOIN \n    event e ON a.link_to_event = e.event_id\nJOIN \n    member m ON a.link_to_member = m.member_id\nWHERE \n    m.first_name = 'Maya' \n    AND m.last_name = 'Mclean'\n    AND e.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "1400": "SELECT \n    100.0 * \n    SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) / \n    COUNT(*) AS community_service_percentage\nFROM event\nWHERE event_date BETWEEN '2019-01-01' AND '2019-12-31';\t----- bird -----\tstudent_club",
    "1401": "SELECT e.cost\nFROM expense e\nJOIN budget b ON e.link_to_budget = b.budget_id\nJOIN event evt ON b.link_to_event = evt.event_id\nWHERE e.expense_description = 'Posters'\n  AND evt.event_name = 'September Speaker';\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size, COUNT(*) AS size_count\nFROM member\nGROUP BY t_shirt_size\nORDER BY size_count DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "1403": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed'\n  AND b.remaining < 0\nORDER BY b.remaining ASC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "1404": "SELECT \n    e.expense_description AS expense_type,\n    SUM(e.cost) AS total_cost\nFROM \n    expense e\nJOIN \n    budget b ON e.link_to_budget = b.budget_id\nJOIN \n    event ev ON b.link_to_event = ev.event_id\nWHERE \n    ev.event_name = 'October Meeting'\n    AND e.approved = 'Yes'\nGROUP BY \n    e.expense_description;\t----- bird -----\tstudent_club",
    "1405": "SELECT \n    category,\n    SUM(amount) AS amount_budgeted\nFROM \n    budget\nWHERE \n    link_to_event = (\n        SELECT event_id \n        FROM event \n        WHERE event_name = 'April Speaker'\n    )\nGROUP BY \n    category\nORDER BY \n    amount_budgeted ASC;\t----- bird -----\tstudent_club",
    "1406": "SELECT *\nFROM budget\nWHERE category = 'Food'\nORDER BY amount DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "1407": "SELECT *\nFROM budget\nWHERE category = 'Advertisement'\nORDER BY amount DESC\nLIMIT 3;\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(cost) AS total_parking_cost\nFROM expense\nWHERE expense_description = 'Parking';\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) AS total_expense\nFROM expense\nWHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1410": "SELECT \n    m.first_name || ' ' || m.last_name AS full_name,\n    SUM(e.cost) AS total_cost\nFROM \n    member m\nJOIN \n    expense e ON m.member_id = e.link_to_member\nWHERE \n    m.member_id = 'rec4BLdZHS2Blfp4v';\t----- bird -----\tstudent_club",
    "1411": "SELECT expense_description\nFROM expense\nWHERE link_to_member = (\n    SELECT member_id\n    FROM member\n    WHERE first_name = 'Sacha' AND last_name = 'Harrison'\n);\t----- bird -----\tstudent_club",
    "1412": "SELECT DISTINCT e.expense_description\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE m.t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1413": "SELECT DISTINCT m.zip\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE e.cost < 50;\t----- bird -----\tstudent_club",
    "1414": "SELECT m.major_name\nFROM member mb\nJOIN major m ON mb.link_to_major = m.major_id\nWHERE mb.first_name = 'Phillip' AND mb.last_name = 'Cullen';\t----- bird -----\tstudent_club",
    "1415": "SELECT m.position\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE ma.major_name = 'Business';\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) AS medium_business_members\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'Business'\n  AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1417": "SELECT DISTINCT e.type\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE b.remaining > 30;\t----- bird -----\tstudent_club",
    "1418": "SELECT DISTINCT b.category\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.location = 'MU 215';\t----- bird -----\tstudent_club",
    "1419": "SELECT b.category\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.event_date = '2020-03-24T12:00:00';\t----- bird -----\tstudent_club",
    "1420": "SELECT m.major_name\nFROM member mb\nJOIN major m ON mb.link_to_major = m.major_id\nWHERE mb.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1421": "SELECT \n    100.0 * COUNT(CASE WHEN m.link_to_major IS NOT NULL AND maj.major_name = 'Business' THEN 1 END) / COUNT(*) AS percentage_business_majors\nFROM member m\nLEFT JOIN major maj ON m.link_to_major = maj.major_id;\t----- bird -----\tstudent_club",
    "1422": "SELECT DISTINCT b.category\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.location = 'MU 215';\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*) \nFROM income\nWHERE amount = 50;\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) AS x_large_members\nFROM member\nWHERE position = 'Member'\n  AND t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(*) AS major_count\nFROM major\nWHERE college = 'College of Agriculture and Applied Sciences'\n  AND department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1426": "SELECT \n    m.last_name,\n    ma.department,\n    ma.college\nFROM \n    member m\nJOIN \n    major ma ON m.link_to_major = ma.major_id\nWHERE \n    ma.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1427": "SELECT DISTINCT b.category\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.type = 'Guest Speaker'\n  AND e.location = 'MU 215'\n  AND b.spent = 0;\t----- bird -----\tstudent_club",
    "1428": "SELECT \n    z.city,\n    z.state\nFROM \n    member m\nJOIN \n    major ma ON m.link_to_major = ma.major_id\nJOIN \n    zip_code z ON m.zip = z.zip_code\nWHERE \n    m.position = 'Member'\n    AND ma.department = 'Electrical and Computer Engineering Department';\t----- bird -----\tstudent_club",
    "1429": "SELECT m.member_id\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE m.position = 'Vice President'\n  AND ma.major_name = 'Student_Club';\t----- bird -----\tstudent_club",
    "1430": "SELECT m.last_name, m.position\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE e.expense_description = 'Pizza'\n  AND e.expense_date = '2019-09-10';\t----- bird -----\tstudent_club",
    "1431": "SELECT event_id FROM event WHERE event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "1432": "SELECT\n    100.0 * COUNT(CASE WHEN i.amount = 50 THEN 1 END) / COUNT(m.member_id) AS percentage\nFROM\n    member m\nLEFT JOIN\n    income i ON m.member_id = i.link_to_member\nWHERE\n    m.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1433": "SELECT DISTINCT state\nFROM zip_code\nWHERE type = 'PO Box';\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code\nFROM zip_code\nWHERE type = 'PO Box'\n  AND state = 'Puerto Rico';\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name\nFROM event\nWHERE type = 'Game'\n  AND status = 'Closed'\n  AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "1436": "Select `event_id` from the `event` table.\n- Join with `budget` using `budget.link_to_event = event.event_id`.\n- Join with `expense` using `expense.link_to_budget = budget.budget_id`.\n- Filter where `expense.cost > 50`.\n\n---\n\n### \u2705 **Final SQL Query**\n\n```sql\nSELECT DISTINCT e.event_id\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nJOIN expense ex ON b.budget_id = ex.link_to_budget\nWHERE ex.cost > 50;\t----- bird -----\tstudent_club",
    "1437": "SELECT \n    m.member_id,\n    m.first_name,\n    m.last_name,\n    e.expense_id,\n    e.expense_date,\n    e.cost,\n    e.approved,\n    a.link_to_event\nFROM \n    expense e\nJOIN \n    member m ON e.link_to_member = m.member_id\nJOIN \n    attendance a ON m.member_id = a.link_to_member\nWHERE \n    e.approved = 'true'\n    AND e.expense_date BETWEEN '2019-01-10' AND '2019-11-19';\t----- bird -----\tstudent_club",
    "1438": "SELECT m.college\nFROM member mb\nJOIN major m ON mb.link_to_major = m.major_id\nWHERE mb.first_name = 'Katy'\n  AND mb.link_to_major = 'rec1N0upiVLy5esTO';\t----- bird -----\tstudent_club",
    "1439": "SELECT m.phone\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE ma.major_name = 'Business'\n  AND ma.college = 'College of Agriculture and Applied Sciences';\t----- bird -----\tstudent_club",
    "1440": "SELECT DISTINCT m.email\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE e.expense_date BETWEEN '2019-09-10' AND '2019-11-19'\n  AND e.cost > 20;\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(*) AS education_members_count\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE major.major_name = 'education'\n  AND major.college = 'College of Education & Human Services';\t----- bird -----\tstudent_club",
    "1442": "SELECT \n    100.0 * \n    (SELECT COUNT(*) \n     FROM budget \n     WHERE remaining < 0) / \n    (SELECT COUNT(*) \n     FROM event) AS over_budget_percentage;\t----- bird -----\tstudent_club",
    "1443": "SELECT \n    event_id, \n    location, \n    status\nFROM \n    event\nWHERE \n    event_date BETWEEN '2019-11-01' AND '2020-03-31';\t----- bird -----\tstudent_club",
    "1444": "SELECT \n    expense_description,\n    AVG(cost) AS average_cost\nFROM \n    expense\nGROUP BY \n    expense_description\nHAVING \n    AVG(cost) > 50;\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name, last_name\nFROM member\nWHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1446": "SELECT \n    100.0 * SUM(CASE WHEN type = 'PO Box' THEN 1 ELSE 0 END) / COUNT(*) AS po_box_percentage\nFROM zip_code;\t----- bird -----\tstudent_club",
    "1447": "SELECT e.event_name, e.location\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE b.remaining > 0;\t----- bird -----\tstudent_club",
    "1448": "SELECT \n    e.event_name,\n    e.event_date\nFROM \n    expense e\nJOIN \n    budget b ON e.link_to_budget = b.budget_id\nJOIN \n    event e2 ON b.link_to_event = e2.event_id\nWHERE \n    e.expense_description = 'Pizza'\n    AND e.cost > 50\n    AND e.cost < 100;\t----- bird -----\tstudent_club",
    "1449": "SELECT \n    m.first_name || ' ' || m.last_name AS full_name,\n    mj.major_name AS major\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nJOIN major mj ON m.link_to_major = mj.major_id\nWHERE e.cost > 100;\t----- bird -----\tstudent_club",
    "1450": "SELECT \n    e.event_id,\n    z.city,\n    z.state AS country\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON a.link_to_event = e.event_id\nJOIN zip_code z ON m.zip = z.zip_code\nGROUP BY e.event_id, z.city, z.state\nHAVING COUNT(i.income_id) > 40;\t----- bird -----\tstudent_club",
    "1451": "SELECT \n    m.member_id,\n    m.first_name || ' ' || m.last_name AS full_name,\n    SUM(e.cost) AS total_cost,\n    COUNT(DISTINCT e.link_to_event) AS event_count\nFROM \n    expense e\nJOIN \n    member m ON e.link_to_member = m.member_id\nGROUP BY \n    m.member_id\nHAVING \n    COUNT(DISTINCT e.link_to_event) > 1\nORDER BY \n    total_cost DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "1452": "SELECT \n    SUM(e.cost) / COUNT(DISTINCT e.link_to_event) AS average_amount_paid\nFROM \n    member m\nJOIN \n    expense e ON m.member_id = e.link_to_member\nWHERE \n    m.position != 'Member';\t----- bird -----\tstudent_club",
    "1453": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nJOIN expense ex ON b.budget_id = ex.link_to_budget\nWHERE b.category = 'Parking'\nGROUP BY e.event_id\nHAVING SUM(ex.cost) < (\n    SELECT AVG(cost)\n    FROM expense ex2\n    JOIN budget b2 ON ex2.link_to_budget = b2.budget_id\n    WHERE b2.category = 'Parking'\n);\t----- bird -----\tstudent_club",
    "1454": "SELECT \n    (SUM(e.cost) / COUNT(DISTINCT e.link_to_event)) * 100 AS percentage_cost_per_meeting\nFROM \n    event ev\nJOIN \n    expense e ON ev.event_id = e.link_to_event\nWHERE \n    ev.type = 'Meeting';\t----- bird -----\tstudent_club",
    "1455": "SELECT \n    b.budget_id,\n    SUM(e.cost) AS total_cost\nFROM \n    expense e\nJOIN \n    budget b ON e.link_to_budget = b.budget_id\nWHERE \n    e.expense_description = 'Water, chips, cookies'\nGROUP BY \n    b.budget_id\nORDER BY \n    total_cost DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "1456": "SELECT \n    m.first_name || ' ' || m.last_name AS full_name,\n    SUM(e.cost) AS total_spent\nFROM \n    expense e\nJOIN \n    member m ON e.link_to_member = m.member_id\nGROUP BY \n    m.member_id, m.first_name, m.last_name\nORDER BY \n    total_spent DESC\nLIMIT 5;\t----- bird -----\tstudent_club",
    "1457": "SELECT \n    m.first_name || ' ' || m.last_name AS full_name,\n    m.phone AS contact_number\nFROM \n    expense e\nJOIN \n    member m ON e.link_to_member = m.member_id\nWHERE \n    e.cost > (SELECT AVG(cost) FROM expense);\t----- bird -----\tstudent_club",
    "1458": "SELECT \n    (nj_count * 100.0 / total_members) - (vt_count * 100.0 / total_members) AS percentage_difference\nFROM\n    (SELECT \n        COUNT(CASE WHEN z.state = 'New Jersey' AND m.position = 'Member' THEN 1 END) AS nj_count,\n        COUNT(CASE WHEN z.state = 'Vermont' AND m.position = 'Member' THEN 1 END) AS vt_count,\n        COUNT(CASE WHEN m.position = 'Member' THEN 1 END) AS total_members\n     FROM \n        member m\n     LEFT JOIN \n        zip_code z ON m.zip = z.zip_code\n    ) subquery;\t----- bird -----\tstudent_club",
    "1459": "SELECT \n    m.member_id,\n    maj.major_name AS major,\n    maj.department\nFROM \n    member m\nJOIN \n    major maj ON m.link_to_major = maj.major_id\nWHERE \n    m.first_name = 'Garrett' AND m.last_name = 'Gerke';\t----- bird -----\tstudent_club",
    "1460": "SELECT \n    m.first_name || ' ' || m.last_name AS full_name,\n    e.cost\nFROM \n    expense e\nJOIN \n    member m ON e.link_to_member = m.member_id\nWHERE \n    e.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "1461": "SELECT m.last_name, m.phone\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE ma.major_name = 'Elementary Education';\t----- bird -----\tstudent_club",
    "1462": "SELECT b.category, b.amount\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.event_name = 'January Speaker';\t----- bird -----\tstudent_club",
    "1463": "SELECT DISTINCT e.event_name\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE b.category = 'Food';\t----- bird -----\tstudent_club",
    "1464": "SELECT \n    m.first_name || ' ' || m.last_name AS full_name,\n    i.amount\nFROM \n    income i\nJOIN \n    member m ON i.link_to_member = m.member_id\nWHERE \n    i.date_received = '9/9/2019';\t----- bird -----\tstudent_club",
    "1465": "SELECT b.category\nFROM expense e\nJOIN budget b ON e.link_to_budget = b.budget_id\nWHERE e.expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "1466": "SELECT \n    m.first_name || ' ' || m.last_name AS full_name,\n    mj.college\nFROM \n    member m\nJOIN \n    major mj ON m.link_to_major = mj.major_id\nWHERE \n    m.position = 'Secretary';\t----- bird -----\tstudent_club",
    "1467": "SELECT \n    e.event_name,\n    SUM(b.spent) AS total_spent_on_speaker_gifts\nFROM \n    budget b\nJOIN \n    event e ON b.link_to_event = e.event_id\nWHERE \n    b.category = 'Speaker Gifts'\nGROUP BY \n    e.event_name;\t----- bird -----\tstudent_club",
    "1468": "SELECT z.city AS hometown\nFROM member m\nJOIN zip_code z ON m.zip = z.zip_code\nWHERE m.first_name = 'Garrett' AND m.last_name = 'Gerke';\t----- bird -----\tstudent_club",
    "1469": "SELECT \n    member.first_name, \n    member.last_name, \n    member.position\nFROM \n    member\nJOIN \n    zip_code ON member.zip = zip_code.zip_code\nWHERE \n    zip_code.zip_code = 28092\n    AND zip_code.city = 'Lincolnton'\n    AND zip_code.state = 'North Carolina';\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(*) AS PremiumGasStationsInCZE\nFROM gasstations\nWHERE Country = 'CZE' AND Segment = 'Premium';\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT\n    (SELECT COUNT(*) FROM (SELECT DISTINCT CustomerID FROM customers WHERE Currency = 'EUR')) * 1.0 /\n    (SELECT COUNT(*) FROM (SELECT DISTINCT CustomerID FROM customers WHERE Currency = 'CZK')) AS EUR_to_CZK_Ratio;\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT \n    ym.CustomerID,\n    SUM(ym.Consumption) AS TotalConsumption\nFROM \n    yearmonth ym\nJOIN \n    gasstations gs ON ym.GasStationID = gs.GasStationID\nWHERE \n    gs.Country = 'LAM'\n    AND ym.Date BETWEEN '201201' AND '201212'\nGROUP BY \n    ym.CustomerID\nORDER BY \n    TotalConsumption ASC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(Consumption) AS AverageMonthlyConsumption\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE c.Segment = 'SME'\n  AND Date BETWEEN '201301' AND '201312';\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT \n    y.CustomerID,\n    SUM(y.Consumption) AS TotalConsumption\nFROM \n    yearmonth y\nJOIN \n    customers c ON y.CustomerID = c.CustomerID\nWHERE \n    c.Currency = 'CZK'\n    AND y.Date BETWEEN '201101' AND '201112'\nGROUP BY \n    y.CustomerID\nORDER BY \n    TotalConsumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(*) AS CustomerCount\nFROM (\n    SELECT y.CustomerID\n    FROM yearmonth y\n    JOIN customers c ON y.CustomerID = c.CustomerID\n    WHERE c.Segment = 'KAM'\n      AND y.Date BETWEEN '201201' AND '201212'\n    GROUP BY y.CustomerID\n    HAVING SUM(y.Consumption) < 30000\n) AS filtered_customers;\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT \n    SUM(CASE WHEN c.Currency = 'CZK' THEN ym.Consumption ELSE 0 END) -\n    SUM(CASE WHEN c.Currency = 'EUR' THEN ym.Consumption ELSE 0 END) AS ConsumptionDifference\nFROM \n    customers c\nJOIN \n    yearmonth ym ON c.CustomerID = ym.CustomerID\nWHERE \n    SUBSTR(ym.Date, 1, 4) = '2012';\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT \n    strftime('%Y', t.Date) AS Year,\n    SUM(t.Amount) AS TotalGasUse\nFROM \n    transactions_1k t\nJOIN \n    customers c ON t.CustomerID = c.CustomerID\nWHERE \n    c.Currency = 'EUR'\nGROUP BY \n    Year\nORDER BY \n    TotalGasUse DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT c.Segment, SUM(ym.Consumption) AS TotalConsumption\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nGROUP BY c.Segment\nORDER BY TotalConsumption ASC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT \n    SUBSTR(ym.Date, 1, 4) AS Year,\n    SUM(ym.Consumption) AS TotalConsumption\nFROM \n    yearmonth ym\nJOIN \n    customers c ON ym.CustomerID = c.CustomerID\nWHERE \n    c.Currency = 'CZK'\nGROUP BY \n    SUBSTR(ym.Date, 1, 4)\nORDER BY \n    TotalConsumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT \n    SUBSTR(ym.Date, 5, 2) AS Month,\n    SUM(ym.Consumption) AS TotalConsumption\nFROM \n    yearmonth ym\nJOIN \n    customers c ON ym.CustomerID = c.CustomerID\nWHERE \n    c.Segment = 'SME'\n    AND SUBSTR(ym.Date, 1, 4) = '2013'\nGROUP BY \n    SUBSTR(ym.Date, 5, 2)\nORDER BY \n    TotalConsumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1481": "WITH YearlyConsumption AS (\n    SELECT \n        c.Segment,\n        ym.CustomerID,\n        SUM(ym.Consumption) AS TotalConsumption\n    FROM yearmonth ym\n    JOIN customers c ON ym.CustomerID = c.CustomerID\n    WHERE substr(ym.Date, 1, 4) = '2013' AND c.Currency = 'CZK'\n    GROUP BY c.Segment, ym.CustomerID\n),\nLowestConsumers AS (\n    SELECT \n        Segment,\n        CustomerID,\n        TotalConsumption\n    FROM (\n        SELECT \n            Segment,\n            CustomerID,\n            TotalConsumption,\n            RANK() OVER (PARTITION BY Segment ORDER BY TotalConsumption ASC) AS rnk\n        FROM YearlyConsumption\n    )\n    WHERE rnk = 1\n),\nSegmentAverages AS (\n    SELECT \n        Segment,\n        AVG(TotalConsumption) AS AvgLowestConsumption\n    FROM LowestConsumers\n    GROUP BY Segment\n)\nSELECT\n    (SELECT AvgLowestConsumption FROM SegmentAverages WHERE Segment = 'SME') - \n    (SELECT AvgLowestConsumption FROM SegmentAverages WHERE Segment = 'LAM') AS SME_LAM_Diff,\n    \n    (SELECT AvgLowestConsumption FROM SegmentAverages WHERE Segment = 'LAM') - \n    (SELECT AvgLowestConsumption FROM SegmentAverages WHERE Segment = 'KAM') AS LAM_KAM_Diff,\n    \n    (SELECT AvgLowestConsumption FROM SegmentAverages WHERE Segment = 'KAM') - \n    (SELECT AvgLowestConsumption FROM SegmentAverages WHERE Segment = 'SME') AS KAM_SME_Diff;\t----- bird -----\tdebit_card_specializing",
    "1482": "WITH yearly_consumption AS (\n    SELECT \n        c.Segment,\n        SUBSTR(y.Date, 1, 4) AS Year,\n        SUM(y.Consumption) AS TotalConsumption\n    FROM yearmonth y\n    JOIN customers c ON y.CustomerID = c.CustomerID\n    WHERE c.Currency = 'EUR'\n      AND c.Segment IN ('SME', 'LAM', 'KAM')\n      AND SUBSTR(y.Date, 1, 4) IN ('2012', '2013')\n    GROUP BY c.Segment, SUBSTR(y.Date, 1, 4)\n),\nsegment_growth AS (\n    SELECT \n        Segment,\n        SUM(CASE WHEN Year = '2012' THEN TotalConsumption ELSE 0 END) AS Consumption2012,\n        SUM(CASE WHEN Year = '2013' THEN TotalConsumption ELSE 0 END) AS Consumption2013\n    FROM yearly_consumption\n    GROUP BY Segment\n)\nSELECT \n    Segment,\n    Consumption2012,\n    Consumption2013,\n    (Consumption2013 - Consumption2012) AS Increase,\n    ROUND(\n        ((Consumption2013 - Consumption2012) / NULLIF(Consumption2013, 0)) * 100, \n        2\n    ) AS PercentageIncrease\nFROM segment_growth\nORDER BY PercentageIncrease DESC;\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nWHERE CustomerID = 6\n  AND Date BETWEEN '201308' AND '201311';\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT \n    (SELECT COUNT(*) \n     FROM gasstations \n     WHERE Country = 'CZE' AND Segment = 'discount') \n    - \n    (SELECT COUNT(*) \n     FROM gasstations \n     WHERE Country = 'SVK' AND Segment = 'discount') AS MoreDiscountGasStationsInCZE;\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT \n    (SELECT Consumption FROM yearmonth WHERE CustomerID = 7 AND Date = '201304') -\n    (SELECT Consumption FROM yearmonth WHERE CustomerID = 5 AND Date = '201304') AS Difference;\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT\n    COUNT(DISTINCT CASE WHEN c.Currency = 'CZK' THEN t.CustomerID END) AS SMEs_CZK,\n    COUNT(DISTINCT CASE WHEN c.Currency = 'EUR' THEN t.CustomerID END) AS SMEs_EUR,\n    COUNT(DISTINCT CASE WHEN c.Currency = 'CZK' THEN t.CustomerID END) -\n    COUNT(DISTINCT CASE WHEN c.Currency = 'EUR' THEN t.CustomerID END) AS More_SMEs_CZK\nFROM\n    transactions_1k t\nJOIN\n    customers c ON t.CustomerID = c.CustomerID\nWHERE\n    c.Segment = 'SME';\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT c.CustomerID\nFROM customers c\nJOIN yearmonth ym ON c.CustomerID = ym.CustomerID\nWHERE c.Segment = 'LAM'\n  AND c.Currency = 'Euro'\n  AND ym.Date = '201310'\nORDER BY ym.Consumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT \n    CustomerID, \n    SUM(Consumption) AS TotalConsumption\nFROM \n    yearmonth\nGROUP BY \n    CustomerID\nORDER BY \n    TotalConsumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(y.Consumption) AS TotalKAMConsumption\nFROM customers c\nJOIN yearmonth y ON c.CustomerID = y.CustomerID\nWHERE c.Segment = 'KAM'\n  AND y.Date = '201305';\t----- bird -----\tdebit_card_specializing",
    "1490": "with Consumption > 46.73 / Total LAM customers) * 100\n```\n\n---\n\n### \u2705 **Final SQL Query:**\n\n```sql\nSELECT\n    (COUNT(DISTINCT CASE WHEN ym.Consumption > 46.73 THEN ym.CustomerID END) * 100.0 / COUNT(DISTINCT c.CustomerID)) AS Percentage\nFROM\n    customers c\nLEFT JOIN\n    yearmonth ym ON c.CustomerID = ym.CustomerID\nWHERE\n    c.Segment = 'LAM';\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT \n    Country,\n    COUNT(*) AS ValueForMoneyGasStations\nFROM \n    gasstations\nWHERE \n    Segment = 'Value for Money'\nGROUP BY \n    Country;\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT \n    100.0 * COUNT(DISTINCT CASE WHEN c.Currency = 'Euro' THEN t.CustomerID END) / COUNT(DISTINCT t.CustomerID) AS Percentage_KAM_Uses_Euro\nFROM \n    transactions_1k t\nJOIN \n    customers c ON t.CustomerID = c.CustomerID\nWHERE \n    c.Segment = 'KAM';\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT\n    100.0 * COUNT(CASE WHEN Consumption > 528.3 THEN 1 END) / COUNT(*) AS percentage\nFROM\n    yearmonth\nWHERE\n    Date = '201202';\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT \n    100.0 * \n    SUM(CASE WHEN Segment = 'Premium' THEN 1 ELSE 0 END) / \n    COUNT(*) AS PremiumPercentage\nFROM gasstations\nWHERE Country = 'Slovakia';\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT CustomerID, Consumption\nFROM yearmonth\nWHERE Date = '201309'\nORDER BY Consumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT \n    c.Segment,\n    SUM(y.Consumption) AS TotalConsumption\nFROM \n    yearmonth y\nJOIN \n    customers c ON y.CustomerID = c.CustomerID\nWHERE \n    y.Date = '201309'\nGROUP BY \n    c.Segment\nORDER BY \n    TotalConsumption ASC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT c.CustomerID\nFROM customers c\nJOIN yearmonth ym ON c.CustomerID = ym.CustomerID\nWHERE c.Segment = 'SME'\n  AND ym.Date = '201206'\nORDER BY ym.Consumption ASC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) AS HighestMonthlyConsumption\nFROM yearmonth\nWHERE substr(Date, 1, 4) = '2012';\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT \n    CustomerID, \n    Date, \n    Consumption\nFROM \n    yearmonth\nWHERE \n    CustomerID IN (\n        SELECT CustomerID \n        FROM customers \n        WHERE Currency = 'EUR'\n    )\nORDER BY \n    Consumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT DISTINCT p.Description\nFROM transactions_1k t\nJOIN products p ON t.ProductID = p.ProductID\nWHERE strftime('%Y-%m', t.Date) = '2013-09';\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT g.Country\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.Date = '201306';\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT DISTINCT g.ChainID\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE c.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT DISTINCT p.Description\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nJOIN products p ON t.ProductID = p.ProductID\nWHERE c.Currency = 'Euro';\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(Amount * Price) AS AverageTotalPrice\nFROM transactions_1k\nWHERE strftime('%Y-%m', Date) = '2012-01';\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT c.CustomerID) AS EuroCustomersWithHighConsumption\nFROM customers c\nJOIN yearmonth ym ON c.CustomerID = ym.CustomerID\nWHERE c.Currency = 'EUR'\n  AND ym.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT DISTINCT p.Description\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nJOIN products p ON t.ProductID = p.ProductID\nWHERE g.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT t.Time\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.ChainID = 11;\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(*) AS TransactionCount\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'CZE'\n  AND t.Price > 1000;\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(*) AS TransactionCount\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'CZE'\n  AND t.Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(t.Amount * t.Price) AS AverageTotalPrice\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(total_price) AS AverageTotalPrice\nFROM (\n    SELECT t.CustomerID, SUM(t.Amount * t.Price) AS total_price\n    FROM transactions_1k t\n    JOIN customers c ON t.CustomerID = c.CustomerID\n    WHERE c.Currency = 'Euro'\n    GROUP BY t.CustomerID\n);\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT \n    CustomerID,\n    SUM(Amount * Price) AS TotalAmount\nFROM \n    transactions_1k\nWHERE \n    Date = '2012-08-25'\nGROUP BY \n    CustomerID\nORDER BY \n    TotalAmount DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT g.Country\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.Date = '2012-08-25'\n  AND t.Amount > 0  -- Ensures it's a paid transaction\nORDER BY t.Time ASC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT c.Currency\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-24'\n  AND t.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT c.Segment\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-23'\n  AND t.Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(*) AS MorningCZKTransactions\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-26'\n  AND t.Time < '13:00:00'\n  AND c.Currency = 'CZK';\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT MIN(CustomerID) FROM customers;\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT gs.Country\nFROM transactions_1k t\nJOIN gasstations gs ON t.GasStationID = gs.GasStationID\nWHERE t.Date = '2012-08-24'\n  AND t.Time = '12:42:00';\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID\nFROM transactions_1k\nWHERE Date = '2012-08-23'\n  AND Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1520": "WITH CustomerSpentOnDate AS (\n    SELECT CustomerID\n    FROM transactions_1k\n    WHERE Date = '2012-08-24'\n      AND Price * Amount = 124.05\n)\n\n-- Step 2: Use that CustomerID to find all transactions in January 2012\nSELECT \n    Date,\n    Price * Amount AS Expense\nFROM \n    transactions_1k\nWHERE \n    CustomerID = (SELECT CustomerID FROM CustomerSpentOnDate)\n    AND Date BETWEEN '2012-01-01' AND '2012-01-31'\nORDER BY \n    Date;\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(*) AS TransactionCount\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.Date = '2012-08-26'\n  AND t.Time BETWEEN '08:00:00' AND '09:00:00'\n  AND g.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT c.Currency\nFROM customers c\nJOIN yearmonth ym ON c.CustomerID = ym.CustomerID\nWHERE ym.Date = '201306' AND ym.Consumption = 214582.17;\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT DISTINCT g.Country\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.CardID = 667467;\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT \n    t.CustomerID,\n    g.Country AS Nationality\nFROM \n    transactions_1k t\nJOIN \n    gasstations g ON t.GasStationID = g.GasStationID\nWHERE \n    t.Date = '2012-08-24'\n    AND t.Price * t.Amount = 548.4;\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT \n    100.0 * COUNT(CASE WHEN c.Currency = 'EUR' THEN 1 END) / COUNT(DISTINCT t.CustomerID) AS EUR_Percentage\nFROM transactions_1k t\nLEFT JOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
    "1526": "WITH CustomerInfo AS (\n    SELECT CustomerID\n    FROM transactions_1k\n    WHERE Date = '2012-08-25' AND Price * Amount = 634.8\n),\nConsumption2012 AS (\n    SELECT SUM(Consumption) AS Total2012\n    FROM yearmonth y\n    JOIN CustomerInfo c ON y.CustomerID = c.CustomerID\n    WHERE Date LIKE '2012-%'\n),\nConsumption2013 AS (\n    SELECT SUM(Consumption) AS Total2013\n    FROM yearmonth y\n    JOIN CustomerInfo c ON y.CustomerID = c.CustomerID\n    WHERE Date LIKE '2013-%'\n)\nSELECT \n    (Total2012 - Total2013) / Total2012 AS ConsumptionDecreaseRate\nFROM Consumption2012, Consumption2013;\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT \n    GasStationID,\n    SUM(Amount * Price) AS TotalRevenue\nFROM \n    transactions_1k\nGROUP BY \n    GasStationID\nORDER BY \n    TotalRevenue DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT\n    100.0 * \n    CAST(COUNT(DISTINCT CASE WHEN c.Segment = 'premium' THEN c.CustomerID END) AS REAL) / \n    NULLIF(COUNT(DISTINCT c.CustomerID), 0) AS premium_percentage\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(Price) AS TotalSpent\nFROM transactions_1k\nWHERE CustomerID = 38508;\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT \n    p.Description AS ProductName,\n    SUM(t.Amount) AS TotalUnitsSold\nFROM \n    transactions_1k t\nJOIN \n    products p ON t.ProductID = p.ProductID\nGROUP BY \n    p.ProductID, p.Description\nORDER BY \n    TotalUnitsSold DESC\nLIMIT 5;\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT \n    t.CustomerID,\n    c.Currency,\n    SUM(t.Price * t.Amount) AS TotalSpent,\n    SUM(t.Price * t.Amount) / SUM(t.Amount) AS AvgPricePerItem\nFROM \n    transactions_1k t\nJOIN \n    customers c ON t.CustomerID = c.CustomerID\nGROUP BY \n    t.CustomerID, c.Currency\nORDER BY \n    TotalSpent DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT g.Country\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.ProductID = 2\n  AND t.Price = (\n    SELECT MAX(Price)\n    FROM transactions_1k\n    WHERE ProductID = 2\n)\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT \n    ym.CustomerID,\n    ym.Consumption\nFROM \n    yearmonth ym\nWHERE \n    ym.Date = '201208'\n    AND ym.CustomerID IN (\n        SELECT \n            t.CustomerID\n        FROM \n            transactions_1k t\n        WHERE \n            t.ProductID = 5\n            AND t.Price / t.Amount > 29.00\n        GROUP BY \n            t.CustomerID\n    );\t----- bird -----\tdebit_card_specializing"
}